{"kind":"Notebook","sha256":"31d22855aac69ef42e1b22f627170a4f72c56f303496f172d85bf25740e7896a","slug":"baltrad-parallel-processing","location":"/notebooks/baltrad/baltrad_short_course/3_BALTRAD_parallel_processing.ipynb","dependencies":[],"frontmatter":{"title":"Parallel processing","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"3_BALTRAD_parallel_processing.ipynb","url":"/erad2024/build/3_BALTRAD_parallel_p-604d1e92b91f703253dbcac9c21df5f0.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The default VM setup is to use a single CPU core. In order to demonstrate the power of parallel processing, you must first determine whether your physical hardware has more than a single core.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OVRVVTnQLO"}],"key":"x9oIMQFvmt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"On Linux this is done in the terminal with the ‘nproc’ command.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KVgYsgZsvS"}],"key":"HmOXJvG2Lg"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"On Mac this is done in the terminal with the ‘sysctl -n hw.ncpu’ command.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"N7ftIKJnOQ"}],"key":"peG8QOvWUz"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"On Windows this is done graphically using the Task Manager’s Performance tab.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"HQdH02qAB3"}],"key":"jlpRlUIew4"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"We want tune our VM to harness the power of several CPUs. Follow the following steps:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"j00BeXGDVq"}],"key":"rL8zgKUMoA"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Shut down the IPython notebook Server (Ctrl-C, answer yes)","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"z64BvA4nvK"}],"key":"mVk1xkFYGo"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Shutdown the VM (click the X button in the VM window, choose power down the machine)","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"RwWwQGySUY"}],"key":"PIEvEMTtsk"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Select the VM in the VirtualBox Manager Window, from the menu choose Machine->Setting","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"wJvAh2BCQC"}],"key":"MN798I3h7B"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Choose the System Tab, then Processor, use the slider to set the number of Processor to 2, 4, or 8 depending on your system resources.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"hFDkcnG2sg"}],"key":"oAPqlhZEEr"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Click Ok, and then start the machine","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"BlHNGrrCNL"}],"key":"xxaaXIauA4"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Login, use the start_notebook.sh script to start the IPython server, start the notebook and you should have multiple processors!","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"HDfhTz7OOl"}],"key":"OPHxU4osHU"}],"key":"NnG7201pvV"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"RELOAD THIS PAGE!","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"SZ5SutjSrH"}],"key":"WI3tWUDRmZ"}],"key":"Ewqnx0ft0d"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fev8D1SAbZ"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"xuMuidEomR"}],"key":"jNp9mcEklT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:59:25.609486Z","iopub.status.busy":"2024-08-16T11:59:25.609086Z","iopub.status.idle":"2024-08-16T11:59:31.120566Z","shell.execute_reply":"2024-08-16T11:59:31.119937Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/baltrad_short_course/\"\n!mkdir -p data\nfiles = [\n    \"seang.h5\",\n    \"searl.h5\",\n    \"sease.h5\",\n    \"sehud.h5\",\n    \"sekir.h5\",\n    \"sekkr.h5\",\n    \"selek.h5\",\n    \"selul.h5\",\n    \"seosu.h5\",\n    \"sevar.h5\",\n    \"sevil.h5\",\n]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(\n            f\"{URL}{file0}\", os.path.join(\"data\", Path(file).name)\n        )","key":"Gp076a5yA4"},{"type":"output","id":"8SFcISxvJWC2ODQOlYl7q","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/seang.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/searl.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sease.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sehud.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sekkr.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/selek.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/selul.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/seosu.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sevar.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sevil.h5\n"}],"key":"nZ8dbnLvF3"}],"key":"jI9LGXLpbc"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Verify from Python the number of CPU cores at our disposal","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cju9DL082h"}],"identifier":"verify-from-python-the-number-of-cpu-cores-at-our-disposal","label":"Verify from Python the number of CPU cores at our disposal","html_id":"verify-from-python-the-number-of-cpu-cores-at-our-disposal","implicit":true,"key":"McPleMPoTS"}],"key":"x1LPldu59T"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:59:31.123288Z","iopub.status.busy":"2024-08-16T11:59:31.122887Z","iopub.status.idle":"2024-08-16T11:59:31.128319Z","shell.execute_reply":"2024-08-16T11:59:31.127866Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import multiprocessing\n\nprint(\"We have %i cores to play with!\" % multiprocessing.cpu_count())","key":"dlJkDI526o"},{"type":"output","id":"1UeJ8YTDYweQCDstU1djD","data":[{"name":"stdout","output_type":"stream","text":"We have 4 cores to play with!\n"}],"key":"q1JuaXK1Ey"}],"key":"i0bcNQVEVt"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Yay! Now we’re going to set up some rudimentary functionality that will allow us to distribute a processing load among our cores.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r0DWpGk4FA"}],"key":"JUziLDfOIA"}],"key":"S2AQ9PgxXu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define a generator","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hnURePEaaC"}],"identifier":"define-a-generator","label":"Define a generator","html_id":"define-a-generator","implicit":true,"key":"koA2z5CSHg"}],"key":"xVOj1J5mJw"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:59:31.130213Z","iopub.status.busy":"2024-08-16T11:59:31.130045Z","iopub.status.idle":"2024-08-16T11:59:31.220109Z","shell.execute_reply":"2024-08-16T11:59:31.219546Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport _raveio, odc_polarQC\n\n# Specify the processing chain\nodc_polarQC.algorithm_ids = [\n    \"ropo\",\n    \"beamb\",\n    \"radvol-att\",\n    \"radvol-broad\",\n    \"rave-overshooting\",\n    \"qi-total\",\n]\n\n\n# Run processing chain on a single file. Return an output file string.\ndef generate(file_string):\n    rio = _raveio.open(file_string)\n\n    pvol = rio.object\n    pvol = odc_polarQC.QC(pvol)\n    rio.object = pvol\n\n    # Derive an output file name\n    path, fstr = os.path.split(file_string)\n    ofstr = os.path.join(path, \"qc_\" + fstr)\n\n    rio.save(ofstr)\n    return ofstr","key":"NKG994pBDs"},{"type":"output","id":"aa-V_pg6lH2qoi21ZLrmt","data":[],"key":"EJIpAAUVRy"}],"key":"r2c4YGDDpu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Feed the generator, sequentially","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YfQeDdcNDF"}],"identifier":"feed-the-generator-sequentially","label":"Feed the generator, sequentially","html_id":"feed-the-generator-sequentially","implicit":true,"key":"OD7ZUfP8UJ"}],"key":"SaS2vSzsLe"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:59:31.222631Z","iopub.status.busy":"2024-08-16T11:59:31.222240Z","iopub.status.idle":"2024-08-16T12:00:22.294054Z","shell.execute_reply":"2024-08-16T12:00:22.293532Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import glob, time\n\nifstrs = glob.glob(\"data/se*.h5\")\nbefore = time.time()\nfor fstr in ifstrs:\n    print(fstr, generate(fstr))\nafter = time.time()\n\nprint(\"Processing time: %3.2f seconds\" % (after - before))","key":"Xrybya7wbj"},{"type":"output","id":"q06vyGKhao6ngGw1jgVcB","data":[{"name":"stdout","output_type":"stream","text":"data/sease.h5 data/qc_sease.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sehud.h5 data/qc_sehud.h5\n"},{"name":"stdout","output_type":"stream","text":"data/searl.h5 data/qc_searl.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sevar.h5 data/qc_sevar.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sevil.h5 data/qc_sevil.h5\n"},{"name":"stdout","output_type":"stream","text":"data/selul.h5 data/qc_selul.h5\n"},{"name":"stdout","output_type":"stream","text":"data/seang.h5 data/qc_seang.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sekkr.h5 data/qc_sekkr.h5\n"},{"name":"stdout","output_type":"stream","text":"data/seosu.h5 data/qc_seosu.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sekir.h5 data/qc_sekir.h5\n"},{"name":"stdout","output_type":"stream","text":"data/selek.h5 data/qc_selek.h5\nProcessing time: 51.07 seconds\n"}],"key":"l024ad3u7E"}],"key":"oDQ710wxwo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Mental note: repeat once!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kYM7jny4Vq"}],"key":"MXBnOcuKEc"}],"key":"k5qo48GRV3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Multiprocess the generator","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qCVFU9vJzm"}],"identifier":"multiprocess-the-generator","label":"Multiprocess the generator","html_id":"multiprocess-the-generator","implicit":true,"key":"aQNkfxaBdT"}],"key":"DcIsEU8rcs"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T12:00:22.296166Z","iopub.status.busy":"2024-08-16T12:00:22.295993Z","iopub.status.idle":"2024-08-16T12:00:22.299089Z","shell.execute_reply":"2024-08-16T12:00:22.298658Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Both input and output are a list of file strings\ndef multi_generate(fstrs, procs=None):\n    pool = multiprocessing.Pool(\n        procs\n    )  # Pool of processors. Defaults to all available logical cores\n\n    results = []\n    # chunksize=1 means feed a process a new job as soon as the process is idle.\n    # In our case, this restricts the queue to one \"dispatcher\" which is faster.\n    r = pool.map_async(generate, fstrs, chunksize=1, callback=results.append)\n    r.wait()\n\n    return results[0]","key":"B7vDDDN8vw"},{"type":"output","id":"YFM_8M5zvbMbqlZZVaw-a","data":[],"key":"XnyEPOtRCR"}],"key":"cCEvmL4Pad"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Feed the monster, asynchronously!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y1ZlrP8pDs"}],"identifier":"feed-the-monster-asynchronously","label":"Feed the monster, asynchronously!","html_id":"feed-the-monster-asynchronously","implicit":true,"key":"A3D0QHCOhB"}],"key":"ejzmrXlgeb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T12:00:22.301096Z","iopub.status.busy":"2024-08-16T12:00:22.300738Z","iopub.status.idle":"2024-08-16T12:00:25.530666Z","shell.execute_reply":"2024-08-16T12:00:25.529995Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"before = time.time()\nofstrs = multi_generate(ifstrs)\nafter = time.time()\n\nprint(\"Processing time: %3.2f seconds\" % (after - before))","key":"EK5JezjPCy"},{"type":"output","id":"tQBrRyXbMCYZ-yyluQQLR","data":[{"name":"stdout","output_type":"stream","text":"Processing time: 3.23 seconds\n"}],"key":"A6QLwP1XxJ"}],"key":"PimHbZE0QF"}],"key":"CZ2g82cWVo"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Quality Control using DR","url":"/baltrad-drqc","group":"BALTRAD"},"next":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"}}},"domain":"http://localhost:3000"}