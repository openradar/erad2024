{"kind":"Notebook","sha256":"3944cd7f2785a7744de485b218eecb8e748bbe200f91cc5d5fecbc82ec713178","slug":"baltrad-compositing","location":"/notebooks/baltrad/baltrad_short_course/4_BALTRAD_Compositing.ipynb","dependencies":[],"frontmatter":{"title":"Compositing","content_includes_title":false,"kernelspec":{"name":"conda-env-xradar-py","language":"python","display_name":"Python [conda env:xradar]"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"4_BALTRAD_Compositing.ipynb","url":"/erad2024/build/4_BALTRAD_Compositin-4289d15de0a41db2b121d6dbb21605f9.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This exercise builds on output from the parallel processing exercise. It does not address how projections and navigation is dealt with in BALTRAD. This should be addressed in a separate exercise.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qvQZAYyqkO"}],"key":"pzVlob3Oyx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Cartesian product area used in this exercise is pre-configured and looked up from a registry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CuXqQpMaie"}],"key":"mzf357gLjX"}],"key":"m3fDfCq9hm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rudimentary composite","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BCX7shipbQ"}],"identifier":"rudimentary-composite","label":"Rudimentary composite","html_id":"rudimentary-composite","implicit":true,"key":"p1gLeS86ca"}],"key":"pMTBSJ9Ieb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:47:46.854474Z","iopub.status.busy":"2024-08-14T10:47:46.854045Z","iopub.status.idle":"2024-08-14T10:47:47.281007Z","shell.execute_reply":"2024-08-14T10:47:47.280297Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport glob, time\nimport matplotlib\nimport _raveio, _rave\nimport _pycomposite, compositing\nimport warnings\nwarnings.filterwarnings('ignore')  # Suppress SyntaxWarning from Python2 code\n\ngenerator = compositing.compositing()\ngenerator.filenames = glob.glob(\"data/se*.h5\")","key":"pckJso1RwN"},{"type":"output","id":"c6IkJzcp8ukJ_8Gf0Lm0z","data":[],"key":"AaJogOyrPZ"}],"key":"IgKELo4eh1"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:47:47.284326Z","iopub.status.busy":"2024-08-14T10:47:47.283954Z","iopub.status.idle":"2024-08-14T10:47:58.507407Z","shell.execute_reply":"2024-08-14T10:47:58.506842Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Run with all defaults to a pre-configured area that uses the Google Maps projection.\n# First two arguments are product date and time. These are taken from the last input file if not specified.\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\n\nrio = _raveio.new()\nrio.object = comp\nrio.save(\"data/comp_pcappi1000m.h5\")\n\nprint(\"Compositing took %3.2f seconds\" % (after-before))","key":"IDNvOA48dL"},{"type":"output","id":"qxepP25_WiOrZpRkyMmwB","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 11.19 seconds\n"}],"key":"K22ABqhV8c"}],"key":"LOnOfzac6W"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Tweak the plotter from earlier exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UuHjjARIJR"}],"identifier":"tweak-the-plotter-from-earlier-exercises","label":"Tweak the plotter from earlier exercises","html_id":"tweak-the-plotter-from-earlier-exercises","implicit":true,"key":"dwuCoJfErc"}],"key":"G07nLDojA3"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:47:58.509618Z","iopub.status.busy":"2024-08-14T10:47:58.509413Z","iopub.status.idle":"2024-08-14T10:47:58.515501Z","shell.execute_reply":"2024-08-14T10:47:58.515020Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Two color palettes, one used in GoogleMapsPlugin, and the other from RAVE\nfrom GmapColorMap import dbzh as dbzp\n\n# Convert a 768-list palette to a matplotlib colorlist\ndef make_colorlist(pal):\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i]/255.0, pal[i+1]/255.0, pal[i+2]/255.0])\n    return colorlist\n\n# Convert lists to colormaps\ndbzcl = make_colorlist(dbzp)\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\nStringType = type('')\ndef plot(data, colorlist=dbzcl, title=\"Composite\"):\n    mini, maxi = data.shape.index(min(data.shape)), data.shape.index(max(data.shape))\n    figsize=(20,16)# if mini == 0 else (12,8)\n    fig = plt.figure(figsize=figsize)\n    plt.title(title)\n    clist=colorlist if type(colorlist)==StringType else matplotlib.colors.ListedColormap(colorlist)\n    plt.imshow(data, cmap=clist, clim=(0,255))\n    plt.colorbar(shrink=float(data.shape[mini])/data.shape[maxi])","key":"Gdym34crWu"},{"type":"output","id":"pINt1LRbuxhT7Gv6nX0JX","data":[],"key":"fMj7PkyO0O"}],"key":"yhbdGDY91o"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:47:58.517630Z","iopub.status.busy":"2024-08-14T10:47:58.517240Z","iopub.status.idle":"2024-08-14T10:47:58.951722Z","shell.execute_reply":"2024-08-14T10:47:58.951118Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Default composite: DBZH 1000 m Pseudo-CAPPI, nearest radar\")","key":"dVPCGcTMwp"},{"type":"output","id":"jEuV88v2Mup-opPmqKits","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"14a1907a7fc7bbc7097bf4cad6bfe855","path":"/erad2024/build/14a1907a7fc7bbc7097bf4cad6bfe855.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"t6aT0m9JFl"}],"key":"yBQLIVywb1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Maximum reflectivity, lowest pixel, add QC chain","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"C9toRLuZTw"}],"identifier":"maximum-reflectivity-lowest-pixel-add-qc-chain","label":"Maximum reflectivity, lowest pixel, add QC chain","html_id":"maximum-reflectivity-lowest-pixel-add-qc-chain","implicit":true,"key":"CVraMSsW4v"}],"key":"aqxzyE0hgx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:47:58.955218Z","iopub.status.busy":"2024-08-14T10:47:58.954847Z","iopub.status.idle":"2024-08-14T10:48:21.187789Z","shell.execute_reply":"2024-08-14T10:48:21.187210Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.product = _rave.Rave_ProductType_MAX\ngenerator.selection_method = _pycomposite.SelectionMethod_HEIGHT\ngenerator.detectors = [\"ropo\", \"beamb\", \"radvol-att\", \"radvol-broad\", \"rave-overshooting\", \"qi-total\"]\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_max.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after-before))","key":"lnCSiaPdge"},{"type":"output","id":"g9kNmb46joPfhrv1PISjD","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 22.02 seconds\n"}],"key":"kMoKYt676s"}],"key":"k3vG5JSp2t"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:48:21.189850Z","iopub.status.busy":"2024-08-14T10:48:21.189681Z","iopub.status.idle":"2024-08-14T10:48:21.606503Z","shell.execute_reply":"2024-08-14T10:48:21.605649Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, lowest pixel\")","key":"hZJlmMMSx4"},{"type":"output","id":"N5NlPbh2YnPSiVojsNhKI","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"337297c6f237b9f37d6eac2a18b7518c","path":"/erad2024/build/337297c6f237b9f37d6eac2a18b7518c.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"qcQs6Zd9vg"}],"key":"CQDpKfXHzs"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot correspondong total quality index","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZJe2dSGLpM"}],"identifier":"plot-correspondong-total-quality-index","label":"Plot correspondong total quality index","html_id":"plot-correspondong-total-quality-index","implicit":true,"key":"oJb0XKZhM9"}],"key":"W0ONKFnmE9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:48:21.610765Z","iopub.status.busy":"2024-08-14T10:48:21.610169Z","iopub.status.idle":"2024-08-14T10:48:22.048147Z","shell.execute_reply":"2024-08-14T10:48:22.047567Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh = comp.getParameter(\"DBZH\")\nqitot = dbzh.getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\nplot(qitot.getData(), \"binary\", \"Total quality index\")","key":"hu4tg9mrnB"},{"type":"output","id":"pZ8g8D3n3z6oiV8BbWmfa","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4f509c7ba3cd5077ab620888a50a9ab1","path":"/erad2024/build/4f509c7ba3cd5077ab620888a50a9ab1.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"gEicQDScrM"}],"key":"qAWTUA5ivT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now use “total quality” as the compositing criterion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VTOp3tCV82"}],"identifier":"now-use-total-quality-as-the-compositing-criterion","label":"Now use “total quality” as the compositing criterion","html_id":"now-use-total-quality-as-the-compositing-criterion","implicit":true,"key":"A7xkN40x72"}],"key":"AlzbCGC30E"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:48:22.051552Z","iopub.status.busy":"2024-08-14T10:48:22.051177Z","iopub.status.idle":"2024-08-14T10:48:45.896546Z","shell.execute_reply":"2024-08-14T10:48:45.896027Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.qitotal_field = \"pl.imgw.quality.qi_total\"\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_qitotal.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after-before))","key":"zIXoAMhDqa"},{"type":"output","id":"MYCBcW7gWFZrf857-KOkJ","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 23.65 seconds\n"}],"key":"K6597mLnIy"}],"key":"BHvDbs6qBw"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:48:45.898632Z","iopub.status.busy":"2024-08-14T10:48:45.898469Z","iopub.status.idle":"2024-08-14T10:48:46.321207Z","shell.execute_reply":"2024-08-14T10:48:46.320568Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, quality-based\")","key":"VWvzsuOtv8"},{"type":"output","id":"I9cOP5HIvRt9vFiyjEe0C","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fafe350621bc411674b9e0a8c22aca4d","path":"/erad2024/build/fafe350621bc411674b9e0a8c22aca4d.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"bJj1CKAWXW"}],"key":"U1oq5eGoIJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T10:48:46.323457Z","iopub.status.busy":"2024-08-14T10:48:46.323261Z","iopub.status.idle":"2024-08-14T10:48:46.745951Z","shell.execute_reply":"2024-08-14T10:48:46.745364Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\").getData(), \"binary\", \"Total quality index\")","key":"PZrVLUtlsM"},{"type":"output","id":"VncDurIxUQ7a1P4bxDpE7","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"437ad37009173ae652c0851459915b1e","path":"/erad2024/build/437ad37009173ae652c0851459915b1e.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"qStodaaChs"}],"key":"wRu7Y7jcks"}],"key":"HHrmhcxEND"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Parallel processing","url":"/baltrad-parallel-processing","group":"BALTRAD"},"next":{"title":"Rain Rate retrieval with Py-ART","url":"/baltrad-pyart-rain-rate-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}