{"kind":"Notebook","sha256":"f697e722900171f45f1a7a390488f0e40c7d8a0a2ec6ad6574e5ccd5454253c3","slug":"arco-datasets","location":"/notebooks/Analysis-Ready/ARCO-Datasets.ipynb","dependencies":[],"frontmatter":{"title":"Analysis-Ready Cloud-Optimized Datasets","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"settings":{"output_matplotlib_strings":"remove"},"thumbnail":"/erad2024/build/ARCO-49940c50527da5eb63f23a2bfe70ad23.jpeg","exports":[{"format":"ipynb","filename":"ARCO-Datasets.ipynb","url":"/erad2024/build/ARCO-Datasets-11019027451f4b0454465f098485d32c.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/erad2024/build/ARCO-49940c50527da5eb63f23a2bfe70ad23.jpeg","alt":"Project Pythia Logo","key":"gD5PMGHSTN","urlSource":"../images/ARCO.jpeg"}],"key":"g7OMfV0otj"}],"key":"SBe3NY8jN9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Analysis-Ready Cloud-Optimized Datasets","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ioG0jmfYTa"}],"identifier":"analysis-ready-cloud-optimized-datasets","label":"Analysis-Ready Cloud-Optimized Datasets","html_id":"analysis-ready-cloud-optimized-datasets","implicit":true,"key":"JjwzhxxkOF"}],"key":"NNlcDoqAOj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sn575rqErf"}],"key":"gjLlNpSkzy"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KY2lTNwtvG"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"bSdmTnLbSw"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we will work on understanding the main concepts of creating ARCO datasets for the Geosciences.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pfZogDsTER"}],"key":"JX4IU5u9kI"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Analysis-Ready datasets","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"B4OWYRpla9"}],"key":"XmPmtQNX9U"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Cloud-Optimized datasets","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rt88Ulm0EG"}],"key":"NlSp7B2FzD"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fair principles","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JOcmaau9Be"}],"key":"RxXBx0Bfkq"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Zarr format","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Yi7cFD1s0E"}],"key":"Wc1PPVpVnV"}],"key":"pqIWhYN5rP"}],"key":"YTT5XnGbJW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ovqIZ2PfKe"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"ITWabtHrCj"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Xci4GnW3mC"}],"key":"yyZZXawaIV"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ib1AGdgy1k"}],"key":"hMigIYpUrk"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ujEO47z3oN"}],"key":"PAAyjYjqGt"}],"key":"VwIztuhveo"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to Xarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bVvUVauCuX"}],"urlSource":"https://foundations.projectpythia.org/core/xarray.html","key":"OehCLSE3yp"}],"key":"ridrEGZ1EM"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NgYFsRvYgS"}],"key":"UPC0H0xl6d"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Basic features","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"SJW1ZjiQUK"}],"key":"TlY3f9Trlx"}],"key":"htLgnQcjPd"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/radar-cookbook/README.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Radar Cookbook","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eOezJHI4bZ"}],"urlSource":"https://projectpythia.org/radar-cookbook/README.html","key":"MUGK8jPuYn"}],"key":"wW4tyVVD1R"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LWeXAHvaiP"}],"key":"PvPspOMJcW"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Radar basics","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"gL7NXBSZYE"}],"key":"RqC47s3FWk"}],"key":"nySEXhjp4f"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://zarr.readthedocs.io/en/stable/tutorial.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Zarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Il8wjI1teK"}],"urlSource":"https://zarr.readthedocs.io/en/stable/tutorial.html","key":"y4o1NBvDwH"}],"key":"tW7oKdSVmE"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bnPys3STQW"}],"key":"AcHV4ggJ9g"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Zarr basics","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"CIwJQmVzRo"}],"key":"XkAUuXZPMp"}],"key":"Gr9SKGhlzo"}],"key":"ER2GFUX0YF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Wixz3b9WdX"}],"key":"YH8Z2PyPmh"},{"type":"text","value":": 30 minutes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XwT6v2cDil"}],"key":"VZU7zbn9Cm"}],"key":"l8SmMJuQGf"}],"key":"pZ6NEQn0gK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IX09FW7eDr"}],"key":"tLAGfanmUg"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QPWcGB9zL4"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"ScLe7Dc4Pv"}],"key":"MUzGNDL9A8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:08.553153Z","iopub.status.busy":"2024-09-05T16:31:08.552585Z","iopub.status.idle":"2024-09-05T16:31:11.126520Z","shell.execute_reply":"2024-09-05T16:31:11.126052Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport fsspec\nfrom glob import glob\nimport xradar as xd\nimport matplotlib.pyplot as plt\nimport cmweather\nimport numpy as np\nimport hvplot.xarray\nfrom xarray.core.datatree import DataTree\nfrom zarr.errors import ContainsGroupError  ","key":"qNbBvOVMOM"},{"type":"output","id":"NRHqKVwZYWImF6_WUkkWT","data":[{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n  var py_version = '3.4.2'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  var reloading = false;\n  var Bokeh = root.Bokeh;\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      run_callbacks();\n      return null;\n    }\n    if (!reloading) {\n      console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    var skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    var existing_stylesheets = []\n    var links = document.getElementsByTagName('link')\n    for (var i = 0; i < links.length; i++) {\n      var link = links[i]\n      if (link.href != null) {\n\texisting_stylesheets.push(link.href)\n      }\n    }\n    for (var i = 0; i < css_urls.length; i++) {\n      var url = css_urls[i];\n      if (existing_stylesheets.indexOf(url) !== -1) {\n\ton_load()\n\tcontinue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    var scripts = document.getElementsByTagName('script')\n    for (var i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n\texisting_scripts.push(script.src)\n      }\n    }\n    for (var i = 0; i < js_urls.length; i++) {\n      var url = js_urls[i];\n      if (skip.indexOf(url) !== -1 || existing_scripts.indexOf(url) !== -1) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (var i = 0; i < js_modules.length; i++) {\n      var url = js_modules[i];\n      if (skip.indexOf(url) !== -1 || existing_scripts.indexOf(url) !== -1) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      var url = js_exports[name];\n      if (skip.indexOf(url) >= 0 || root[name] != null) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.2.min.js\", \"https://cdn.holoviz.org/panel/1.4.5/dist/panel.min.js\"];\n  var js_modules = [];\n  var js_exports = {};\n  var css_urls = [];\n  var inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (var i = 0; i < inline_js.length; i++) {\n\ttry {\n          inline_js[i].call(root, root.Bokeh);\n\t} catch(e) {\n\t  if (!reloading) {\n\t    throw e;\n\t  }\n\t}\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n\tvar NewBokeh = root.Bokeh;\n\tif (Bokeh.versions === undefined) {\n\t  Bokeh.versions = new Map();\n\t}\n\tif (NewBokeh.version !== Bokeh.version) {\n\t  Bokeh.versions.set(NewBokeh.version, NewBokeh)\n\t}\n\troot.Bokeh = Bokeh;\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      var bokeh_loaded = Bokeh != null && (Bokeh.version === py_version || (Bokeh.versions !== undefined && Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n\troot.Bokeh = undefined;\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n\tconsole.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n\trun_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n  var py_version = '3.4.2'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  var reloading = false;\n  var Bokeh = root.Bokeh;\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      run_callbacks();\n      return null;\n    }\n    if (!reloading) {\n      console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    var skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    var existing_stylesheets = []\n    var links = document.getElementsByTagName('link')\n    for (var i = 0; i < links.length; i++) {\n      var link = links[i]\n      if (link.href != null) {\n\texisting_stylesheets.push(link.href)\n      }\n    }\n    for (var i = 0; i < css_urls.length; i++) {\n      var url = css_urls[i];\n      if (existing_stylesheets.indexOf(url) !== -1) {\n\ton_load()\n\tcontinue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    var scripts = document.getElementsByTagName('script')\n    for (var i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n\texisting_scripts.push(script.src)\n      }\n    }\n    for (var i = 0; i < js_urls.length; i++) {\n      var url = js_urls[i];\n      if (skip.indexOf(url) !== -1 || existing_scripts.indexOf(url) !== -1) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (var i = 0; i < js_modules.length; i++) {\n      var url = js_modules[i];\n      if (skip.indexOf(url) !== -1 || existing_scripts.indexOf(url) !== -1) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      var url = js_exports[name];\n      if (skip.indexOf(url) >= 0 || root[name] != null) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.2.min.js\", \"https://cdn.holoviz.org/panel/1.4.5/dist/panel.min.js\"];\n  var js_modules = [];\n  var js_exports = {};\n  var css_urls = [];\n  var inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (var i = 0; i < inline_js.length; i++) {\n\ttry {\n          inline_js[i].call(root, root.Bokeh);\n\t} catch(e) {\n\t  if (!reloading) {\n\t    throw e;\n\t  }\n\t}\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n\tvar NewBokeh = root.Bokeh;\n\tif (Bokeh.versions === undefined) {\n\t  Bokeh.versions = new Map();\n\t}\n\tif (NewBokeh.version !== Bokeh.version) {\n\t  Bokeh.versions.set(NewBokeh.version, NewBokeh)\n\t}\n\troot.Bokeh = Bokeh;\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      var bokeh_loaded = Bokeh != null && (Bokeh.version === py_version || (Bokeh.versions !== undefined && Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n\troot.Bokeh = undefined;\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n\tconsole.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n\trun_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        }) \n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        }) \n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n    > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n  ),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"p1002"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content_type":"application/vnd.holoviews_exec.v0+json","hash":"d41d8cd98f00b204e9800998ecf8427e","path":"/erad2024/build/d41d8cd98f00b204e9800998ecf8427e.json"},"text/html":{"content":"<div id='p1002'>\n  <div id=\"a1ebaad3-9cff-4046-9a67-d57587d83f6b\" data-root-id=\"p1002\" style=\"display: contents;\"></div>\n</div>\n<script type=\"application/javascript\">(function(root) {\n  var docs_json = {\"2bc4a6b3-df3f-4b08-b789-065e7a259510\":{\"version\":\"3.4.2\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"panel.models.browser.BrowserInfo\",\"id\":\"p1002\"},{\"type\":\"object\",\"name\":\"panel.models.comm_manager.CommManager\",\"id\":\"p1003\",\"attributes\":{\"plot_id\":\"p1002\",\"comm_id\":\"39e372c3c4534af7a468f98f83e78dd8\",\"client_comm_id\":\"4b9eec385cd045688b24795779459e94\"}}],\"defs\":[{\"type\":\"model\",\"name\":\"ReactiveHTML1\"},{\"type\":\"model\",\"name\":\"FlexBox1\",\"properties\":[{\"name\":\"align_content\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"align_items\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"flex_direction\",\"kind\":\"Any\",\"default\":\"row\"},{\"name\":\"flex_wrap\",\"kind\":\"Any\",\"default\":\"wrap\"},{\"name\":\"gap\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"justify_content\",\"kind\":\"Any\",\"default\":\"flex-start\"}]},{\"type\":\"model\",\"name\":\"FloatPanel1\",\"properties\":[{\"name\":\"config\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"contained\",\"kind\":\"Any\",\"default\":true},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"right-top\"},{\"name\":\"offsetx\",\"kind\":\"Any\",\"default\":null},{\"name\":\"offsety\",\"kind\":\"Any\",\"default\":null},{\"name\":\"theme\",\"kind\":\"Any\",\"default\":\"primary\"},{\"name\":\"status\",\"kind\":\"Any\",\"default\":\"normalized\"}]},{\"type\":\"model\",\"name\":\"GridStack1\",\"properties\":[{\"name\":\"mode\",\"kind\":\"Any\",\"default\":\"warn\"},{\"name\":\"ncols\",\"kind\":\"Any\",\"default\":null},{\"name\":\"nrows\",\"kind\":\"Any\",\"default\":null},{\"name\":\"allow_resize\",\"kind\":\"Any\",\"default\":true},{\"name\":\"allow_drag\",\"kind\":\"Any\",\"default\":true},{\"name\":\"state\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"drag1\",\"properties\":[{\"name\":\"slider_width\",\"kind\":\"Any\",\"default\":5},{\"name\":\"slider_color\",\"kind\":\"Any\",\"default\":\"black\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":50}]},{\"type\":\"model\",\"name\":\"click1\",\"properties\":[{\"name\":\"terminal_output\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"debug_name\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"clears\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"FastWrapper1\",\"properties\":[{\"name\":\"object\",\"kind\":\"Any\",\"default\":null},{\"name\":\"style\",\"kind\":\"Any\",\"default\":null}]},{\"type\":\"model\",\"name\":\"NotificationAreaBase1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"NotificationArea1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"notifications\",\"kind\":\"Any\",\"default\":[]},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0},{\"name\":\"types\",\"kind\":\"Any\",\"default\":[{\"type\":\"map\",\"entries\":[[\"type\",\"warning\"],[\"background\",\"#ffc107\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-exclamation-triangle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]},{\"type\":\"map\",\"entries\":[[\"type\",\"info\"],[\"background\",\"#007bff\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-info-circle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]}]}]},{\"type\":\"model\",\"name\":\"Notification\",\"properties\":[{\"name\":\"background\",\"kind\":\"Any\",\"default\":null},{\"name\":\"duration\",\"kind\":\"Any\",\"default\":3000},{\"name\":\"icon\",\"kind\":\"Any\",\"default\":null},{\"name\":\"message\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"notification_type\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_destroyed\",\"kind\":\"Any\",\"default\":false}]},{\"type\":\"model\",\"name\":\"TemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"BootstrapTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"TemplateEditor1\",\"properties\":[{\"name\":\"layout\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"MaterialTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"copy_to_clipboard1\",\"properties\":[{\"name\":\"fill\",\"kind\":\"Any\",\"default\":\"none\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":null}]}]}};\n  var render_items = [{\"docid\":\"2bc4a6b3-df3f-4b08-b789-065e7a259510\",\"roots\":{\"p1002\":\"a1ebaad3-9cff-4046-9a67-d57587d83f6b\"},\"root_ids\":[\"p1002\"]}];\n  var docs = Object.values(docs_json)\n  if (!docs) {\n    return\n  }\n  const py_version = docs[0].version.replace('rc', '-rc.').replace('.dev', '-dev.')\n  async function embed_document(root) {\n    var Bokeh = get_bokeh(root)\n    await Bokeh.embed.embed_items_notebook(docs_json, render_items);\n    for (const render_item of render_items) {\n      for (const root_id of render_item.root_ids) {\n\tconst id_el = document.getElementById(root_id)\n\tif (id_el.children.length && id_el.children[0].hasAttribute('data-root-id')) {\n\t  const root_el = id_el.children[0]\n\t  root_el.id = root_el.id + '-rendered'\n\t  for (const child of root_el.children) {\n            // Ensure JupyterLab does not capture keyboard shortcuts\n            // see: https://jupyterlab.readthedocs.io/en/4.1.x/extension/notebook.html#keyboard-interaction-model\n\t    child.setAttribute('data-lm-suppress-shortcuts', 'true')\n\t  }\n\t}\n      }\n    }\n  }\n  function get_bokeh(root) {\n    if (root.Bokeh === undefined) {\n      return null\n    } else if (root.Bokeh.version !== py_version) {\n      if (root.Bokeh.versions === undefined || !root.Bokeh.versions.has(py_version)) {\n\treturn null\n      }\n      return root.Bokeh.versions.get(py_version);\n    } else if (root.Bokeh.version === py_version) {\n      return root.Bokeh\n    }\n    return null\n  }\n  function is_loaded(root) {\n    var Bokeh = get_bokeh(root)\n    return (Bokeh != null && Bokeh.Panel !== undefined)\n  }\n  if (is_loaded(root)) {\n    embed_document(root);\n  } else {\n    var attempts = 0;\n    var timer = setInterval(function(root) {\n      if (is_loaded(root)) {\n        clearInterval(timer);\n        embed_document(root);\n      } else if (document.readyState == \"complete\") {\n        attempts++;\n        if (attempts > 200) {\n          clearInterval(timer);\n\t  var Bokeh = get_bokeh(root)\n\t  if (Bokeh == null || Bokeh.Panel == null) {\n            console.warn(\"Panel: ERROR: Unable to run Panel code because Bokeh or Panel library is missing\");\n\t  } else {\n\t    console.warn(\"Panel: WARNING: Attempting to render but not all required libraries could be resolved.\")\n\t    embed_document(root)\n\t  }\n        }\n      }\n    }, 25, root)\n  }\n})(window);</script>","content_type":"text/html"}}}],"key":"PazyOopy7a"}],"key":"G3AWTaHy6Y"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Analys-Ready","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k3oM41JqLI"}],"identifier":"analys-ready","label":"Analys-Ready","html_id":"analys-ready","implicit":true,"key":"WEnQ8tzOUC"}],"key":"Z6o6bqgEue"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Analysis-Ready data is a concept that emphasizes the preparation and structuring of datasets to be immediately usable for analysis. In the CrowdFlower Data Science Report 2016, the “How Data Scientists Spend Their Time” figure illustrates the distribution of time that data scientists allocate to various tasks. The figure highlights that the majority of a data scientist’s time is dedicated to ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g5sxcg7e4O"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"preparing","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dqlFXl5A0b"}],"key":"sDVeh69XpF"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"c0zN2E7dyb"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"cleaning data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xERCulu50Y"}],"key":"UcOhYAJOUS"},{"type":"text","value":" (~80%), which is often considered the most time-consuming and critical part of the data science workflow.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BMa2IJae8w"}],"key":"Ay8KbZqNjv"}],"key":"d7xU2JjS5y"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/erad2024/build/AR-e612a2e2444ea8e5c41237ef612a551b.jpeg","alt":"Project Pythia Logo","key":"Fs4zg1xoSi","urlSource":"../images/AR.jpeg"}],"key":"pbVydbmmuS"}],"key":"AKgMOH4oED"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here’s how AR caters to various aspects:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YqB3B1BoV1"}],"key":"O8lOlka5yp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Datasets instead of data files","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ANQPNKe98y"}],"key":"qReXecCre0"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Pre-processed datasets, ensuring it is clean and well-organized","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"xoS92ENplu"}],"key":"bdvknqXujM"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Dataset enriched with comprehensive metadata","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IH91o6Te4K"}],"key":"SXHfcOGobV"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Curated and cataloged","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"VFQiO0xsQr"}],"key":"Kdulv0cliS"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Facilitates a more efficient and accurate analysis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"wc0Owshos1"}],"key":"pRaXRROWMg"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"More time for fun (science)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Es7jw3Qtnw"}],"key":"lDyjNkFymT"}],"key":"oTZV3bWftr"}],"key":"KP4qGKbakU"},{"type":"block","kind":"notebook-content","data":{"jp-MarkdownHeadingCollapsed":true},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cloud-Optimized","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uma8eUo131"}],"identifier":"cloud-optimized","label":"Cloud-Optimized","html_id":"cloud-optimized","implicit":true,"key":"XV44EJF1Po"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"NetCDF/Raw radar data formats are not cloud optimized. Other formats, like Zarr, aim to make accessing and reading data from the cloud fast and painless. Cloud-Optimized data is structured for efficient storage, access, and processing in cloud environments.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IKZ9f8rsZm"}],"key":"kixCjhWFkn"},{"type":"image","url":"/erad2024/build/cloud-move-e611de68da614a4ff49e4d26d073e956.png","alt":"Move to cloud diagram","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MiXpYnR0Tc","urlSource":"../images/cloud-move.png"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Cloud-Optimized leverages scalable formats and parallel processing capabilities","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ZCGpduFhW7"}],"key":"zFuR9vN2fZ"}],"key":"sDza4zrzQ1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"FAIR data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UOD5B6hsQu"}],"identifier":"fair-data","label":"FAIR data","html_id":"fair-data","implicit":true,"key":"RHqQWn933P"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"FAIR data adheres to principles that ensure it is Findable, Accessible, Interoperable, and Reusable. These guidelines promote data sharing, collaboration, and long-term usability across various platforms and disciplines.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WwhHFjTOZk"}],"key":"xt6OkBNcr1"}],"key":"XvSczVjkvO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"comment","value":" ![fair](../images/fair-data-principles.jpg) ","key":"wrkGeyJKNN"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"image","url":"/erad2024/build/fair-data-principles-83198d077cc3cd22701de57acb9940ac.jpg","alt":"Fair","key":"pR0KvgH6Y3","urlSource":"../images/fair-data-principles.jpg"}],"key":"QlOBfEdSBw"}],"key":"CnIwtHKB9F"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"“FAIR sharing of data is beneficial for both data producers and consumers. Consumers gain access to interesting datasets that would otherwise be out of reach. Producers get citations to their work, when consumers publish their derivative work. OME-Zarr is the technology basis for enabling effective FAIR sharing of large image datasets.” ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ve9Ili78Bk"},{"type":"link","url":"https://github.com/zarr-developers/zarr-illustrations-falk-2022?tab=readme-ov-file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Zarr illustrations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UEukgOnhxF"}],"urlSource":"https://github.com/zarr-developers/zarr-illustrations-falk-2022?tab=readme-ov-file","error":true,"key":"HzbTu1H6vb"}],"key":"KwXA5fPAca"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"image","url":"/erad2024/build/fair-reuse-300dpi-e6557896cbe3de2d64cd5e05579e9556.png","alt":"Fair","key":"fHnKzDYnPh","urlSource":"../images/fair-reuse-300dpi.png"}],"key":"l11LMGt6pK"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Courtesy: ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"S8y5WKYjQJ"},{"type":"link","url":"https://github.com/zarr-developers/zarr-illustrations-falk-2022?tab=readme-ov-file","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Zarr illustrations","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"btl96L7xUO"}],"urlSource":"https://github.com/zarr-developers/zarr-illustrations-falk-2022?tab=readme-ov-file","error":true,"key":"F4lizhOmwo"}],"key":"YNhIpRjL3s"}],"key":"CX52IQjarm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Zarr format","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lWmmZrIX5Q"}],"identifier":"zarr-format","label":"Zarr format","html_id":"zarr-format","implicit":true,"key":"POBCbNPHgk"}],"key":"jplqqdC0T4"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Zarr is a flexible and efficient format for storing large, chunked, compressed, multi-dimensional arrays, enabling easy and scalable data access in both local and cloud environments. It supports parallel processing and is widely used in scientific computing for handling large datasets.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mRvJKXdNim"}],"key":"upJUP86CLt"}],"key":"IfPg3ZRdzY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/erad2024/build/monolithic-vs-chunke-33d15e58b04f9c4a12792a180b966390.png","alt":"zarr","key":"Cqt1IGu2U5","urlSource":"../images/monolithic-vs-chunked-1200dpi.png"}],"key":"LEX2fJaoev"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Courtesy: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HyvuOL2phk"},{"type":"link","url":"https://github.com/zarr-developers/zarr-illustrations-falk-2022?tab=readme-ov-file","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Zarr illustrations","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OZWY9y1yb4"}],"urlSource":"https://github.com/zarr-developers/zarr-illustrations-falk-2022?tab=readme-ov-file","error":true,"key":"wNLJFutT1m"}],"key":"WlPhkTHWSE"}],"key":"ZZ3GRMq6s5"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"ARCO Radar data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"upWK4DKi7T"}],"identifier":"arco-radar-data","label":"ARCO Radar data","html_id":"arco-radar-data","implicit":true,"key":"CLRPBnS1Os"}],"key":"zGH5kWtXHo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Leveraging the Climate and Forecast (CF) format-based FM301 hierarchical tree structure, endorsed by the World Meteorological Organization (WMO), and Analysis-Ready Cloud-Optimized (ARCO) formats, we developed an open data model to arrange, manage, and store radar data in cloud-storage buckets efficiently","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Exp3pbg08d"}],"key":"XOjxYOUmtr"}],"key":"L7ushNVfUr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"CfRadial2.1/FM301 standard","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"C0ewStbCGA"}],"identifier":"cfradial2-1-fm301-standard","label":"CfRadial2.1/FM301 standard","html_id":"cfradial2-1-fm301-standard","implicit":true,"key":"G2jPS08A0V"}],"key":"FBsyIehUo1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Xradar employs ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SXXCH2oBwr"},{"type":"inlineCode","value":"xarray.DataTree","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZoCG1u2LCO"},{"type":"text","value":" objects to organize radar sweeps within a single hierachical structure, where each sweep is an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mi1BeFIaUh"},{"type":"inlineCode","value":"xarray.Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A7xPxL2t6d"},{"type":"text","value":" containing relevant metadata and variables.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kmOr5h3g5H"}],"key":"sdWKo8BmOF"}],"key":"XKHxNFBMsg"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/erad2024/build/CfRadial2.1-322f07e481e9b2dde0afeab3f3d3f2f9.svg","alt":"xradar","key":"liB29j48xr","urlSource":"../images/CfRadial2.1.svg"}],"key":"QCwfYI1aRk"}],"key":"iPbRMSmUgi"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s see how this hierarchical-datatree looks like","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eRSk8C3EBE"}],"key":"BSky1DZkq5"}],"key":"pFYGBIYonW"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:11.129561Z","iopub.status.busy":"2024-09-05T16:31:11.128775Z","iopub.status.idle":"2024-09-05T16:31:11.526130Z","shell.execute_reply":"2024-09-05T16:31:11.525559Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Connection to Pythi s3 Bucket\nURL = 'https://js2.jetstream-cloud.org:8001/'\npath = f'pythia/radar/erad2024'\n\nfs = fsspec.filesystem(\"s3\", anon=True, client_kwargs=dict(endpoint_url=URL))\n\n# C-band radar files\npath = \"pythia/radar/erad2024/20240522_MeteoSwiss_ARPA_Lombardia/Data/Cband/*.nc\"\nradar_files = fs.glob(path)\nradar_files[:3]","key":"SkKwKJeNQh"},{"type":"output","id":"YqtISymbxIQvxknTwHtct","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"['pythia/radar/erad2024/20240522_MeteoSwiss_ARPA_Lombardia/Data/Cband/MonteLema_202405221300.nc',\n 'pythia/radar/erad2024/20240522_MeteoSwiss_ARPA_Lombardia/Data/Cband/MonteLema_202405221305.nc',\n 'pythia/radar/erad2024/20240522_MeteoSwiss_ARPA_Lombardia/Data/Cband/MonteLema_202405221310.nc']","content_type":"text/plain"}}}],"key":"jfFjA5dS1h"}],"key":"zqUTsTLgiz"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:11.528607Z","iopub.status.busy":"2024-09-05T16:31:11.528216Z","iopub.status.idle":"2024-09-05T16:31:13.150045Z","shell.execute_reply":"2024-09-05T16:31:13.149468Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# open files locally\nlocal_files = [\n    fsspec.open_local(\n        f\"simplecache::{URL}{i}\", s3={\"anon\": True}, filecache={\"cache_storage\": \".\"}\n    )\n    for i in radar_files[:5]\n]","key":"HnpxaqAVrL"},{"type":"output","id":"5CphdN_rDoRmJjSGFrAu4","data":[],"key":"XE7F7mjOug"}],"key":"Xd1rKcrKx7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can open one of this ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VhVayhiaF1"},{"type":"inlineCode","value":"nc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hwOxffM2bH"},{"type":"text","value":" files using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FHatHHaurp"},{"type":"inlineCode","value":"xradar.io.open_cfradial1_datree","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"roguP1i3OM"},{"type":"text","value":" method","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bnlfWX1VDO"}],"key":"Ym3mACpHek"}],"key":"Yotmevv1HY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:13.152796Z","iopub.status.busy":"2024-09-05T16:31:13.152447Z","iopub.status.idle":"2024-09-05T16:31:14.533654Z","shell.execute_reply":"2024-09-05T16:31:14.533069Z"},"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"dt = xd.io.open_cfradial1_datatree(local_files[0])\ndisplay(dt)","key":"me2JpderwM"},{"type":"output","id":"K0Ef7WUPvX0JcJH9198Pv","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"45f04bc0256c15cf7e5b022e4ecc5065","path":"/erad2024/build/45f04bc0256c15cf7e5b022e4ecc5065.html"},"text/plain":{"content_type":"text/plain","hash":"804ecb289e6bbddf89028bd2f8c4c425","path":"/erad2024/build/804ecb289e6bbddf89028bd2f8c4c425.txt"}}}],"key":"YGP65QyyDu"}],"key":"gQB2k1XuJC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s create our first ARCO dataset using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SN7BFSXFrp"},{"type":"inlineCode","value":".to_zarr","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VB0zdoTwys"},{"type":"text","value":" method.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JIso2hSDed"}],"key":"auIvi8osLi"}],"key":"kNv6CQpUR6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:14.543073Z","iopub.status.busy":"2024-09-05T16:31:14.542335Z","iopub.status.idle":"2024-09-05T16:31:16.848876Z","shell.execute_reply":"2024-09-05T16:31:16.848300Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dt.to_zarr(\"radar.zarr\", consolidated=True)","key":"LKApRPFhNK"},{"type":"output","id":"lc0c_3RhM79rRNMNDvxt6","data":[],"key":"AC3JS9XeHE"}],"key":"tmXzn7QQNq"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can check that a new ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wT0nUtisMt"},{"type":"inlineCode","value":"Zarr","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xa0a8Znzkq"},{"type":"text","value":" store is created (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sPpFEaTQYA"},{"type":"inlineCode","value":"Object storage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uqg0GPGX1X"},{"type":"text","value":")","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tv7ekkv897"}],"key":"ZFG8hMcJ4Q"}],"key":"oLBwLJG6Mk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:16.851674Z","iopub.status.busy":"2024-09-05T16:31:16.851319Z","iopub.status.idle":"2024-09-05T16:31:17.295279Z","shell.execute_reply":"2024-09-05T16:31:17.294546Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"!ls ","key":"WdryCk2Cdp"},{"type":"output","id":"8o3pFn2NvAIpWbzsyL-2m","data":[{"name":"stdout","output_type":"stream","text":"ARCO-Datasets.ipynb  QPE-QVPs.ipynb  radar.zarr\r\n"}],"key":"h8AIGhlocj"}],"key":"q9jo85xBti"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This is stored locally, but could be stored in a Bucket on the cloud. Let’s open it back using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WEKAfwegLP"},{"type":"inlineCode","value":"Xarray.backends.api.open_datatree","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wtOPtDy5HR"}],"key":"ozb69hvXyN"}],"key":"Gy5cNSWJhY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:17.298414Z","iopub.status.busy":"2024-09-05T16:31:17.297852Z","iopub.status.idle":"2024-09-05T16:31:17.652046Z","shell.execute_reply":"2024-09-05T16:31:17.651493Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dt_back = xr.backends.api.open_datatree(\n    \"radar.zarr\", \n    consolidated=True\n)","key":"VxY8RuRVln"},{"type":"output","id":"cQ5ajxW32O00hcYOzWZQK","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/xarray/backends/plugins.py:149: RuntimeWarning: 'netcdf4' fails while guessing\n  warnings.warn(f\"{engine!r} fails while guessing\", RuntimeWarning)\n/srv/conda/envs/notebook/lib/python3.11/site-packages/xarray/backends/plugins.py:149: RuntimeWarning: 'h5netcdf' fails while guessing\n  warnings.warn(f\"{engine!r} fails while guessing\", RuntimeWarning)\n/srv/conda/envs/notebook/lib/python3.11/site-packages/xarray/backends/plugins.py:149: RuntimeWarning: 'scipy' fails while guessing\n  warnings.warn(f\"{engine!r} fails while guessing\", RuntimeWarning)\n"}],"key":"ALpU8ZTg5R"}],"key":"J24wz6hAhb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:17.654715Z","iopub.status.busy":"2024-09-05T16:31:17.654334Z","iopub.status.idle":"2024-09-05T16:31:17.771053Z","shell.execute_reply":"2024-09-05T16:31:17.770488Z"},"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"display(dt_back)","key":"y3MuaLgTTG"},{"type":"output","id":"41K7G6XJJ9bXaiUFmjzsz","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"2ab9a401d4ea5ecea596383d1fdd71fd","path":"/erad2024/build/2ab9a401d4ea5ecea596383d1fdd71fd.html"},"text/plain":{"content_type":"text/plain","hash":"b636a3bc9a88b8a210a81c3c22a02ccd","path":"/erad2024/build/b636a3bc9a88b8a210a81c3c22a02ccd.txt"}}}],"key":"O0tkmVzXcE"}],"key":"rhf6cHB2QS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Radar data time-series","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xcc3u4svd0"}],"identifier":"radar-data-time-series","label":"Radar data time-series","html_id":"radar-data-time-series","implicit":true,"key":"Q9fFUeKB4b"}],"key":"hGZGIQzlvg"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Concatenating ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lmtJbSznq4"},{"type":"inlineCode","value":"xradar.DataTree","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZDmKA88PY5"},{"type":"text","value":" objects along a temporal dimension is a great approach to create a more organized and comprehensive dataset. By doing so, you can maintain a cohesive dataset that is both easier to manage and more meaningful for temporal analysis.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M2YSWl7ebJ"}],"key":"cSse4RLH0d"}],"key":"EiHV9M1xux"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:17.780794Z","iopub.status.busy":"2024-09-05T16:31:17.780267Z","iopub.status.idle":"2024-09-05T16:31:17.784058Z","shell.execute_reply":"2024-09-05T16:31:17.783593Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"#let's use our local files\nlen(local_files)","key":"d5F80ltflV"},{"type":"output","id":"5n_F6FKszZPHNP51_Hyt1","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/plain":{"content":"5","content_type":"text/plain"}}}],"key":"Hmg8aGrZ3i"}],"key":"W0Bz5DpwXD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To create an ARCO dataset, we need to ensure that all radar volumes are properly aligned. To achieve this, we developed the following function:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wD176c6OhJ"}],"key":"d3aSNfwijZ"}],"key":"TSO1XbYIyh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:17.785885Z","iopub.status.busy":"2024-09-05T16:31:17.785715Z","iopub.status.idle":"2024-09-05T16:31:17.790373Z","shell.execute_reply":"2024-09-05T16:31:17.789919Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"def fix_angle(ds: xr.Dataset, tolerance: float=None, **kwargs) -> xr.Dataset:\n    \"\"\"\n    This function reindex the radar azimuth angle to make all sweeps starts and end at the same angle\n    @param ds: xarray dataset containing and xradar object\n    @param tolerance: Tolerance for interpolation between azimuth angles. \n                      Defaul, the radar azimuth angle resolution.\n    @return: azimuth reindex xarray dataset\n    \"\"\"\n    ds[\"time\"] = ds.time.load() \n    angle_dict = xd.util.extract_angle_parameters(ds)\n    start_ang = angle_dict[\"start_angle\"]\n    stop_ang = angle_dict[\"stop_angle\"]\n    direction = angle_dict[\"direction\"]\n    ds = xd.util.remove_duplicate_rays(ds)\n    az = len(np.arange(start_ang, stop_ang))\n    ar = np.round(az / len(ds.azimuth.data), 2)\n    tolerance = ar if not tolerance else tolerance\n    ds = xd.util.reindex_angle(\n        ds, \n        start_ang,  \n        stop_ang, \n        ar, \n        direction, \n        method=\"nearest\", \n        tolerance=tolerance, **kwargs\n    )\n    return ds","key":"ZbaRjy24Wj"},{"type":"output","id":"kMmuYVXtb_GML2F8M6B5L","data":[],"key":"I4iatM6JJT"}],"key":"y3qL3FteLW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, we can use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iNCuWicA7C"},{"type":"link","url":"https://docs.xarray.dev/en/stable/generated/xarray.open_mfdataset.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"Xarray.open_mfdataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XIwBqvOuMF"}],"urlSource":"https://docs.xarray.dev/en/stable/generated/xarray.open_mfdataset.html","key":"WXrEvqbcaC"},{"type":"text","value":" method to open all ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EQTYN5ohFS"},{"type":"inlineCode","value":"nc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VhwVOExjUj"},{"type":"text","value":" files simultaneously. We can iterate over each sweep and concatenate them along the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jBD1Nsu9kv"},{"type":"inlineCode","value":"volume_time","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AdBVLtC65f"},{"type":"text","value":" dimension.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zEH6EeD7nY"}],"key":"uTb0XLgL3I"}],"key":"vufYbocMiF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:17.792102Z","iopub.status.busy":"2024-09-05T16:31:17.791937Z","iopub.status.idle":"2024-09-05T16:31:17.796119Z","shell.execute_reply":"2024-09-05T16:31:17.795645Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# listing all the sweeps within each nc file\nsweeps = [\n        i[1:] for i in list(dt.groups) if i.startswith(\"/sweep\") if i not in [\"/\"]\n    ]\nsweeps","key":"ANM9PbohEb"},{"type":"output","id":"XtX6FfZOXNp6DyEv_MJ44","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"['sweep_0',\n 'sweep_1',\n 'sweep_2',\n 'sweep_3',\n 'sweep_4',\n 'sweep_5',\n 'sweep_6',\n 'sweep_7',\n 'sweep_8',\n 'sweep_9',\n 'sweep_10',\n 'sweep_11',\n 'sweep_12',\n 'sweep_13',\n 'sweep_14',\n 'sweep_15',\n 'sweep_16',\n 'sweep_17',\n 'sweep_18',\n 'sweep_19']","content_type":"text/plain"}}}],"key":"PrPmwD66ig"}],"key":"drH5CpYaqp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:17.798159Z","iopub.status.busy":"2024-09-05T16:31:17.797993Z","iopub.status.idle":"2024-09-05T16:31:34.804954Z","shell.execute_reply":"2024-09-05T16:31:34.804388Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"for sweep in sweeps:\n    root = {}\n    ds = xr.open_mfdataset(\n        local_files,\n        preprocess=fix_angle,\n        engine=\"cfradial1\",\n        group=sweep,\n        concat_dim=\"volume_time\",\n        combine=\"nested\",\n    ).xradar.georeference()\n    ds\n    root[f\"{sweep}\"] = ds\n    dtree = DataTree.from_dict(root)\n    \n    try:\n        dtree.to_zarr(\n            \"radar_ts.zarr\", \n            consolidated=True,\n        )\n    except ContainsGroupError:\n        dtree.to_zarr(\n            \"radar_ts.zarr\", \n            consolidated=True, \n            mode=\"a\", \n        )\n    del dtree, ds","key":"OLpKn6QObK"},{"type":"output","id":"ETEBHsT02d5GkH1Hi-D0f","data":[],"key":"kxl9BsMeOc"}],"key":"kogkZdVArw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s see our new radar-time series dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SYUBLjIlWh"}],"key":"K3wlw9goB0"}],"key":"pMJOvXkIIj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:34.807630Z","iopub.status.busy":"2024-09-05T16:31:34.807456Z","iopub.status.idle":"2024-09-05T16:31:35.271856Z","shell.execute_reply":"2024-09-05T16:31:35.271272Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dtree = xr.backends.api.open_datatree(\n    \"radar_ts.zarr\",\n    consolidated=True,\n    chunks={}\n)","key":"bltLh1cj1G"},{"type":"output","id":"A1suKUBMTO4GB73A0U05M","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/xarray/backends/plugins.py:149: RuntimeWarning: 'netcdf4' fails while guessing\n  warnings.warn(f\"{engine!r} fails while guessing\", RuntimeWarning)\n/srv/conda/envs/notebook/lib/python3.11/site-packages/xarray/backends/plugins.py:149: RuntimeWarning: 'h5netcdf' fails while guessing\n  warnings.warn(f\"{engine!r} fails while guessing\", RuntimeWarning)\n/srv/conda/envs/notebook/lib/python3.11/site-packages/xarray/backends/plugins.py:149: RuntimeWarning: 'scipy' fails while guessing\n  warnings.warn(f\"{engine!r} fails while guessing\", RuntimeWarning)\n"}],"key":"pfDQpI23gU"}],"key":"xgqFB7TnAy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:31:35.274554Z","iopub.status.busy":"2024-09-05T16:31:35.274189Z","iopub.status.idle":"2024-09-05T16:31:36.165632Z","shell.execute_reply":"2024-09-05T16:31:36.165000Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dtree","key":"vPMizv64jz"},{"type":"output","id":"8K5YsWNCWwLnvT9bbtK5B","data":[{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"1e1ecdff714d4696e33cd5507e3c7d40","path":"/erad2024/build/1e1ecdff714d4696e33cd5507e3c7d40.html"},"text/plain":{"content_type":"text/plain","hash":"a6f1932200d07004b876376d31c2a7f3","path":"/erad2024/build/a6f1932200d07004b876376d31c2a7f3.txt"}}}],"key":"PFUoZK4qLV"}],"key":"EaUULUyX9b"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We have successfully created a Analysis-Ready Cloud-Optimezed dataset.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bwufvoBCGk"}],"key":"njOup4v7Tf"}],"key":"NmFL2kRELV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BXQE9yK0pY"}],"key":"pPkL4gj6GM"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sbyZIk3wXO"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"wKFjIx8Ph7"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We discussed the concept of Analysis-Ready Cloud-Optimezed (ARCO) datasets, emphasizing the importance of datasets that are pre-processed, clean, and well-organized. Leveraging the Climate and Forecast (CF) format-based FM301 hierarchical tree structure, endorsed by the World Meteorological Organization (WMO), we developed an open data model to arrange, manage, and store radar data in cloud-storage buckets efficiently. The ultimate goal of radar ARCO data is to streamline the data science process, making datasets immediately usable without the need for extensive preprocessing.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"O9EDtFlhpw"}],"key":"ZOq6AvWFzc"},{"type":"heading","depth":3,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"What’s next?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"WbVuLoQM7E"}],"identifier":"whats-next","label":"What’s next?","html_id":"whats-next","implicit":true,"key":"o5USR5R5Fc"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Now, we can explore some quantitavite precipitation estimation (QPE) and quasy-vertical profiles (QVP) demos in the QPE-QVPs notebook.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MWDgIrdvyy"}],"key":"QQIqTNZGku"}],"key":"KzOZYA2UNt"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CLap3SCiz5"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"t3dSzz1CQJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/index.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Xradar","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"To8q323jUS"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/index.html","key":"KMxXmCNBSz"}],"key":"LPZFiVGNGO"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://github.com/ProjectPythia/radar-cookbook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Radar cookbook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FT5EUsRUm9"}],"urlSource":"https://github.com/ProjectPythia/radar-cookbook","error":true,"key":"GejgEG0oQV"}],"key":"YKphi9ofRl"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Py-Art landing page","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"N8mlk4gdd1"}],"urlSource":"https://arm-doe.github.io/pyart/","key":"Ev4LKT6sBM"}],"key":"K22H8ABJjT"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://docs.wradlib.org/en/latest/index.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Wradlib landing page","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"G7gRarpLZD"}],"urlSource":"https://docs.wradlib.org/en/latest/index.html","key":"ilsSdsMqM5"}],"key":"GL0Igy7iDc"}],"key":"AprviqteWv"}],"key":"xGutYGWQrJ"}],"key":"AoN5vhkr3V"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"LROSE Wind Tutorial","url":"/lrose-erad-fractl-samurai","group":"LROSE & PyDDA multi doppler analysis"},"next":{"title":"QPE & QVPs","url":"/qpe-qvps","group":"ARCO Radar Datasets"}}},"domain":"http://localhost:3000"}