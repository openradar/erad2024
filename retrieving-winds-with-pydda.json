{"kind":"Notebook","sha256":"363f9d95bb358be6c854953f8b1a4ca17d600cd15960b5ddd4258f12ad05dc1f","slug":"retrieving-winds-with-pydda","location":"/notebooks/Retrieving_winds_with_pydda.ipynb","dependencies":[],"frontmatter":{"title":"PyDDA tutorial","content_includes_title":false,"kernelspec":{"name":"python3","language":"python","display_name":"Python 3 (ipykernel)"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"thumbnail":"/erad2024/build/5e2d147096249dc3a37da495168a9e9e.png","exports":[{"format":"ipynb","filename":"Retrieving_winds_with_pydda.ipynb","url":"/erad2024/build/Retrieving_winds_wit-e540907d930c9dc3b892bd4cf11ed7a4.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"image","url":"/erad2024/build/5e2d147096249dc3a37da495168a9e9e.png","alt":"PyDDA logo","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gEp1ZoodeD","urlSource":"https://openradarscience.org/PyDDA/_images/logo.png"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"PyDDA is an open source Python package for retrieving winds using Multiple Doppler analyses. It uses the 3D variational technique for retrieving winds from multiple Doppler radars. It uses Py-ART Grid Objects as inputs. Therefore, preprocessed and gridded data are needed for PyDDA to run.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oLi1TgjRl2"}],"key":"DOHOkSG5zj"},{"type":"heading","depth":2,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"3D variational technique","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"FRDzTfYSwF"}],"identifier":"id-3d-variational-technique","label":"3D variational technique","html_id":"id-3d-variational-technique","implicit":true,"key":"l8h6LCOTw7"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"PyDDA uses a 3D variational technique to retrieve the 3D wind field. We will leave students that are interested in more information about these technqiues two references to read at the end of this notebook. A basic introduction to 3D variational analysis is given here.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"BtfAGv2lRq"}],"key":"taBMLL3Kmq"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"PyDDA minimizes a cost function ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"h29JeFc7le"},{"type":"inlineMath","value":"J","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi></mrow><annotation encoding=\"application/x-tex\">J</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span></span></span>","key":"EDJrq0tgyt"},{"type":"text","value":" that corresponds to various penalties including:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"K57NnPNrNR"}],"key":"K9g9Mlp8PI"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"inlineMath","value":"J_{m} = \\nabla \\cdot V","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>J</mi><mi>m</mi></msub><mo>=</mo><mi mathvariant=\"normal\">∇</mi><mo>⋅</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">J_{m} = \\nabla \\cdot V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>","key":"x76D6P0pqk"},{"type":"text","value":" which corresponds to the mass continuity equation.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"inXlcY59d6"}],"key":"mZdSIw4BUt"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"inlineMath","value":"J_{o} = ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>J</mi><mi>o</mi></msub><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">J_{o} = </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span>","key":"L8h0WR39Ne"},{"type":"text","value":" RMSE between radar winds and analysis winds.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"YXeAMgAZK2"}],"key":"dV5f4ow8c9"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"inlineMath","value":"J_{b} = ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>J</mi><mi>b</mi></msub><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">J_{b} = </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span>","key":"alsg3M58BS"},{"type":"text","value":" RMSE between sounding winds and analysis winds.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"bA4MMdoGFw"}],"key":"h5Be0CgF5v"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"inlineMath","value":"J_{s} = \\nabla^2 V","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>J</mi><mi>s</mi></msub><mo>=</mo><msup><mi mathvariant=\"normal\">∇</mi><mn>2</mn></msup><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">J_{s} = \\nabla^2 V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>","key":"a3Li3TiJ9v"},{"type":"text","value":" which corresponds to the smoothness of wind field to eliminate high-frequency noise that can result from numerical instability.","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"Nv0b25LikD"}],"key":"js1MF5a9VW"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"The cost function to be minimized is a weighted sum of the various cost functions in PyDDA and are represented in Equation (1):","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"AW58tNqMTo"}],"key":"nrjZjo3FeR"},{"type":"paragraph","children":[{"type":"text","value":"$J = c_{m}J_{m} + c_{o}J_{o} + c_{b}J_{b} + c_{s}J_{s} + ...$ (1)","key":"DEgmwFqRYs"}],"key":"XIuv7RZQ9h"},{"type":"heading","depth":3,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"EFzQcqspCz"}],"identifier":"references","label":"References","html_id":"references","implicit":true,"key":"SocAKNoQT9"}],"key":"REzC7WA1yq"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Oh5MtlZs0M"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"ZHG6khxnKt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s import the necessary libraries. For now, we’ll need PyART, glob, matplotlib, and PyDDA.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bdFO4b7q97"}],"key":"H6x0QiUADD"}],"key":"wc3OdRjsKU"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import glob\n\nimport pyart\nimport matplotlib.pyplot as plt\nimport pydda\nimport warnings\nimport numpy as np\nimport pandas as pd\nimport fsspec\nimport cartopy.crs as ccrs\nwarnings.filterwarnings(\"ignore\")","visibility":"show","key":"En22keOuZ5"},{"type":"output","id":"13buemQ7dI5DmlSrogsuv","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\nWelcome to PyDDA 2.0.1\nIf you are using PyDDA in your publications, please cite:\nJackson et al. (2020) Journal of Open Research Science\nDetecting Jax...\nJax engine enabled!\nDetecting TensorFlow...\nUnable to load both TensorFlow and tensorflow-probability. TensorFlow engine disabled.\nNo module named 'tensorflow'\n"}],"visibility":"show","key":"ZmjckD1M7W"}],"visibility":"show","key":"A2sXXOzX43"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Case study","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gl1dWB9f1o"}],"identifier":"case-study","label":"Case study","html_id":"case-study","implicit":true,"key":"Krmdrv0972"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will examine the same case study over Italy that has been used for this entire short course. For this case in May 2024, we had weak convective cells in the region of","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VKWgicUTiM"}],"key":"v8CYSGpbx1"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For this case, we had coverage of the storm from two radars, a MeteoSwiss C-band radar near Monte Lema, CH and an X-band radar from ARPA Lombardia located about 50 km away in Milano, IT.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"R2xP16LR0I"}],"key":"hbej2trk7R"}],"key":"REdwrrUIAN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"C-band Radar","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SefAs71CPL"}],"identifier":"c-band-radar","label":"C-band Radar","html_id":"c-band-radar","implicit":true,"key":"MKQECi1spS"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We need to load and preprocess the C-band radar data first. In order to do so, we first need to load the MeteoSwiss C-band radar file.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qs2TTRbQhp"}],"key":"OZ5P5r4niW"}],"key":"KtWhE7t0hL"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Set the URL and path for the cloud\nURL = 'https://js2.jetstream-cloud.org:8001/'\npath = f'pythia/radar/erad2024'\n\n\nfs = fsspec.filesystem(\"s3\", anon=True, client_kwargs=dict(endpoint_url=URL))\n\nfs.glob(f\"{path}/*\")\n\nfiles = fs.glob(\"pythia/radar/erad2024/dda_data/*\")\nlocal_files = [\n    fsspec.open_local(\n        f\"simplecache::{URL}{i}\", s3={\"anon\": True}, filecache={\"cache_storage\": \".\"}\n    )\n    for i in files\n]\n\nradar = pyart.io.read(local_files[1])","visibility":"show","key":"e2XCIBG6TO"},{"type":"output","id":"EdpNKGk1srMyoXvh28LLO","data":[],"visibility":"show","key":"ghiAIaiUy3"}],"visibility":"show","key":"k5tI74UBQS"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"CW69F3bivV"},{"type":"output","id":"77RyndObc9rG9IpKW3rW0","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\t_FillValue: -9999.0\n\tlong_name: altitude\n\tunits: meters\n\tpositive: up\naltitude_agl:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\t_FillValue: -9999.0\n\tlong_name: altitude_above_ground_level\n\tunits: meters\n\tpositive: up\nantenna_transition:\n\tdata: <ndarray of type: int8 and shape: (2880,)>\n\t_FillValue: -128\n\tlong_name: antenna_is_in_transition_between_sweeps\n\tunits: \n\tcomment: 1 if antenna is in transition, 0 otherwise\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t_FillValue: -9999.0\n\tlong_name: ray_azimuth_angle\n\tunits: degrees\nelevation:\n\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t_FillValue: -9999.0\n\tlong_name: ray_elevation_angle\n\tunits: degrees\n\tpositive: up\nfields:\n\tDBZ_TOT:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: dBZ\n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\tDBZ:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: dBZ\n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\t\tmaxDBZInRaw: {'dbz99': '44.9', 'dbzMax': '62.2'}\n\tVEL:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: m/s\n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\tWIDTH:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: m/s\n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: dB\n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: deg/km\n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: \n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: deg\n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\tHCLASS:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tunits: \n\t\tsampling_ratio: 1.0\n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\tMCSSX:\n\t\tdata: <ndarray of type: int16 and shape: (2880, 416)>\n\t\t_FillValue: -32768\n\t\tunits: \n\t\tgrid_mapping: grid_mapping\n\t\tcoordinates: time range\n\t\tlegend: {0: 'NoMetClttr', 1: 'NoMetBioExtd', 2: 'MetRain', 3: 'MetWetSnow', 4: 'MetSnow', 5: 'MetGraupel', 6: 'MetHail'}\n\t\tcountInRaw: {'NoData': 567233, 'NoMetClttr': 12989, 'NoMetBioExtd': 29459, 'MetRain': 152998, 'MetWetSnow': 35907, 'MetSnow': 212737, 'MetGraupel': 24001, 'MetHail': 396, 'PercentValidData': '45.23'}\n\tcorrected_velocity:\n\t\tdata: <ndarray of type: float32 and shape: (2880, 416)>\n\t\t_FillValue: -32768.0\n\t\tlong_name: Corrected mean doppler velocity\n\t\tunits: meters_per_second\n\t\tstandard_name: corrected_radial_velocity_of_scatterers_away_from_instrument\n\t\tcoordinates: elevation azimuth range\n\t\tvalid_min: -41.25\n\t\tvalid_max: 41.25\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (8,)>\n\t_FillValue: -9999.0\n\tlong_name: ray_target_fixed_angle\n\tunits: degrees\ninstrument_parameters:\n\tfrequency:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: transmission_frequency\n\t\tunits: s-1\n\t\tmeta_group: instrument_parameters\n\tfollow_mode:\n\t\tdata: <ndarray of type: |S1 and shape: (8, 32)>\n\t\tlong_name: follow_mode_for_scan_strategy\n\t\toptions: none, sun, vehicle, aircraft, target, manual\n\t\tmeta_group: instrument_parameters\n\tpulse_width:\n\t\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: transmitter_pulse_width\n\t\tunits: seconds\n\t\tmeta_group: instrument_parameters\n\tprt_mode:\n\t\tdata: <ndarray of type: |S1 and shape: (8, 32)>\n\t\tlong_name: transmit_pulse_mode\n\t\toptions: fixed, staggered, dual\n\t\tmeta_group: radar_parameters\n\tprt:\n\t\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: pulse_repetition_time\n\t\tunits: seconds\n\t\tmeta_group: instrument_parameters\n\tprt_ratio:\n\t\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: pulse_repetition_frequency_ratio\n\t\tunits: seconds\n\t\tmeta_group: instrument_parameters\n\tpolarization_mode:\n\t\tdata: <ndarray of type: |S1 and shape: (8, 32)>\n\t\tlong_name: polarization_mode_for_sweep\n\t\toptions: horizontal, vertical, hv_alt, hv_sim, circular\n\t\tmeta_group: radar_parameters\n\tnyquist_velocity:\n\t\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: unambiguous_doppler_velocity\n\t\tunits: meters per second\n\t\tmeta_group: instrument_parameters\n\tunambiguous_range:\n\t\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: unambiguous_range\n\t\tunits: meters\n\t\tmeta_group: instrument_parameters\n\tn_samples:\n\t\tdata: <ndarray of type: int32 and shape: (2880,)>\n\t\t_FillValue: -9999\n\t\tlong_name: number_of_samples_used_to_compute_moments\n\t\tunits: \n\t\tmeta_group: instrument_parameters\n\tradar_antenna_gain_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: nominal_radar_antenna_gain_h_channel\n\t\tunits: db\n\t\tmeta_group: radar_parameters\n\tradar_antenna_gain_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: nominal_radar_antenna_gain_v_channel\n\t\tunits: db\n\t\tmeta_group: radar_parameters\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: half_power_radar_beam_width_h_channel\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\tradar_beam_width_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: half_power_radar_beam_width_v_channel\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\tradar_rx_bandwidth:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_receiver_bandwidth\n\t\tunits: s-1\n\t\tmeta_group: radar_parameters\n\tmeasured_transmit_power_v:\n\t\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: measured_radar_transmit_power_v_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_parameters\n\tmeasured_transmit_power_h:\n\t\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: measured_radar_transmit_power_h_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_parameters\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\t_FillValue: -9999.0\n\tlong_name: latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\t_FillValue: -9999.0\n\tlong_name: longitude\n\tunits: degrees_east\nnsweeps: 8\nngates: 416\nnrays: 2880\nradar_calibration:\n\tr_calib_time:\n\t\tdata: <ndarray of type: |S1 and shape: (1, 32)>\n\t\tlong_name: radar_calibration_time_utc\n\t\tmeta_group: radar_calibration\n\tr_calib_pulse_width:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_pulse_width\n\t\tunits: seconds\n\t\tmeta_group: radar_calibration\n\tr_calib_xmit_power_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_xmit_power_h_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_xmit_power_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_xmit_power_v_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_two_way_waveguide_loss_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_two_way_waveguide_loss_h_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_two_way_waveguide_loss_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_two_way_waveguide_loss_v_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_two_way_radome_loss_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_two_way_radome_loss_h_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_two_way_radome_loss_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_two_way_radome_loss_v_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_mismatch_loss:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_receiver_mismatch_loss\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_k_squared_water:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_k_squared_water\n\t\tunits: \n\t\tmeta_group: radar_calibration\n\tr_calib_radar_constant_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_constant_h_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_radar_constant_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_constant_v_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_antenna_gain_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_antenna_gain_h_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_antenna_gain_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_antenna_gain_v_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_noise_hc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_noise_h_co_polar_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_noise_vc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_noise_v_co_polar_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_noise_hx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_noise_h_cross_polar_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_noise_vx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_noise_v_cross_polar_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_i0_dbm_hc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_i0_dbm_hc\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_i0_dbm_vc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_i0_dbm_vc\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_i0_dbm_hx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_i0_dbm_hx\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_i0_dbm_vx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_i0_dbm_vx\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_gain_hc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_gain_h_co_polar_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_gain_vc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_gain_v_co_polar_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_gain_hx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_gain_h_cross_polar_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_gain_vx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_gain_v_cross_polar_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_slope_hc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_slope_h_co_polar_channel\n\t\tunits: \n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_slope_vc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_slope_v_co_polar_channel\n\t\tunits: \n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_slope_hx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_slope_h_cross_polar_channel\n\t\tunits: \n\t\tmeta_group: radar_calibration\n\tr_calib_receiver_slope_vx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_receiver_slope_v_cross_polar_channel\n\t\tunits: \n\t\tmeta_group: radar_calibration\n\tr_calib_dynamic_range_db_hc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_dynamic_range_db_hc\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_dynamic_range_db_vc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_dynamic_range_db_vc\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_dynamic_range_db_hx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_dynamic_range_db_hx\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_dynamic_range_db_vx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: r_calib_dynamic_range_db_vx\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_base_dbz_1km_hc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_reflectivity_at_1km_at_zero_snr_h_co_polar_channel\n\t\tunits: dBZ\n\t\tmeta_group: radar_calibration\n\tr_calib_base_dbz_1km_vc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_reflectivity_at_1km_at_zero_snr_v_co_polar_channel\n\t\tunits: dBZ\n\t\tmeta_group: radar_calibration\n\tr_calib_base_dbz_1km_hx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_reflectivity_at_1km_at_zero_snr_h_cross_polar_channel\n\t\tunits: dBZ\n\t\tmeta_group: radar_calibration\n\tr_calib_base_dbz_1km_vx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_reflectivity_at_1km_at_zero_snr_v_cross_polar_channel\n\t\tunits: dBZ\n\t\tmeta_group: radar_calibration\n\tr_calib_sun_power_hc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_sun_power_h_co_polar_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_sun_power_vc:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_sun_power_v_co_polar_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_sun_power_hx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_sun_power_h_cross_polar_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_sun_power_vx:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_sun_power_v_cross_polar_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_noise_source_power_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_noise_source_power_h_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_noise_source_power_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_noise_source_power_v_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_power_measure_loss_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_power_measurement_loss_h_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_power_measure_loss_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_power_measurement_loss_v_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_coupler_forward_loss_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_coupler_forward_loss_h_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_coupler_forward_loss_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_coupler_forward_loss_v_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_dbz_correction:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_dbz_correction\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_zdr_correction:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_zdr_correction\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_ldr_correction_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_ldr_correction_h_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_ldr_correction_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_ldr_correction_v_channel\n\t\tunits: db\n\t\tmeta_group: radar_calibration\n\tr_calib_system_phidp:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: calibrated_radar_system_phidp\n\t\tunits: degrees\n\t\tmeta_group: radar_calibration\n\tr_calib_test_power_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_test_power_h_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_test_power_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: radar_calibration_test_power_v_channel\n\t\tunits: dBm\n\t\tmeta_group: radar_calibration\n\tr_calib_index:\n\t\tdata: <ndarray of type: int32 and shape: (2880,)>\n\t\t_FillValue: -9999\n\t\tlong_name: calibration_data_array_index_per_ray\n\t\tunits: \n\t\tmeta_group: radar_calibration\n\t\tcomment: This is the index for the calibration which applies to this ray\nrange:\n\tdata: <ndarray of type: float32 and shape: (416,)>\n\tlong_name: Range from instrument to center of gate\n\tunits: meters\n\tspacing_is_constant: true\n\tmeters_to_center_of_first_gate: 150.00000596046448\n\tmeters_between_gates: 300.00001192092896\nscan_rate:\n\tdata: <ndarray of type: float32 and shape: (2880,)>\n\t_FillValue: -9999.0\n\tlong_name: antenna_angle_scan_rate\n\tunits: degrees per second\n\tmeta_group: instrument_parameters\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (8,)>\n\t_FillValue: -9999\n\tlong_name: index_of_last_ray_in_sweep\n\tunits: \nsweep_mode:\n\tdata: <ndarray of type: |S1 and shape: (8, 32)>\n\tlong_name: scan_mode_for_sweep\n\toptions: sector, coplane, rhi, vertical_pointing, idle, azimuth_surveillance, elevation_surveillance, sunscan, pointing, calibration, manual_ppi, manual_rhi, sunscan_rhi, doppler_beam_swinging, complex_trajectory, electronic_steering\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (8,)>\n\t_FillValue: -9999\n\tlong_name: sweep_index_number_0_based\n\tunits: \nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (8,)>\n\t_FillValue: -9999\n\tlong_name: index_of_first_ray_in_sweep\n\tunits: \ntarget_scan_rate:\n\tdata: <ndarray of type: float32 and shape: (8,)>\n\t_FillValue: -9999.0\n\tlong_name: target_scan_rate_for_sweep\n\tunits: degrees per second\ntime:\n\tdata: <ndarray of type: float64 and shape: (2880,)>\n\tlong_name: time in seconds since volume start\n\tunits: seconds since 2024-05-22T15:15:46Z\n\tstandard_name: time\n\tcalendar: gregorian\n\tcomment: times are relative to the volume start_time\nmetadata:\n\tConventions: CF-1.7\n\tSub_conventions: CF-Radial instrument_parameters radar_parameters radar_calibration\n\tversion: CF-Radial-1.4\n\ttitle: VOL_A\n\tinstitution: \n\treferences: Conversion software: Radx::SigmetRadxFile\n\tsource: Sigmet IRIS software\n\tcomment: \n\toriginal_format: SIGMETRAW\n\tdriver: RadxConvert(NCAR)\n\tcreated: 2024/05/22 15:34:35.590\n\tstart_datetime: 2024-05-22T15:15:46Z\n\tstart_time: 2024-05-22 15:15:46.934\n\tend_datetime: 2024-05-22T15:18:20Z\n\tend_time: 2024-05-22 15:18:20.864\n\tinstrument_name: Desio_Radar\n\tsite_name: Desio_Radar\n\tscan_name: VOL_A\n\tscan_id: 0\n\tplatform_is_mobile: false\n\tn_gates_vary: false\n\tray_times_increase: true\n\tNCO: netCDF Operators version 4.9.7 (Homepage = http://nco.sf.net, Code = http://github.com/nco/nco)\n\thistory: Wed May 22 15:34:38 2024: ncap2 -Os fixed_angle  (:)={0.7,1.3,3.0,5.0,7.0,10.0,15.0,25.0} /data/out/sigmet/realtime/20240522/DES/VOL/DES_VOL_RAW_20240522_1515.corr.nc /data/out/sigmet/realtime/20240522/DES/VOL/DES_VOL_RAW_20240522_1515.corr2.nc\nWed May 22 15:34:36 2024: ncap2 -Os sweep_number  (:)={0,1,2,3,4,5,6,7} /data/out/sigmet/realtime/20240522/DES/VOL/DES_VOL_RAW_20240522_1515.nc /data/out/sigmet/realtime/20240522/DES/VOL/DES_VOL_RAW_20240522_1515.corr.nc\nSigmet RAW file: ; get_percentile_nc.py: maxDBZInRaw = {\"dbz99\": \"44.9\", \"dbzMax\": \"62.2\"}; get_percentile_nc.py: legend MCSSX= {0: \"NoMetClttr\", 1: \"NoMetBioExtd\", 2: \"MetRain\", 3: \"MetWetSnow\", 4: \"MetSnow\", 5: \"MetGraupel\", 6: \"MetHail\"}; get_percentile_nc.py: countInRaw MCSSX= {\"NoData\": 567233, \"NoMetClttr\": 12989, \"NoMetBioExtd\": 29459, \"MetRain\": 152998, \"MetWetSnow\": 35907, \"MetSnow\": 212737, \"MetGraupel\": 24001, \"MetHail\": 396, \"PercentValidData\": \"45.23\"}; get_percentile_nc.py: meltingLevelMslM = {'ave': 2698.5, 'min': 1500.0, 'max': 2900.0}\n\tfield_names: DBZ_TOT, DBZ, VEL, WIDTH, ZDR, KDP, RHOHV, PHIDP, HCLASS, MCSSX, corrected_velocity\n\tvolume_number: 1\n\tplatform_type: fixed\n\tinstrument_type: radar\n\tprimary_axis: axis_z\n"}],"key":"t0OU5RtqJK"}],"key":"XLSLPspSzM"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dealiasing","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q4h83GHcWP"}],"identifier":"dealiasing","label":"Dealiasing","html_id":"dealiasing","implicit":true,"key":"RZAbdNiyvs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The next step is to dealias the radar data. We will follow the steps that were shown eariler in this course to dealias the radar data. Dealiasing is covered in detail in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AslXYnBMVv"},{"type":"link","url":"https://projectpythia.org/radar-cookbook/notebooks/foundations/pyart-corrections.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Radar Cookbook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RcX7K5pras"}],"urlSource":"https://projectpythia.org/radar-cookbook/notebooks/foundations/pyart-corrections.html","key":"V5YsAUNuGy"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h2SuJWeXQ1"}],"key":"Vcr7bW4WXd"}],"key":"mK7BcWRkbS"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"nyquist = radar.instrument_parameters['nyquist_velocity']['data'][0]\nvel_dealias = pyart.correct.dealias_region_based(radar,\n                                                    vel_field='velocity',\n                                                    nyquist_vel=nyquist,\n                                                    centered=True,\n                                                 \n                                                    )\nradar.add_field('corrected_velocity', vel_dealias, replace_existing=True)","visibility":"show","key":"KtOKbX3Fd3"},{"type":"output","id":"nMlBKE3jk1retf4pVxruF","data":[],"visibility":"show","key":"CDCQweXoJX"}],"visibility":"show","key":"N5n5O10WFZ"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the data to make sure dealiasing succeeded.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yQbDbcxS2g"}],"key":"C4qvRBfpVr"}],"visibility":"show","key":"jzohVI6Bfv"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)\ndisplay.plot('reflectivity',\n             vmin=-20,\n             vmax=70,\n             cmap='pyart_ChaseSpectral',\n             sweep=0)","visibility":"show","key":"BW9xaBsCcv"},{"type":"output","id":"2HDKVycshftvWiVLDw88v","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c0e2f1b8092f24b4fece4e6f33e6e86b","path":"/erad2024/build/c0e2f1b8092f24b4fece4e6f33e6e86b.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"VCjq6jdDHY"}],"visibility":"show","key":"OyOVRwdvsm"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)\ndisplay.plot('corrected_velocity',\n             vmin=-30,\n             vmax=30,\n             cmap='twilight_shifted',\n             sweep=0)","visibility":"show","key":"DTjPgwgbA8"},{"type":"output","id":"oW-LGeWjDtk7WtLvpgqtX","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"7d3f182e14091fe346164628134a6ce1","path":"/erad2024/build/7d3f182e14091fe346164628134a6ce1.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"HvHLvn6jeR"}],"visibility":"show","key":"QQY0rzIGaH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Some regions did not dealias correctly, like in the region around (-100 km, -100 km) where gate-to-gate shear exceeds the Nyquist interval in the absence of . The region-based algorithm is very sensitive to speckles that are present in the above image. Let’s despeckle the above radar data to remove some artifacts.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CaFnBteRob"}],"key":"OCmnZtTF5h"}],"key":"ERnU5O9q25"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"gatefilter = pyart.filters.GateFilter(radar)\ngatefilter.exclude_above('spectrum_width', 7)\n#gatefilter.exclude_below('cross_correlation_ratio', 0.8)\ngatefilter = pyart.correct.despeckle_field(radar, 'reflectivity', gatefilter=gatefilter, size=36)\ndisplay = pyart.graph.RadarDisplay(radar)\ndisplay.plot('reflectivity',\n             vmin=-20,\n             vmax=70, gatefilter=gatefilter,\n             cmap='pyart_ChaseSpectral',\n             sweep=0)","visibility":"show","key":"kCut1GpNdp"},{"type":"output","id":"iJurzpd-JZVVs7UH_lfq3","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"dae3e73dbea8e543bebefb70e74cea60","path":"/erad2024/build/dae3e73dbea8e543bebefb70e74cea60.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"DVwln8r63X"}],"visibility":"show","key":"BNlbcpBMpI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s also tweak the settings of the region based dealiasing. Currently, the dealiasing will attempt to dealias regions that are separated by 100 masked gates in the radial. We will disable this feature by setting ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iqpVK05DwQ"},{"type":"inlineCode","value":"skip_between_rays","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K2F7NqsxKi"},{"type":"text","value":" to 0 so that all dealiasing across filtered gates along the azimuth is disabled.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R7mBS4eqYP"}],"key":"y8rI2dUXEM"}],"key":"HBloz8ZjGi"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"nyquist = radar.instrument_parameters['nyquist_velocity']['data'][0]\nvel_dealias = pyart.correct.dealias_region_based(radar,\n                                                    vel_field='velocity',\n                                                    nyquist_vel=nyquist, gatefilter=gatefilter,\n                                                    centered=True,\n                                                 skip_between_rays=0,\n                                                    )\nradar.add_field('corrected_velocity', vel_dealias, replace_existing=True)","key":"E8NY4Lu3cm"},{"type":"output","id":"nwuKuduL9Hkz-N0coTMJT","data":[],"key":"AU3tpMVtus"}],"key":"KxP9A6ZJ0F"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s plot all of the sweeps to make sure dealiasing worked correctly.\nA good indicator of checking this is to check if there are discontinuities in the radial velocities between sweeps on the order of the Nyquist velocity. If there are such discontinuties, further tweaking of the parameters or grounding the retrieval to a sounding may be needed. Using these parameters, the above example radar data is properly dealiased.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PZLurqnGYS"}],"key":"ImNtbfXydq"}],"key":"Z3OyHlgoZG"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)\nfig, ax = plt.subplots(4, 5, figsize=(15, 10))\nfor i in range(radar.nsweeps):\n    display.plot('corrected_velocity',\n             vmin=-30,\n             vmax=30,\n             cmap='twilight_shifted',\n             sweep=i,\n             colorbar_label=\"m/s\",\n             ax=ax[int(i / 5), i % 5])\n    ax[int(i / 5), i % 5].set_title('%2.1f deg' % radar.fixed_angle[\"data\"][i])\n    ax[int(i / 5), i % 5].set_xlabel('X [km]')\n    ax[int(i / 5), i % 5].set_ylabel('Y [km]')\nfig.tight_layout()","key":"G1lVq2O5OK"},{"type":"output","id":"LSU907gd2oTePyDgAUWr-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"86f6202ab9bfec459da7777c12beade6","path":"/erad2024/build/86f6202ab9bfec459da7777c12beade6.png"},"text/plain":{"content":"<Figure size 1500x1000 with 40 Axes>","content_type":"text/plain"}}}],"key":"gysSIKGsXX"}],"key":"YNcpeOMVaK"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"pyart.io.write_cfradial('MonteLema.20240522.151606_dealiased.nc', radar)","key":"udN0eEq2mA"},{"type":"output","id":"8ONrW8QOMe7L9z0XUgSOG","data":[],"key":"YK77HKeukV"}],"key":"go6ms4CUo5"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Gridding","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tXzLa8yocI"}],"identifier":"gridding","label":"Gridding","html_id":"gridding","implicit":true,"key":"ayKujQ8Nmr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"PyDDA requires data to be gridded to Cartesian coordinates in order to retrieve the 3D wind fields. Therefore, we will use Py-ART’s ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TEhU1znYAs"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"grid_from_radars","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"V2bhlZbeSV"}],"key":"RWnuWXlhvH"},{"type":"text","value":" function in order to do the gridding. You usually want to have a grid resolution such that your features of interest are covered by four grid points. In this case, we’re at 1 km horizontal and 0.5 km vertical resolution. For more information on gridding with Py-ART, see the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"m6rLjYXbt8"},{"type":"link","url":"https://projectpythia.org/radar-cookbook/notebooks/foundations/pyart-gridding.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Radar Cookbook","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Jm1rCaVW7f"}],"urlSource":"https://projectpythia.org/radar-cookbook/notebooks/foundations/pyart-gridding.html","key":"tvB0Pwptcy"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JaEUdbbbQy"}],"key":"xt3LlXQGeI"}],"key":"Ep5fI0IJJm"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"grid_limits = ((0., 15000.), (-100_000., 100_000.), (-100_000., 100_000.))\ngrid_shape = (31, 201, 201)\nradar.fields[\"corrected_velocity\"][\"data\"] = np.ma.masked_where(gatefilter.gate_excluded,\n                                                        radar.fields[\"corrected_velocity\"][\"data\"])\nradar.fields[\"reflectivity\"][\"data\"] = np.ma.masked_where(gatefilter.gate_excluded,\n                                                        radar.fields[\"reflectivity\"][\"data\"])\n\ncband_grid = pyart.map.grid_from_radars([radar], grid_limits=grid_limits,\n                                 grid_shape=grid_shape)\ncband_ds = cband_grid.to_xarray()\ncband_ds","visibility":"show","key":"ei6cpxMks6"},{"type":"output","id":"sSN2C0Im-Dln1IbRL87zP","data":[{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"90bc3e417c4d75495aed7c271178d3a7","path":"/erad2024/build/90bc3e417c4d75495aed7c271178d3a7.html"},"text/plain":{"content":"<xarray.Dataset> Size: 106MB\nDimensions:                              (time: 1, z: 31, y: 201, x: 201)\nCoordinates:\n  * time                                 (time) object 8B 2024-05-22 15:16:06...\n  * z                                    (z) float64 248B 0.0 500.0 ... 1.5e+04\n    lat                                  (y, x) float64 323kB 45.13 ... 46.93\n    lon                                  (y, x) float64 323kB 7.558 ... 10.15\n  * y                                    (y) float64 2kB -1e+05 ... 1e+05\n  * x                                    (x) float64 2kB -1e+05 ... 1e+05\nData variables:\n    reflectivity_hh_clut                 (time, z, y, x) float64 10MB 23.53 ....\n    spectrum_width                       (time, z, y, x) float64 10MB 2.603 ....\n    reflectivity                         (time, z, y, x) float64 10MB 23.59 ....\n    velocity                             (time, z, y, x) float64 10MB 3.374 ....\n    reflectivity_vv                      (time, z, y, x) float64 10MB 23.52 ....\n    differential_reflectivity            (time, z, y, x) float64 10MB 0.02071...\n    signal_to_noise_ratio                (time, z, y, x) float64 10MB 13.93 ....\n    uncorrected_differential_phase       (time, z, y, x) float64 10MB 2.025 ....\n    uncorrected_cross_correlation_ratio  (time, z, y, x) float64 10MB 0.8806 ...\n    corrected_velocity                   (time, z, y, x) float64 10MB 3.374 ....\n    ROI                                  (time, z, y, x) float32 5MB 2.469e+0...\nAttributes: (12/16)\n    nradar:           1\n    radar_name:       {'long_name': 'Name of radar used to make the grid', 'd...\n    Conventions:      CF/Radial instrument_parameters\n    version:          1.3\n    title:            \n    institution:      \n    ...               ...\n    field_names:      reflectivity, signal_to_noise_ratio, reflectivity_vv, d...\n    history:          \n    volume_number:    0\n    platform_type:    fixed\n    instrument_type:  radar\n    primary_axis:     axis_z","content_type":"text/plain"}}}],"visibility":"show","key":"GcQAAsgbl8"}],"visibility":"show","key":"DeV8VgKwZs"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s make sure the grid looks good!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fiZIznNSjF"}],"key":"cnSaG1XthQ"}],"key":"oU1R1JQnXk"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cband_ds.isel(z=1).reflectivity.plot(x='lon',\n                                   y='lat',\n                                   vmin=-20,\n                                   vmax=70,\n                                   cmap='pyart_ChaseSpectral')","visibility":"show","key":"DB4ugRgY5z"},{"type":"output","id":"rqIBQzmPPF8n_oCF7jwbK","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"88e30bc223b06280f922df41883c4481","path":"/erad2024/build/88e30bc223b06280f922df41883c4481.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"TgcuXeQ7YR"}],"visibility":"show","key":"gIXeifhLLU"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cband_ds.isel(y=35).reflectivity.plot(x='x', y='z', vmin=-20, vmax=70,\n                                   cmap='pyart_ChaseSpectral')","visibility":"show","key":"SXv0ho6wpO"},{"type":"output","id":"49N1CX8LxYIM1DnZ5v1Oj","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"dd43c891b5655cc005bfc6dd1daaee20","path":"/erad2024/build/dd43c891b5655cc005bfc6dd1daaee20.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"usdVQrNkkT"}],"visibility":"show","key":"gmkqhOBtpX"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"X-band Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"epKg7cU45a"}],"identifier":"x-band-data","label":"X-band Data","html_id":"x-band-data","implicit":true,"key":"I9p3iO1GPt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Next, we need to load the X-band radar data from the archive.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VfP4sH4i86"}],"key":"TczuZVNIAe"}],"key":"QXeO2cFyh2"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"radar_xband = pyart.io.read(local_files[0])","visibility":"show","key":"rAmdZKfNAU"},{"type":"output","id":"n9G1lMb3EFr8lzO5FRWwx","data":[],"visibility":"show","key":"DhMSKVyAQI"}],"visibility":"show","key":"sW2wShblKZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read a single file, the one closes to the UAH volume scan used before","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YyqNrDesa2"}],"key":"MCPeWbceO4"}],"key":"VvrivBwDt9"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"sKWv6FHBUT"},{"type":"output","id":"Ojze91uXDJqlL20QN3Yx2","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Altitude\n\tunits: meters\n\tstandard_name: Altitude\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (7200,)>\n\tlong_name: azimuth_angle_from_true_north\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (7200,)>\n\tlong_name: elevation_angle_from_horizontal_plane\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\treflectivity:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: Horizontal Reflectivity\n\t\tunits: dBZ\n\t\tstandard_name: horizontal_reflectivity\n\t\tcoordinates: elevation azimuth range\n\tsignal_to_noise_ratio:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: Signal to noise ratio\n\t\tunits: dB\n\t\tstandard_name: signal_to_noise_ratio\n\t\tcoordinates: elevation azimuth range\n\treflectivity_vv:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: Vertical Reflectivity\n\t\tunits: dBZ\n\t\tstandard_name: vertical_reflectivity\n\t\tcoordinates: elevation azimuth range\n\tdifferential_reflectivity:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: Differential reflectivity\n\t\tunits: dB\n\t\tstandard_name: differential_reflectivity\n\t\tcoordinates: elevation azimuth range\n\tuncorrected_cross_correlation_ratio:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: Uncorrected copolar correlation coefficient (RHOHV)\n\t\tunits: -\n\t\tstandard_name: copolar_correlation_coefficient\n\t\tcoordinates: elevation azimuth range\n\tuncorrected_differential_phase:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: Uncorrected differential propagation phase\n\t\tunits: deg\n\t\tstandard_name: differential_phase\n\t\tcoordinates: elevation azimuth range\n\tvelocity:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: Mean Doppler velocity\n\t\tunits: m/s\n\t\tstandard_name: mean_Doppler_velocity\n\t\tcoordinates: elevation azimuth range\n\tspectrum_width:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\t\tlong_name: Doppler spectrum width\n\t\tunits: m/s\n\t\tstandard_name: Doppler_spectrum_width\n\t\tcoordinates: elevation azimuth range\n\treflectivity_hh_clut:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\t_FillValue: -9999.0\n\tcorrected_velocity:\n\t\tdata: <ndarray of type: float64 and shape: (7200, 492)>\n\t\tunits: meters_per_second\n\t\tstandard_name: corrected_radial_velocity_of_scatterers_away_from_instrument\n\t\tlong_name: Corrected mean doppler velocity\n\t\tcoordinates: elevation azimuth range\n\t\t_FillValue: -9999.0\n\t\tvalid_min: -24.75\n\t\tvalid_max: 24.75\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (20,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tfrequency:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tlong_name: Radiation frequency\n\t\tunits: s-1\n\t\tmeta_group: instrument_parameters\n\tpulse_width:\n\t\tdata: <ndarray of type: float32 and shape: (7200,)>\n\t\tlong_name: Pulse width\n\t\tunits: seconds\n\t\tcomments: Pulse width\n\t\tmeta_group: instrument_parameters\n\tnyquist_velocity:\n\t\tdata: <ndarray of type: float32 and shape: (7200,)>\n\t\tlong_name: Nyquist velocity\n\t\tunits: m/s\n\t\tcomments: Unambiguous velocity\n\t\tmeta_group: instrument_parameters\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tlong_name: Antenna beam width H polarization\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\tradar_beam_width_v:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tlong_name: Antenna beam width V polarization\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\nlatitude:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Latitude\n\tunits: degrees_north\n\tstandard_name: Latitude\nlongitude:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Longitude\n\tunits: degrees_east\n\tstandard_name: Longitude\nnsweeps: 20\nngates: 492\nnrays: 7200\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (492,)>\n\tlong_name: range_to_measurement_volume\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (20,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: |S1 and shape: (20, 32)>\n\tlong_name: Sweep mode\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int64 and shape: (20,)>\n\tlong_name: Sweep number\n\tunits: count\n\tstandard_name: sweep_number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (20,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float64 and shape: (7200,)>\n\tlong_name: time_in_seconds_since_volume_start\n\tunits: seconds since 1970-01-01T00:00:00Z\n\tstandard_name: time\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: \n\tcomment: \n\tinstrument_name: L\n\tfield_names: reflectivity, signal_to_noise_ratio, reflectivity_vv, differential_reflectivity, uncorrected_cross_correlation_ratio, uncorrected_differential_phase, velocity, spectrum_width, reflectivity_hh_clut\n\thistory: \n\tvolume_number: 0\n\tplatform_type: fixed\n\tinstrument_type: radar\n\tprimary_axis: axis_z\n"}],"key":"MqEoCEo7tJ"}],"key":"K5PSXEfPOL"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualize the data to make sure we have the correct scan.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xVoCQhT3s0"}],"key":"acgsdvz87l"}],"key":"zaMH9HyqKW"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar_xband)\ndisplay.plot('DBZ',\n                     vmin=0,\n                     vmax=70,\n                     cmap='pyart_ChaseSpectral',\n                     sweep=0)\nplt.ylim(-100, 100)\nplt.xlim(-100, 100)","visibility":"show","key":"ckXZz1SGET"},{"type":"output","id":"ynX6TKwHSVBLAwMWFdu9K","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"(-100.0, 100.0)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"7a27aaeae2b42e92588def1cc6ea427e","path":"/erad2024/build/7a27aaeae2b42e92588def1cc6ea427e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"W352MSPHrA"}],"visibility":"show","key":"vYeRm7eLZj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The X-band radar data also need to be dealiased. We will still need to filter out the noise in the above radar data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xYqQmdwQuf"}],"key":"UoAC9B03IB"}],"key":"PCPZtbuWU6"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Use the C-band radar lat/lon as the center for the grid\n\ngatefilter = pyart.filters.GateFilter(radar_xband)\ngatefilter.exclude_above('WIDTH', 7)\ngatefilter.exclude_below('RHOHV', 0.8)\ngatefilter = pyart.correct.despeckle_field(radar_xband, 'DBZ', gatefilter=gatefilter, size=100)\nvel_dealias = pyart.correct.dealias_region_based(radar_xband,\n                                                    vel_field='VEL',\n                                                    nyquist_vel=nyquist,\n                                                    centered=True,\n                                                 skip_between_rays=0,\n                                                 skip_along_ray=0,\n                                                 interval_splits=3\n                                                    )\nradar_xband.add_field('corrected_velocity', vel_dealias, replace_existing=True)","visibility":"show","key":"oBmIdRaPTQ"},{"type":"output","id":"tSGsuTlzjM8plDVE5tjB_","data":[],"visibility":"show","key":"cOohtbhHm4"}],"visibility":"show","key":"jmwYf2zdOd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s view the sweeps to make sure that dealiasing is working correctly.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xTERIwbfsK"}],"key":"o7Wov0yEmi"}],"key":"YD8shQzmdH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar_xband)\nfig, ax = plt.subplots(2, 4, figsize=(15, 5))\nfor i in range(radar_xband.nsweeps):\n    display.plot('corrected_velocity',\n             vmin=-30,\n             vmax=30,\n             cmap='twilight_shifted',\n             sweep=i,\n             colorbar_label=\"m/s\",\n             ax=ax[int(i / 4), i % 4])\n    ax[int(i / 4), i % 4].set_title('%2.1f deg' % radar.fixed_angle[\"data\"][i])\n    ax[int(i / 4), i % 4].set_xlabel('X [km]')\n    ax[int(i / 4), i % 4].set_ylabel('Y [km]')\nfig.tight_layout()","key":"K8UGOlmBtR"},{"type":"output","id":"eJND_zg_utPYvC2FWBsJt","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c867742301938de9c1622d827b5fd1dd","path":"/erad2024/build/c867742301938de9c1622d827b5fd1dd.png"},"text/plain":{"content":"<Figure size 1500x500 with 16 Axes>","content_type":"text/plain"}}}],"key":"KbLbbAdAGa"}],"key":"xcHO16DBEF"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"pyart.io.write_cfradial('ARPA_Lombardia.20240522.151546_dealiased.nc', radar_xband)","key":"WZvrup5fkj"},{"type":"output","id":"XzCekfoPCWV3UMsclSVCo","data":[],"key":"IPLdWw5K94"}],"key":"bHEIfGWFGT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"grid_lat = radar.latitude['data'][0]\ngrid_lon = radar.longitude['data'][0]\nxband_grid = pyart.map.grid_from_radars([radar_xband],\n                                         grid_limits=grid_limits,\n                                         grid_shape=grid_shape,\n                                         grid_origin=(grid_lat, grid_lon),\n                                        )\n\n# Convert to xarray and remove the time dimension\nxband_ds = xband_grid.to_xarray().squeeze()","key":"vTtl59Sgqu"},{"type":"output","id":"OS20h07JNxbTgtzIyIzC8","data":[],"key":"cuNncfLEcs"}],"key":"r1UkLcMCxs"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualize the grids","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XmRKjRgU9b"}],"identifier":"visualize-the-grids","label":"Visualize the grids","html_id":"visualize-the-grids","implicit":true,"key":"GhlGVq4gew"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s see what our output data looks like!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WZHNkasn59"}],"key":"wS5qVySw1i"}],"key":"n8vmwdzwVt"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"xband_ds.DBZ.isel(z=1).plot(x='lon', y='lat', \n                            cmap='Spectral_r', vmin=-20, vmax=50)","visibility":"show","key":"xpjf9NpE6R"},{"type":"output","id":"ogeT06ZvJcpt0rdn44sW4","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"f5403a599aac22d072e675af36c14897","path":"/erad2024/build/f5403a599aac22d072e675af36c14897.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"XN2CtOosfL"}],"visibility":"show","key":"EFG54OC0Rd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Velocities look good!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MI3SMoJevC"}],"key":"Z0ITap3gLW"}],"key":"m0zUGgDONy"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"xband_ds.corrected_velocity.isel(z=4).plot(x='lon',\n                                  y='lat',\n                                  cmap='twilight_shifted',\n                                  vmin=-30,\n                                  vmax=30)","visibility":"show","key":"Qcf8n7z8AL"},{"type":"output","id":"mtRYkLZOwz4Ag2kzFIUmf","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"0f8d01824f98c25b4fcd1de92c9f6b17","path":"/erad2024/build/0f8d01824f98c25b4fcd1de92c9f6b17.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"OMDG2zU7x4"}],"visibility":"show","key":"Umf63CMS6j"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"xband_ds.corrected_velocity.isel(y=55).plot(x='x',\n                                  y='z',\n                                  cmap='twilight_shifted',\n                                  vmin=-20,\n                                  vmax=20)","visibility":"show","key":"G4eyJbzkpj"},{"type":"output","id":"eKzBFcPas90NB7s4uCYLa","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"715469bec4812b6f73dcaafd1f35c95a","path":"/erad2024/build/715469bec4812b6f73dcaafd1f35c95a.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"owvJFktX1Z"}],"visibility":"show","key":"qTvpCX00oU"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"PyDDA initialization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P354gOsOly"}],"identifier":"pydda-initialization","label":"PyDDA initialization","html_id":"pydda-initialization","implicit":true,"key":"k32hFO9obE"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The 3DVAR wind retrieval first requires an initial guess at the wind field in order to start the cost function minimization process. PyDDA has support for using WRF and sounding data as an initial guess of the wind field as well as constant wind fields.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XRpcHyZ6hW"}],"key":"eeArpuqEIJ"},{"type":"table","position":{"start":{"line":5,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Initalization functions in ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jvHEMgd2fF"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"pydda.initialization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Lvgce1gIMH"}],"key":"cPqvW9tqsL"},{"type":"text","value":" module:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CrIRRnmlkM"}],"key":"W83Rr8xcQX"},{"type":"tableCell","header":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Functionality","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mzWGlRSRtK"}],"key":"RORdUaOoR1"}],"key":"zqxzYR7vwQ"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"make_constant_wind_field(Grid[, wind, vel_field])","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ejFKQ57VGL"}],"key":"MmTob0SR6R"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"This function makes a constant wind field given a wind vector","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"s3Q4bn8jHK"}],"key":"FXtlhMwhoy"}],"key":"OIIGoEUd4r"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"make_wind_field_from_profile(Grid, profile)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"rhuSdON2IU"}],"key":"GEaRg9Jdn5"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"This function makes a 3D wind field from a sounding.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"rSoQMm84wh"}],"key":"f1havhPflW"}],"key":"jwK4DMkGDD"},{"type":"tableRow","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"make_background_from_wrf(Grid, file_path, ...)","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fjGcH0CT3n"}],"key":"cyH7hsXc4l"},{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"This function makes an initalization field based off of the u and w from a WRF run.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"wxIN3vFeeI"}],"key":"VNd2xH70fe"}],"key":"pWSdt9Davj"},{"type":"tableRow","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"make_initialization_from_era_interim(Grid[, ...])","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"cxQkER1azb"}],"key":"brYnLuGRFP"},{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"This function will read ERA Interim in NetCDF format and add it to the Py-ART grid specified by Grid.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"spJ61zFKWp"}],"key":"xDSOJSOXYv"}],"key":"NcKePdAYMq"}],"key":"EcJ2Q9VXb2"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"For this example, using a zero initialization field is sufficient to create an accurate representation of the wind field. Depending on your radar set up, you may need to adjust the input initial wind field to avoid artifacts at the edges of the multi-Doppler lobes.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"GHA91S5lJL"}],"key":"cMl2yDxc3p"}],"key":"TCda5sjvpk"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cband_ds = pydda.io.read_from_pyart_grid(cband_grid)\nxband_ds = pydda.io.read_from_pyart_grid(xband_grid)\ncband_ds = pydda.initialization.make_constant_wind_field(cband_ds, (0., 0., 0.), 'velocity')\nxband_ds[\"reflectivity\"] = xband_ds[\"DBZ\"]","visibility":"show","key":"ivNUZExydx"},{"type":"output","id":"6jWNMlcSZyiPhK8ikSwXd","data":[],"visibility":"show","key":"Wfugxje1Vx"}],"visibility":"show","key":"iQetIhNhGO"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"PyDDA wind retrieval","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bktuour5ZM"}],"identifier":"pydda-wind-retrieval","label":"PyDDA wind retrieval","html_id":"pydda-wind-retrieval","implicit":true,"key":"TZ9bOTeH84"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The core wind retrieval function in PyDDA is done using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Cy9fF9vi9S"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"retrieval.get_dd_wind_field","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GlfiavFnog"}],"key":"n2ccSR3hlI"},{"type":"text","value":". It has many potential keyword inputs that the user can enter. In this example, we are specifying:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vQQM0SGHGl"}],"key":"JqemZDMura"},{"type":"table","position":{"start":{"line":5,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Input to ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BaHlceRfFj"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"pydda.initialization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YyjP00volv"}],"key":"TyvCFOFg16"},{"type":"text","value":" module:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yTbV1Kqz7t"}],"key":"VJoMILwyuW"},{"type":"tableCell","header":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Meaning","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xWGXqCE6I8"}],"key":"tUK8eDrs9f"},{"type":"tableCell","header":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Value","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UNZGX7mObv"}],"key":"d5t0T2gUQy"}],"key":"yUMNzKMxam"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Grids","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"eRQpgvteuW"}],"key":"Tx0qZ2Z0Ks"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The input grids to analyze.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mP1UcDba5c"}],"key":"ekclIHwkcd"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"[uah_grid, nexrad_grid]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"VvQdTFXtat"}],"key":"u2imkmb9fu"}],"key":"NKSmYXr1yo"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"u_init","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"DmXbEtINUd"}],"key":"uFf9giOfqY"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Initial guess of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"eD81sm851l"},{"type":"emphasis","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"u","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"v1iSBFT6yX"}],"key":"YtDqMYVXNh"},{"type":"text","value":" field.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"c1G9k6nyYn"}],"key":"KEqUDM5TCY"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"u_init","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"DfBWaK758T"}],"key":"HC6xy2SCcq"}],"key":"YXsXRZ8HhM"},{"type":"tableRow","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"v_init","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"dHDFAuQpmW"}],"key":"YrBLPngQeK"},{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Initial guess of ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"wM0Ymt9J6L"},{"type":"emphasis","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"u","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fbTKm8ejeV"}],"key":"bTLCxMk5dQ"},{"type":"text","value":" field.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Ee5DOcAjvh"}],"key":"zcVMj0kjDk"},{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"v_init","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"NBayky4PjG"}],"key":"Snwcq9HGVF"}],"key":"Yf56vMChTT"},{"type":"tableRow","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"w_init","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"CXcb5xEn9E"}],"key":"gkrB185KXX"},{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Initial guess of ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"DgIF71r3cA"},{"type":"emphasis","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"u","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"yEUgjSelrq"}],"key":"ehEDhFZBm5"},{"type":"text","value":" field.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"sOhaxEemBs"}],"key":"uUlggmAlNC"},{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"w_init","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"p1No5XkHsm"}],"key":"SCIAdZqlDa"}],"key":"a2ItZL2dpW"},{"type":"tableRow","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Co","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"T7ULfX3uhr"}],"key":"crCBj3Mari"},{"type":"tableCell","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Weight for cost function related to radar observations","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"OkLKSfJWRy"}],"key":"DHitvh5ogQ"},{"type":"tableCell","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"1.0","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"sDn9XpDRt1"}],"key":"SCNomeetag"}],"key":"FCk882dENv"},{"type":"tableRow","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Cm","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"VAPhgB0gmZ"}],"key":"dUfuNvkssg"},{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Weight of cost function related to mass continuity equation","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"RfrPE4mLGn"}],"key":"rsdTAKW8tJ"},{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"256.0","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"SOpW9dklxG"}],"key":"dzD0qkdlsb"}],"key":"EW40s3jAtt"},{"type":"tableRow","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Cx","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"ufWZL47vp6"}],"key":"rwvImgczQ1"},{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Weight of cost function for smoothess in the ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"xJwghprEId"},{"type":"emphasis","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"x","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"l9cp07OOPx"}],"key":"QNEECv0BxV"},{"type":"text","value":"-direction","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"CrcbZ8bl61"}],"key":"pSZIFFuYzY"},{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"1e-3","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"FHlj72A4E5"}],"key":"f4CEq3qw4L"}],"key":"YSHGh7CygG"},{"type":"tableRow","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Cy","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"dwTiwMxNFV"}],"key":"pcpLv90Yx9"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Weight of cost function for smoothess in the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"QpiEBpxjbZ"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"y","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"IFv3nnF8pK"}],"key":"nKoeiXb8R1"},{"type":"text","value":"-direction","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"VIwi7B9XgS"}],"key":"ykGvs8m3CN"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"1e-3","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Px93RmpQLi"}],"key":"QJFCRgtXtm"}],"key":"QvtdK0ERvo"},{"type":"tableRow","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Cz","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Gf3eD0Hyb7"}],"key":"zhrohT0Uls"},{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Weight of cost function for smoothess in the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"h03pAkiR4M"},{"type":"emphasis","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"z","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"AO25GTwjg0"}],"key":"kJR1ABUsOI"},{"type":"text","value":"-direction","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"s4fRRElEHc"}],"key":"WyB62ESTJb"},{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"1e-3","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"BQND42HYrQ"}],"key":"wpRf3OAEil"}],"key":"aIkrtdePz8"},{"type":"tableRow","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Cb","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"To7ez7K1ch"}],"key":"lddWeEu2iP"},{"type":"tableCell","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Weight of cost function for sounding (background) constraint","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"lNPqVmuDQk"}],"key":"ARoFn5HaXs"},{"type":"tableCell","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"0","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Ni8f0tUxqB"}],"key":"HWi8GQvASG"}],"key":"kh8yHb4mbV"},{"type":"tableRow","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"frz","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"ccyauDPX8w"}],"key":"IrbkAsFsC9"},{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"The freezing level in meters. This is to tell PyDDA where to use ice particle fall speeds in the wind retrieval verus liquid.","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"GCfFeuxdCO"}],"key":"VeJLkBnFwt"},{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"5000.","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"XIrPIz0utP"}],"key":"Ps50KcDj7C"}],"key":"RMzVrrremB"},{"type":"tableRow","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"filter_window","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"gKXlus0c3x"}],"key":"jZxFPibC3M"},{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"The window to apply the low pass filter on","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"Pe3jS9wOMI"}],"key":"jLthqKSgQU"},{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"5","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"NWeV6iaHNH"}],"key":"WLad5fIEqX"}],"key":"H2ne4kw67T"},{"type":"tableRow","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"mask_outside_opt","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"RIDdSUnzYE"}],"key":"Bb9YzeTUTo"},{"type":"tableCell","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Mask all winds outside the Dual Doppler lobes","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"LMEKb4s0Ms"}],"key":"NqzhzjvHOZ"},{"type":"tableCell","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"True","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"uIYqMAvPEo"}],"key":"RDgZAAdGrP"}],"key":"TnaKjBgaKN"},{"type":"tableRow","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"vel_name","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"KBcpFXjC1z"}],"key":"qKh3EAWoja"},{"type":"tableCell","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"The name of the velocity field in the radar data","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"eTQ3WUlQbd"}],"key":"ejhNjGr50a"},{"type":"tableCell","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"‘corrected_velocity’","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"igufP4x9EH"}],"key":"LjK312hjOb"}],"key":"XFHUjC8bRv"},{"type":"tableRow","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"wind_tol","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"uja75tGcWQ"}],"key":"gcGJ7F7UVI"},{"type":"tableCell","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Stop optimization when the change in wind speeds between iterations is less than this value","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"JirLFXat0S"}],"key":"YiMs4iuSXY"},{"type":"tableCell","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[],"key":"p6P6vmXLyb"}],"key":"cfQ0UU4dot"},{"type":"tableRow","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"engine","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"tL1anAGgr8"}],"key":"N5EIgyyo01"},{"type":"tableCell","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"PyDDA supports three backends for optimization: SciPy, JAX, and TensorFlow.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"HOOoTdkF2a"}],"key":"Z1bTygmFss"},{"type":"tableCell","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"“scipy”","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"chnP9Vll53"}],"key":"DxdCa8VInM"}],"key":"TOtr8q1x1q"}],"key":"t4Lk19UsdW"}],"visibility":"show","key":"ECF54mJeJo"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"grids, params = pydda.retrieval.get_dd_wind_field([cband_ds, xband_ds], \n                                                  Co=1, Cm=1024.,\n                                                  Cx=1e-2, Cy=1e-2, Cz=1e-2,\n                                                  frz=5000.0, \n                                                  mask_outside_opt=True, upper_bc=1,\n                                                  vel_name='corrected_velocity', \n                                                  wind_tol=0.5, engine=\"scipy\")","visibility":"show","key":"oFgINUV5rg"},{"type":"output","id":"HHNQr4EeZx70t-aeNdMzb","data":[{"name":"stdout","output_type":"stream","text":"False\nCalculating weights for radars 0 and 1\nCalculating weights for radars 1 and 0\nCalculating weights for models...\nStarting solver \nrmsVR = 4.581566489964383\nTotal points: 230028\nThe max of w_init is 0.0\nTotal number of model points: 0\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n      0|225014.3217|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000\nThe gradient of the cost functions is 4.948411525020032\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     10|  34.4444| 392.7358|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  16.9515\nMax change in w: 16.085\nThe gradient of the cost functions is 0.6430217385659284\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     20|   5.5918| 153.0285|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  13.4392\nMax change in w: 8.985\nThe gradient of the cost functions is 1.2413023784656272\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     30|   5.6765|  75.2223|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  14.2132\nMax change in w: 5.944\nThe gradient of the cost functions is 0.5064189386617047\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     40|   3.3685|  56.8835|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  28.0487\nMax change in w: 6.346\nThe gradient of the cost functions is 0.5769385897087621\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     50|   0.9216|  58.0841|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  32.2789\nThe gradient of the cost functions is 0.8702678267445179\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     60|   0.9459|  58.0568|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  32.8578\nThe gradient of the cost functions is 0.31243965770462756\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     70|   0.9301|  57.9545|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  32.4364\nThe gradient of the cost functions is 0.3035535379905324\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     80|   0.8854|  57.9958|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  33.0280\nThe gradient of the cost functions is 0.3118972333290044\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n     90|  11.7099|  83.1082|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  53.8145\nThe gradient of the cost functions is 1.2989777497316815\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    100|   0.9967|  58.1724|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  36.9643\nThe gradient of the cost functions is 0.2893798888505721\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    110|   0.8660|  57.8911|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  35.2250\nMax change in w: 2.821\nThe gradient of the cost functions is 0.32156084348290553\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    120|   0.8570|  57.7843|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  36.1473\nThe gradient of the cost functions is 0.30306820341000806\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    130|   0.9132|  57.8128|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  37.1165\nThe gradient of the cost functions is 0.303070379212683\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    140|   0.9132|  57.8128|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  37.1164\nThe gradient of the cost functions is 0.436504303681918\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    150|   2.2854|  53.4110|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  40.6656\nThe gradient of the cost functions is 0.4482623869197444\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    160|   1.8882|  53.7286|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  41.6516\nThe gradient of the cost functions is 0.43367478657011005\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    170|   1.7658|  53.8425|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  41.9048\nMax change in w: 4.417\nThe gradient of the cost functions is 0.43543396394208506\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    180|   1.7658|  53.8425|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  41.9048\nThe gradient of the cost functions is 0.4354352705914459\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    190|   1.7658|  53.8425|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  41.9048\nThe gradient of the cost functions is 0.3526130429637839\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    200|   0.6404|  53.7285|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.8138\nThe gradient of the cost functions is 0.32107683795597675\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    210|   0.6422|  53.7125|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.7044\nThe gradient of the cost functions is 0.181384477039499\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    220|   0.5066|  53.7627|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.9849\nThe gradient of the cost functions is 0.18138448026468498\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    230|   0.4315|  53.7305|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.8478\nThe gradient of the cost functions is 0.18138447703949984\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    240|   0.4232|  53.7334|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.8571\nThe gradient of the cost functions is 0.15726708720320356\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    250|   0.4043|  53.7450|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.8940\nThe gradient of the cost functions is 0.15726733256208358\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    260|   0.4043|  53.7450|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.8940\nThe gradient of the cost functions is 0.15726732976136135\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    270|   0.4043|  53.7450|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.8940\nThe gradient of the cost functions is 0.15726733256209527\nNfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  \n    280|   0.4043|  53.7450|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  42.8940\nApplying low pass filter to wind field...\nDone! Time = 336.5\n"}],"visibility":"show","key":"uUyZ2TFYRn"}],"visibility":"show","key":"go3f8FmVe1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualize the results","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L4IUKup5Qr"}],"identifier":"visualize-the-results","label":"Visualize the results","html_id":"visualize-the-results","implicit":true,"key":"raGlYbHIj3"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s visualize the results. There are two ways in which this data can be visualized. One way is by using PyDDA’s visualization routines. You can also use xarray to visualize the output grids.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IfrKOp27GL"}],"key":"gIoB6jE5Bn"}],"key":"zeIMCzLp0R"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds = grids[0]\nds","visibility":"show","key":"lW35SPf86L"},{"type":"output","id":"5ULoF94t9bsDQiHBtjkGx","data":[{"output_type":"execute_result","execution_count":29,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"f028fa7e22905d0d2092a09a158c1803","path":"/erad2024/build/f028fa7e22905d0d2092a09a158c1803.html"},"text/plain":{"content":"<xarray.Dataset> Size: 216MB\nDimensions:                              (time: 1, z: 31, y: 201, x: 201,\n                                          nradar: 1)\nCoordinates:\n  * time                                 (time) datetime64[ns] 8B 2024-05-22T...\n  * z                                    (z) float64 248B 0.0 500.0 ... 1.5e+04\n    lat                                  (y, x) float64 323kB 45.13 ... 46.93\n    lon                                  (y, x) float64 323kB 7.558 ... 10.15\n  * y                                    (y) float64 2kB -1e+05 ... 1e+05\n  * x                                    (x) float64 2kB -1e+05 ... 1e+05\nDimensions without coordinates: nradar\nData variables: (12/29)\n    reflectivity_hh_clut                 (time, z, y, x) float64 10MB 23.53 ....\n    spectrum_width                       (time, z, y, x) float64 10MB 2.603 ....\n    reflectivity                         (time, z, y, x) float64 10MB 23.59 ....\n    velocity                             (time, z, y, x) float64 10MB 3.374 ....\n    reflectivity_vv                      (time, z, y, x) float64 10MB 23.52 ....\n    differential_reflectivity            (time, z, y, x) float64 10MB 0.02071...\n    ...                                   ...\n    point_latitude                       (z, y, x) float64 10MB 45.13 ... 46.93\n    AZ                                   (time, z, y, x) float64 10MB 225.0 ....\n    EL                                   (time, z, y, x) float64 10MB -1.136 ...\n    u                                    (time, z, y, x) float64 10MB nan ......\n    v                                    (time, z, y, x) float64 10MB nan ......\n    w                                    (time, z, y, x) float64 10MB nan ......\nAttributes: (12/19)\n    nradar:           1\n    radar_name:       ['L']\n    Conventions:      CF/Radial instrument_parameters\n    version:          1.3\n    title:            \n    institution:      \n    ...               ...\n    platform_type:    fixed\n    instrument_type:  radar\n    primary_axis:     axis_z\n    first_grid_name:  reflectivity_hh_clut\n    units:            m\n    long_name:        Point altitude","content_type":"text/plain"}}}],"visibility":"show","key":"qGqy7SC5mb"}],"visibility":"show","key":"FscwCN5gWJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If you are not able to get the above example to run on your laptop, pre-generated grid files are available ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WkhyFNG9tv"},{"type":"link","url":"https://drive.google.com/drive/folders/1LmfJeiYHcC_NGWuNAW7gAPMUNp7Z4UZq?usp=sharing","children":[{"type":"text","value":"here","key":"xYHAPe9XVm"}],"urlSource":"https://drive.google.com/drive/folders/1LmfJeiYHcC_NGWuNAW7gAPMUNp7Z4UZq?usp=sharing","key":"tVqHAJVGhh"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ynOktMrXe4"}],"key":"F5fATPsHsn"}],"key":"dT6wsyUW6Q"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ds.reflectivity.sel(z=2000, method='nearest').plot(cmap='pyart_ChaseSpectral', vmin=-10, vmax=60)\nds.isel(time=0).sel(z=2000, method='nearest').w.plot.contour(x='x', y='y', levels=np.arange(1, 5, 1))\nplt.xlim([-50000, 25000])\nplt.ylim([-100000, -25000])","visibility":"show","key":"QskT0mLrxH"},{"type":"output","id":"w4chDZReQ4MiqemlvGEGr","data":[{"output_type":"execute_result","execution_count":30,"metadata":{},"data":{"text/plain":{"content":"(-100000.0, -25000.0)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"bfb8157dc9d66ef201540823156fcdcb","path":"/erad2024/build/bfb8157dc9d66ef201540823156fcdcb.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"gaucBOdgXo"}],"visibility":"show","key":"TuctCqhrNB"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Saving the grids","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bTIsohCLhF"}],"identifier":"saving-the-grids","label":"Saving the grids","html_id":"saving-the-grids","implicit":true,"key":"jq6icZr0rm"}],"visibility":"show","key":"b3GK1ZBSzw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can save the grids using either ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IeZusP0kA3"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TSKXAodXcL"}],"key":"bd6R9bsq4r"},{"type":"text","value":"’s or Py-ART’s functionality. To save the output grids,  use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KEbl98S2ZB"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"pyart.io.write_grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Xbti1pgNXu"}],"key":"K1PReyh7J8"},{"type":"text","value":" (PyART) functions. For example:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gJHKqFVNyV"}],"key":"amqmNk2Wfe"}],"key":"E9TN9cfJKO"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Keep these lines if we can't update PyDDA in time for ERAD\n#grids[0].attrs[\"radar_name\"] = \"C-band\"\n#del grids[0][\"time\"].attrs[\"units\"]\n#grids[1].attrs[\"radar_name\"] = \"X-band\"\n#del grids[1][\"time\"].attrs[\"units\"]\n#\ngrids[0].to_netcdf('output_grid_Cband.nc')\ngrids[1].to_netcdf('output_grid_Xband.nc')","visibility":"show","key":"o73myOXNJU"},{"type":"output","id":"OHzmfq560D88U8DJdvTbm","data":[],"visibility":"show","key":"RbiiUcnkI3"}],"visibility":"show","key":"e3Foa63WZx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In order to load the grids again, we can just use PyART’s ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aHSaPMyylT"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"pyart.io.read_grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tMH7Ze5qD7"}],"key":"MUf0tNaqCz"},{"type":"text","value":" procedure.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XqXBHYM0rJ"}],"key":"yKcrSGcCnM"}],"key":"chEqNDb59G"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# For live demos, load these since retrieval takes about 7 minutes\ngrids = [pydda.io.read_grid('output_grid_Cband.nc'),\n         pydda.io.read_grid('output_grid_Xband.nc')]","visibility":"show","key":"VjrQuHm02r"},{"type":"output","id":"IjRMy1do5eOayBMD5f2TO","data":[],"visibility":"show","key":"LcqO2dZAR3"}],"visibility":"show","key":"LfdoOeFHI0"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"PyDDA visualization routines","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iu5DJniywh"}],"identifier":"pydda-visualization-routines","label":"PyDDA visualization routines","html_id":"pydda-visualization-routines","implicit":true,"key":"vxuCf4wljX"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"PyDDA’s visualization routines support the native PyART grids that are output by PyDDA. These routines have an advantage over xarray’s plotting routines for adjusting your barb and quiver size by specifying their using parameters that are in scales of kilometers. This makes it easier to plot barb and quiver plots compared to using xarray’s functionality.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Qb0GuONbPb"}],"key":"X2vWSlGCpC"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example, the documentation for ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qIspQIIsZ3"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"pydda.vis.plot_horiz_xsection_quiver","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"zpcDt4YK4q"}],"key":"tQfvT3FQtW"},{"type":"text","value":" is given below.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"DrMaWYdvM1"}],"key":"k2MNmDOfzZ"}],"visibility":"show","key":"HPSABcc1ts"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"pydda.vis.plot_horiz_xsection_quiver?","visibility":"show","key":"w18QsVN9gl"},{"type":"output","id":"CuVdl7vCRtBkXhJKK5inF","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"\u001b[0;31mSignature:\u001b[0m\n\u001b[0mpydda\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot_horiz_xsection_quiver\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mGrids\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0max\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mbackground_field\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'reflectivity'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mcmap\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'ChaseSpectral'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mvmin\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mvmax\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m70\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mu_vel_contours\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mv_vel_contours\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mw_vel_contours\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mwind_vel_contours\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mu_field\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'u'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mv_field\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'v'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mw_field\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'w'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mshow_lobes\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mtitle_flag\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0maxes_labels_flag\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mcolorbar_flag\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mcolorbar_contour_flag\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mbg_grid_no\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mscale\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mquiver_spacing_x_km\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10.0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mquiver_spacing_y_km\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10.0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mcontour_alpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.7\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mquiverkey_len\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5.0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mquiverkey_loc\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'best'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m    \u001b[0mquiver_width\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.01\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\n\u001b[0;34m\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;31mDocstring:\u001b[0m\nThis procedure plots a horizontal cross section of winds from wind fields\ngenerated by PyDDA using quivers. The length of the quivers varies\nwith horizontal wind speed.\n\nParameters\n----------\nGrids: list or DataTree\n    List of Py-DDA Grids to visualize\nax: matplotlib axis handle\n    The axis handle to place the plot on. Set to None to plot on the\n    current axis.\nbackground_field: str\n    The name of the background field to plot the quivers on.\nlevel: int\n    The number of the vertical level to plot the cross section through.\ncmap: str or matplotlib colormap\n    The name of the matplotlib colormap to use for the background field.\nvmin: float\n    The minimum bound to use for plotting the background field. None will\n    automatically detect the background field minimum.\nvmax: float\n    The maximum bound to use for plotting the background field. None will\n    automatically detect the background field maximum.\nu_vel_contours: 1-D array\n    The contours to use for plotting contours of u. Set to None to not\n    display such contours.\nv_vel_contours: 1-D array\n    The contours to use for plotting contours of v. Set to None to not\n    display such contours.\nw_vel_contours: 1-D array\n    The contours to use for plotting contours of w. Set to None to not\n    display such contours.\nwind_vel_contours: 1-D array\n    The contours to use for plotting contours of horizontal wind speed.\n    Set to None to not display such contours\nu_field: str\n    Name of zonal wind (u) field in Grids.\nv_field: str\n    Name of meridional wind (v) field in Grids.\nw_field: str\n    Name of vertical wind (w) field in Grids.\nshow_lobes: bool\n    If True, the dual doppler lobes from each pair of radars will be shown.\ntitle_flag: bool\n    If True, PyDDA will generate a title for the plot.\naxes_labels_flag: bool\n    If True, PyDDA will generate axes labels for the plot\ncolorbar_flag: bool\n    If True, PyDDA will generate a colorbar for the plot background field.\ncolorbar_contour_flag: bool\n    If True, PyDDA will generate a colorbar for the contours.\nbg_grid_no: int\n    Number of grid in Grids to take background field from.\n    Set to -1 to use maximum value from all grids.\nquiver_spacing_x_km: float\n    Spacing in km between quivers in x axis.\nquiver_spacing_y_km: float\n    Spacing in km between quivers in y axis.\ncontour_alpha: float\n    Alpha (transparency) of velocity contours. 0 = transparent, 1 = opaque\nquiverkey_len: float\n    Length to use for the quiver key in m/s.\nquiverkey_loc: str\n    Location of quiverkey. One of:\n\n    'best'\n\n    'top_left'\n\n    'top'\n\n    'top_right'\n\n    'bottom_left'\n\n    'bottom'\n\n    'bottom_right'\n\n    'left'\n\n    'right'\n\n    'top_left_outside'\n\n    'top_right_outside'\n\n    'bottom_left_outside'\n\n    'bottom_right_outside'\n\n    'best' will put the quiver key in the corner with the fewest amount of\n     valid data points while keeping the quiver key inside the plot.\n\n     The rest of the options will put the quiver key in that\n     particular part of the plot.\nquiver_width: float\n    The width of the lines for the quiver. Use this to specify\n    the thickness of the quiver lines. Units are in fraction of plot\n    width.\n\nReturns\n-------\nax: Matplotlib axis handle\n    The matplotlib axis handle associated with the plot.\n\u001b[0;31mFile:\u001b[0m      ~/PyDDA/pydda/vis/quiver_plot.py\n\u001b[0;31mType:\u001b[0m      function","content_type":"text/plain"}}}],"visibility":"show","key":"jlOpIQ25nk"}],"visibility":"show","key":"xTmrSW78gj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"PyDDA has the following visualization routines for your sets of grids:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"arsVwO2XdV"}],"key":"ckrhjZxeZJ"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Procedure","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dbQSETvhyo"}],"key":"kGolmxVGHE"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Description","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jTpcFSxFN5"}],"key":"qvqm8Is2UJ"}],"key":"oEWN5l6wLs"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"plot_horiz_xsection_barbs(Grids[, ax, ...])","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"orynHzgD2R"}],"key":"tdfoXvKVo6"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Horizontal cross section of winds from wind fields generated by PyDDA using barbs.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yoMUhVf4cN"}],"key":"mpRW1I1dLX"}],"key":"dlWxSIUcAe"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"plot_xz_xsection_barbs(Grids[, ax, ...])","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"meNbhqg3zB"}],"key":"avRTBnIldE"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Cross section of winds from wind fields generated by PyDDA in the X-Z plane using barbs.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"nWpW8CmgGX"}],"key":"iWgXXmHHDY"}],"key":"gIUZ9TONgD"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"plot_yz_xsection_barbs(Grids[, ax, ...])","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"E7yw8dgpF6"}],"key":"SKtyXaETar"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Cross section of winds from wind fields generated by PyDDA in the Y-Z plane using barbs.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Ao0ThlFcrT"}],"key":"yoJ2PEejnR"}],"key":"nJ1kCy7ElR"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"plot_horiz_xsection_barbs_map(Grids[, ax, ...])","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"agRfEEmXyS"}],"key":"od7eg7Ia7k"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Horizontal cross section of winds from wind fields generated by PyDDA onto a geographical map using barbs.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"k4gzjKxhJD"}],"key":"WqLxwmDHHe"}],"key":"JM59dhrWjE"},{"type":"tableRow","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"plot_horiz_xsection_streamlines(Grids[, ax, ...])","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JbqfsaPuZt"}],"key":"FbvV9MXSdW"},{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Horizontal cross section of winds from wind fields generated by PyDDA using streamlines.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"LDRxwx4und"}],"key":"bp3FhmBHX5"}],"key":"jJK15zkge9"},{"type":"tableRow","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"plot_xz_xsection_streamlines(Grids[, ax, ...])","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"ZWA88Kbeyi"}],"key":"rTy3FJRHc3"},{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Cross section of winds from wind fields generated by PyDDA in the X-Z plane using streamlines.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"P0DZqB3bRY"}],"key":"lIaLCY1guL"}],"key":"UcXQFy3zUY"},{"type":"tableRow","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"plot_yz_xsection_streamlines(Grids[, ax, ...])","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"nw0T6C5PVN"}],"key":"N1MxY8IPWu"},{"type":"tableCell","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Cross section of winds from wind fields generated by PyDDA in the Y-Z plane using streamlines.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"oCLyeBjQMU"}],"key":"rbqf0No6eF"}],"key":"LTZW4DaA93"},{"type":"tableRow","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"plot_horiz_xsection_streamlines_map(Grids[, ...])","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"PtSfeg55ny"}],"key":"PrZWGAAFDG"},{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Horizontal cross section of winds from wind fields generated by PyDDA using streamlines.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"NSEWKR9ShY"}],"key":"uf2UkTibc0"}],"key":"dVPefvyAec"},{"type":"tableRow","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"plot_horiz_xsection_quiver(Grids[, ax, ...])","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"iEICsQG2DJ"}],"key":"GiUNUxlsGK"},{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Horizontal cross section of winds from wind fields generated by PyDDA using quivers.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Rq3S5lnyEt"}],"key":"glednlU0y3"}],"key":"CFsPcDpK1O"},{"type":"tableRow","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"plot_xz_xsection_quiver(Grids[, ax, ...])","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"e6Ko3HR4Fy"}],"key":"a18PupeHpF"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Cross section of winds from wind fields generated by PyDDA in the X-Z plane using quivers.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"zOddpdegeF"}],"key":"DITW6uChoD"}],"key":"elKroezuou"},{"type":"tableRow","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"plot_yz_xsection_quiver(Grids[, ax, ...])","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"eNg839I3O0"}],"key":"frrhWClXMs"},{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Cross section of winds from wind fields generated by PyDDA in the Y-Z plane using quivers.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"sr80oR3WPQ"}],"key":"fOYXIWPbO6"}],"key":"nzPYsxqCPD"},{"type":"tableRow","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"plot_horiz_xsection_quiver_map(Grids[, ax, ...])","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Z4Z7VAaoxd"}],"key":"i9lMDAFaof"},{"type":"tableCell","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Horizontal cross section of winds from wind fields generated by PyDDA using quivers onto a geographical map.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"SOKCObQKK3"}],"key":"EpyKedyUo6"}],"key":"cqqDJo8fDe"}],"key":"C1M99q4HJp"}],"key":"XtbGDxOsnK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s show a quiver plot of this storm!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OgGB1V32cz"}],"key":"fjJPJVCHMe"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We have specified the quivers to be 4 km apart and moved the key to the bottom right with the specific length indicating 20 m/s winds. Let’s look at the 3 km level.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ziaDKma3s5"}],"key":"iJmztU5HOD"}],"key":"CI3eI0mVqf"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(1, 1, figsize=(6, 6))\npydda.vis.plot_horiz_xsection_quiver(\n    grids, quiver_spacing_x_km=2.5, quiver_spacing_y_km=2.5, quiver_width=0.005, vmax=60,\n    quiverkey_len=10.0, w_vel_contours=np.arange(1, 5, 1), level=4, cmap='pyart_ChaseSpectral', ax=ax,\n    quiverkey_loc='bottom_right')\nplt.xlim([-75, 25])\nplt.ylim([-100, -25])","visibility":"show","key":"iqYSjAjvs4"},{"type":"output","id":"O8VKYMCIbSxkjp6wq0-jj","data":[{"output_type":"execute_result","execution_count":29,"metadata":{},"data":{"text/plain":{"content":"(-100.0, -25.0)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"69b48967dc2497873b76a7636ab0fe89","path":"/erad2024/build/69b48967dc2497873b76a7636ab0fe89.png"},"text/plain":{"content":"<Figure size 600x600 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"QKVLmi1Hb1"}],"visibility":"show","key":"OPXDv4iVUD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can zoom in and modify the plot using standard matplotlib functions on the axis handle.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RMBqBr2r5b"}],"key":"ikTwLFD5um"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"It is much easier to see updrafts being placed just to the outside of the strongest precipitation, with potential new growth in the north of the domain with updraft velocities > 7 m/s. The precipitation is downwind of the updraft as we would expect.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KEoe7zkFTI"}],"key":"gSp03EfHCd"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Updrafts are right tilted due to the horizontal wind shear. The horizontal wind shear also causes the most intense precipitation to be downshear of the updraft. This therefore shows us that we have a good quality wind retrieval below about 5 km in altitude.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Dub5lusBEF"}],"key":"dFKMyMkrD7"}],"key":"ZFZ9M4wOsd"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(1, 1, figsize=(6, 4))\npydda.vis.plot_xz_xsection_quiver(\n    grids, quiver_spacing_x_km=2.0, quiver_spacing_z_km=1.0, quiver_width=0.005,\n    quiverkey_len=10.0, w_vel_contours=np.arange(1, 5, 1), level=37, cmap='pyart_ChaseSpectral', ax=ax,\n    quiverkey_loc='top_right')\nax.set_xlim([-75, -25])\nax.set_ylim([0, 13])","visibility":"show","key":"hSRekLoAsY"},{"type":"output","id":"WNvGmhdBLnKxZklYA3zJY","data":[{"output_type":"execute_result","execution_count":30,"metadata":{},"data":{"text/plain":{"content":"(0.0, 13.0)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"42289b392ec0e733c5ff8bca871fcdb3","path":"/erad2024/build/42289b392ec0e733c5ff8bca871fcdb3.png"},"text/plain":{"content":"<Figure size 600x400 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"qeR64PkEmR"}],"visibility":"show","key":"Ubio2bHKBG"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s view a horizontal cross section with barbs!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aqgNarDnFS"}],"key":"LZqOyoXvH4"}],"key":"bzdYTsApnj"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(1, 1, figsize=(6, 6))\npydda.vis.plot_horiz_xsection_barbs(\n    grids, barb_spacing_x_km=6.0, barb_spacing_y_km=6.0,\n    w_vel_contours=np.arange(1, 10, 1), level=6, cmap='pyart_ChaseSpectral', ax=ax)\n#ax.set_xlim([-60, 0])\n#ax.set_ylim([0, 70])","visibility":"show","key":"PbmzloVu4D"},{"type":"output","id":"DO_czFc45AzhPXso7OeOD","data":[{"output_type":"execute_result","execution_count":31,"metadata":{},"data":{"text/plain":{"content":"<Axes: title={'center': 'PyDDA retreived winds @4.626 km'}, xlabel='X [km]', ylabel='Y [km]'>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"61ffc8f4227174f53d6b76c2a671ea21","path":"/erad2024/build/61ffc8f4227174f53d6b76c2a671ea21.png"},"text/plain":{"content":"<Figure size 600x600 with 2 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"PyoSDBg5HV"}],"visibility":"show","key":"uuntTlQent"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cband_ds[\"time\"][0].dt.year.values","key":"hL4rhi3ubP"},{"type":"output","id":"aiTqQFJ03C70c6CZQKdli","data":[{"output_type":"execute_result","execution_count":32,"metadata":{},"data":{"text/plain":{"content":"array(2024)","content_type":"text/plain"}}}],"key":"kkcYEMxque"}],"key":"O52UUksQX2"}],"key":"UA83OvRFaC"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Environment overview","url":"/environment","group":"Notebook Environment"}}},"domain":"http://localhost:3000"}