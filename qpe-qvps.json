{"kind":"Notebook","sha256":"59a27554c8282114ec6b15b520e0bd2bfff8cf3b332be491ec5a29916d0a0de6","slug":"qpe-qvps","location":"/notebooks/Analysis-Ready/QPE-QVPs.ipynb","dependencies":[],"frontmatter":{"title":"QPE & QVPs","content_includes_title":true,"kernelspec":{"name":"python3","language":"python","display_name":"Python 3 (ipykernel)"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"thumbnail":"/erad2024/build/QVP-9cc0c0bd1b68d9c36943d4e3df03db29.svg","exports":[{"format":"ipynb","filename":"QPE-QVPs.ipynb","url":"/erad2024/build/QPE-QVPs-22da5a8206a234149e48c9fe6e6a93dd.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/erad2024/build/QVP-9cc0c0bd1b68d9c36943d4e3df03db29.svg","alt":"QVP plot","key":"W0d4vuLhoO","urlSource":"../images/QVP.svg"}],"key":"UtQkRSM1gJ"}],"visibility":"show","key":"bSNEg4rjAM"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"QPE & QVPs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lljw7QVjx6"}],"identifier":"qpe-qvps","label":"QPE & QVPs","html_id":"qpe-qvps","implicit":true,"key":"F02OOcZFwI"}],"visibility":"show","key":"YcpiEjCssu"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SfviGBnsCl"}],"visibility":"show","key":"xYoDpYetbE"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IYrtfPigNz"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"A7xTUeqYLl"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we demonstrate how utilizing radar data in the Analysis-Ready Cloud-Optimized (ARCO) format enables efficient computation of Quantitative Precipitation Estimates (QPE) and Quasi-Vertical Profiles (QVP). The ARCO format ensures that radar data is pre-processed, clean, and well-organized, significantly reducing the time spent on data preparation and cleaning. By leveraging ARCO radar data, we can focus more on scientific analysis.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mavWJUwE5i"}],"key":"GmtLrUeP4c"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"QPE Demo","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dhV5YS1rkS"}],"key":"TdWjKnpRp6"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"QVP Demo","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GIzK0j5Yhc"}],"key":"f6mIjUNpNM"}],"key":"zrcIc2bSTi"}],"visibility":"show","key":"GcjHOxFJte"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yDA4KoQf8N"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"mud48ldfge"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"n4utVuO275"}],"key":"YrnD8sKS84"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BovLWcoVWr"}],"key":"VAd2FnkhqB"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"t3gz8F4Rhd"}],"key":"eNFWLO40OZ"}],"key":"W4Kdrf55KY"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Intro to Xarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"P4GwLIpRHR"}],"urlSource":"https://foundations.projectpythia.org/core/xarray.html","key":"PbEkN6ZkTI"}],"key":"uDAMZ27tXc"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bobJjXSwxA"}],"key":"hEAEDhDbE5"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Basic features","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"I1rP4PJCVy"}],"key":"Dtkyxjullo"}],"key":"apEqahNRva"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://projectpythia.org/radar-cookbook/README.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Radar Cookbook","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"aITGFXhp6b"}],"urlSource":"https://projectpythia.org/radar-cookbook/README.html","key":"W2YlNk3cFK"}],"key":"Wex2B8zELu"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"CDXEIKF6H7"}],"key":"GwEGh4RLjz"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Radar basics","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"PPhaCLjZQM"}],"key":"QhSiOBx9Ui"}],"key":"J3ndBW6yXX"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://zarr.readthedocs.io/en/stable/tutorial.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Zarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"m8pEIz91bE"}],"urlSource":"https://zarr.readthedocs.io/en/stable/tutorial.html","key":"SMBNYCVvWs"}],"key":"mNkFhYd6K4"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xH3JMriazG"}],"key":"ijxRgezLcv"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Zarr basics","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"nfe4lNIoVm"}],"key":"jOPvtXiEpp"}],"key":"eDqpSAX0wV"}],"key":"afSrjtw8S8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"kZrNRUH7I6"}],"key":"nPW1Q4pW0w"},{"type":"text","value":": 45 minutes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fCkQnPVuu5"}],"key":"Llyu40PRsG"}],"key":"RBDfUsbGWU"}],"visibility":"show","key":"EXEWdhvxPK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S3VDqQWT8v"}],"key":"aXOaQyZrcM"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ae01mNIzFR"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"pW0DihBcbw"}],"visibility":"show","key":"wPeDrDEImg"},{"type":"block","kind":"notebook-code","data":{"editable":true,"execution":{"iopub.execute_input":"2024-08-30T17:25:00.785883Z","iopub.status.busy":"2024-08-30T17:25:00.785552Z","iopub.status.idle":"2024-08-30T17:25:03.395260Z","shell.execute_reply":"2024-08-30T17:25:03.394620Z"},"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import s3fs\nimport xarray as xr\nimport fsspec\nimport numpy as np\nimport hvplot.xarray\nimport matplotlib.pyplot as plt","visibility":"show","key":"rWwegZ5Rr5"},{"type":"output","id":"4NE5ixTVAmQenrz_loeJd","data":[{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n  var py_version = '3.4.2'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  var reloading = false;\n  var Bokeh = root.Bokeh;\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      run_callbacks();\n      return null;\n    }\n    if (!reloading) {\n      console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    var skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    var existing_stylesheets = []\n    var links = document.getElementsByTagName('link')\n    for (var i = 0; i < links.length; i++) {\n      var link = links[i]\n      if (link.href != null) {\n\texisting_stylesheets.push(link.href)\n      }\n    }\n    for (var i = 0; i < css_urls.length; i++) {\n      var url = css_urls[i];\n      if (existing_stylesheets.indexOf(url) !== -1) {\n\ton_load()\n\tcontinue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    var scripts = document.getElementsByTagName('script')\n    for (var i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n\texisting_scripts.push(script.src)\n      }\n    }\n    for (var i = 0; i < js_urls.length; i++) {\n      var url = js_urls[i];\n      if (skip.indexOf(url) !== -1 || existing_scripts.indexOf(url) !== -1) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (var i = 0; i < js_modules.length; i++) {\n      var url = js_modules[i];\n      if (skip.indexOf(url) !== -1 || existing_scripts.indexOf(url) !== -1) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      var url = js_exports[name];\n      if (skip.indexOf(url) >= 0 || root[name] != null) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.2.min.js\", \"https://cdn.holoviz.org/panel/1.4.5/dist/panel.min.js\"];\n  var js_modules = [];\n  var js_exports = {};\n  var css_urls = [];\n  var inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (var i = 0; i < inline_js.length; i++) {\n\ttry {\n          inline_js[i].call(root, root.Bokeh);\n\t} catch(e) {\n\t  if (!reloading) {\n\t    throw e;\n\t  }\n\t}\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n\tvar NewBokeh = root.Bokeh;\n\tif (Bokeh.versions === undefined) {\n\t  Bokeh.versions = new Map();\n\t}\n\tif (NewBokeh.version !== Bokeh.version) {\n\t  Bokeh.versions.set(NewBokeh.version, NewBokeh)\n\t}\n\troot.Bokeh = Bokeh;\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      var bokeh_loaded = Bokeh != null && (Bokeh.version === py_version || (Bokeh.versions !== undefined && Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n\troot.Bokeh = undefined;\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n\tconsole.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n\trun_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n  var py_version = '3.4.2'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  var reloading = false;\n  var Bokeh = root.Bokeh;\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      run_callbacks();\n      return null;\n    }\n    if (!reloading) {\n      console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    var skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    var existing_stylesheets = []\n    var links = document.getElementsByTagName('link')\n    for (var i = 0; i < links.length; i++) {\n      var link = links[i]\n      if (link.href != null) {\n\texisting_stylesheets.push(link.href)\n      }\n    }\n    for (var i = 0; i < css_urls.length; i++) {\n      var url = css_urls[i];\n      if (existing_stylesheets.indexOf(url) !== -1) {\n\ton_load()\n\tcontinue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    var scripts = document.getElementsByTagName('script')\n    for (var i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n\texisting_scripts.push(script.src)\n      }\n    }\n    for (var i = 0; i < js_urls.length; i++) {\n      var url = js_urls[i];\n      if (skip.indexOf(url) !== -1 || existing_scripts.indexOf(url) !== -1) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (var i = 0; i < js_modules.length; i++) {\n      var url = js_modules[i];\n      if (skip.indexOf(url) !== -1 || existing_scripts.indexOf(url) !== -1) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      var url = js_exports[name];\n      if (skip.indexOf(url) >= 0 || root[name] != null) {\n\tif (!window.requirejs) {\n\t  on_load();\n\t}\n\tcontinue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.4.2.min.js\", \"https://cdn.holoviz.org/panel/1.4.5/dist/panel.min.js\"];\n  var js_modules = [];\n  var js_exports = {};\n  var css_urls = [];\n  var inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (var i = 0; i < inline_js.length; i++) {\n\ttry {\n          inline_js[i].call(root, root.Bokeh);\n\t} catch(e) {\n\t  if (!reloading) {\n\t    throw e;\n\t  }\n\t}\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n\tvar NewBokeh = root.Bokeh;\n\tif (Bokeh.versions === undefined) {\n\t  Bokeh.versions = new Map();\n\t}\n\tif (NewBokeh.version !== Bokeh.version) {\n\t  Bokeh.versions.set(NewBokeh.version, NewBokeh)\n\t}\n\troot.Bokeh = Bokeh;\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      var bokeh_loaded = Bokeh != null && (Bokeh.version === py_version || (Bokeh.versions !== undefined && Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n\troot.Bokeh = undefined;\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n\tconsole.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n\trun_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        }) \n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        }) \n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n    > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n  ),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"p1002"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content_type":"application/vnd.holoviews_exec.v0+json","hash":"d41d8cd98f00b204e9800998ecf8427e","path":"/erad2024/build/d41d8cd98f00b204e9800998ecf8427e.json"},"text/html":{"content":"<div id='p1002'>\n  <div id=\"a56f5489-3a29-47bc-b603-703663d6183e\" data-root-id=\"p1002\" style=\"display: contents;\"></div>\n</div>\n<script type=\"application/javascript\">(function(root) {\n  var docs_json = {\"c8677a67-e345-42bf-889c-276763677294\":{\"version\":\"3.4.2\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"panel.models.browser.BrowserInfo\",\"id\":\"p1002\"},{\"type\":\"object\",\"name\":\"panel.models.comm_manager.CommManager\",\"id\":\"p1003\",\"attributes\":{\"plot_id\":\"p1002\",\"comm_id\":\"7e7871e8eeb24a62854aad74b0c7f801\",\"client_comm_id\":\"e58d49a5400841f0b4c2b6094a274018\"}}],\"defs\":[{\"type\":\"model\",\"name\":\"ReactiveHTML1\"},{\"type\":\"model\",\"name\":\"FlexBox1\",\"properties\":[{\"name\":\"align_content\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"align_items\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"flex_direction\",\"kind\":\"Any\",\"default\":\"row\"},{\"name\":\"flex_wrap\",\"kind\":\"Any\",\"default\":\"wrap\"},{\"name\":\"gap\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"justify_content\",\"kind\":\"Any\",\"default\":\"flex-start\"}]},{\"type\":\"model\",\"name\":\"FloatPanel1\",\"properties\":[{\"name\":\"config\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"contained\",\"kind\":\"Any\",\"default\":true},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"right-top\"},{\"name\":\"offsetx\",\"kind\":\"Any\",\"default\":null},{\"name\":\"offsety\",\"kind\":\"Any\",\"default\":null},{\"name\":\"theme\",\"kind\":\"Any\",\"default\":\"primary\"},{\"name\":\"status\",\"kind\":\"Any\",\"default\":\"normalized\"}]},{\"type\":\"model\",\"name\":\"GridStack1\",\"properties\":[{\"name\":\"mode\",\"kind\":\"Any\",\"default\":\"warn\"},{\"name\":\"ncols\",\"kind\":\"Any\",\"default\":null},{\"name\":\"nrows\",\"kind\":\"Any\",\"default\":null},{\"name\":\"allow_resize\",\"kind\":\"Any\",\"default\":true},{\"name\":\"allow_drag\",\"kind\":\"Any\",\"default\":true},{\"name\":\"state\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"drag1\",\"properties\":[{\"name\":\"slider_width\",\"kind\":\"Any\",\"default\":5},{\"name\":\"slider_color\",\"kind\":\"Any\",\"default\":\"black\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":50}]},{\"type\":\"model\",\"name\":\"click1\",\"properties\":[{\"name\":\"terminal_output\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"debug_name\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"clears\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"FastWrapper1\",\"properties\":[{\"name\":\"object\",\"kind\":\"Any\",\"default\":null},{\"name\":\"style\",\"kind\":\"Any\",\"default\":null}]},{\"type\":\"model\",\"name\":\"NotificationAreaBase1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"NotificationArea1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"notifications\",\"kind\":\"Any\",\"default\":[]},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0},{\"name\":\"types\",\"kind\":\"Any\",\"default\":[{\"type\":\"map\",\"entries\":[[\"type\",\"warning\"],[\"background\",\"#ffc107\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-exclamation-triangle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]},{\"type\":\"map\",\"entries\":[[\"type\",\"info\"],[\"background\",\"#007bff\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-info-circle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]}]}]},{\"type\":\"model\",\"name\":\"Notification\",\"properties\":[{\"name\":\"background\",\"kind\":\"Any\",\"default\":null},{\"name\":\"duration\",\"kind\":\"Any\",\"default\":3000},{\"name\":\"icon\",\"kind\":\"Any\",\"default\":null},{\"name\":\"message\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"notification_type\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_destroyed\",\"kind\":\"Any\",\"default\":false}]},{\"type\":\"model\",\"name\":\"TemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"BootstrapTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"TemplateEditor1\",\"properties\":[{\"name\":\"layout\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"MaterialTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"copy_to_clipboard1\",\"properties\":[{\"name\":\"fill\",\"kind\":\"Any\",\"default\":\"none\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":null}]}]}};\n  var render_items = [{\"docid\":\"c8677a67-e345-42bf-889c-276763677294\",\"roots\":{\"p1002\":\"a56f5489-3a29-47bc-b603-703663d6183e\"},\"root_ids\":[\"p1002\"]}];\n  var docs = Object.values(docs_json)\n  if (!docs) {\n    return\n  }\n  const py_version = docs[0].version.replace('rc', '-rc.').replace('.dev', '-dev.')\n  async function embed_document(root) {\n    var Bokeh = get_bokeh(root)\n    await Bokeh.embed.embed_items_notebook(docs_json, render_items);\n    for (const render_item of render_items) {\n      for (const root_id of render_item.root_ids) {\n\tconst id_el = document.getElementById(root_id)\n\tif (id_el.children.length && id_el.children[0].hasAttribute('data-root-id')) {\n\t  const root_el = id_el.children[0]\n\t  root_el.id = root_el.id + '-rendered'\n\t  for (const child of root_el.children) {\n            // Ensure JupyterLab does not capture keyboard shortcuts\n            // see: https://jupyterlab.readthedocs.io/en/4.1.x/extension/notebook.html#keyboard-interaction-model\n\t    child.setAttribute('data-lm-suppress-shortcuts', 'true')\n\t  }\n\t}\n      }\n    }\n  }\n  function get_bokeh(root) {\n    if (root.Bokeh === undefined) {\n      return null\n    } else if (root.Bokeh.version !== py_version) {\n      if (root.Bokeh.versions === undefined || !root.Bokeh.versions.has(py_version)) {\n\treturn null\n      }\n      return root.Bokeh.versions.get(py_version);\n    } else if (root.Bokeh.version === py_version) {\n      return root.Bokeh\n    }\n    return null\n  }\n  function is_loaded(root) {\n    var Bokeh = get_bokeh(root)\n    return (Bokeh != null && Bokeh.Panel !== undefined)\n  }\n  if (is_loaded(root)) {\n    embed_document(root);\n  } else {\n    var attempts = 0;\n    var timer = setInterval(function(root) {\n      if (is_loaded(root)) {\n        clearInterval(timer);\n        embed_document(root);\n      } else if (document.readyState == \"complete\") {\n        attempts++;\n        if (attempts > 200) {\n          clearInterval(timer);\n\t  var Bokeh = get_bokeh(root)\n\t  if (Bokeh == null || Bokeh.Panel == null) {\n            console.warn(\"Panel: ERROR: Unable to run Panel code because Bokeh or Panel library is missing\");\n\t  } else {\n\t    console.warn(\"Panel: WARNING: Attempting to render but not all required libraries could be resolved.\")\n\t    embed_document(root)\n\t  }\n        }\n      }\n    }, 25, root)\n  }\n})(window);</script>","content_type":"text/html"}}}],"visibility":"show","key":"xwKVbxom6L"}],"visibility":"show","key":"eO02nAOf3U"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"ARCO radar dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BNj5yIu2wQ"}],"identifier":"arco-radar-dataset","label":"ARCO radar dataset","html_id":"arco-radar-dataset","implicit":true,"key":"ZvzFvB6U0g"}],"visibility":"show","key":"jDYZxA99aO"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We build a dataset (object storage) containing both X and C-band radar data. This dataset is located at the Pythia S3 Bucket.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W1ImgQ9d0g"}],"key":"ZTBBymp34o"}],"visibility":"show","key":"yYaHy1Z4FA"},{"type":"block","kind":"notebook-code","data":{"editable":true,"execution":{"iopub.execute_input":"2024-08-30T17:25:03.398048Z","iopub.status.busy":"2024-08-30T17:25:03.397808Z","iopub.status.idle":"2024-08-30T17:25:03.401910Z","shell.execute_reply":"2024-08-30T17:25:03.401446Z"},"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"## S3 bucket connection\nURL = 'https://js2.jetstream-cloud.org:8001/'\npath = f'pythia/radar/erad2024'\nfs = s3fs.S3FileSystem(anon=True, client_kwargs=dict(endpoint_url=URL))\nfile =  s3fs.S3Map(f\"{path}/zarr_radar/erad_2024.zarr\", s3=fs)","visibility":"show","key":"jUB7bPaw1d"},{"type":"output","id":"Tg3pn6fcbacHDpLZ2Ps2y","data":[],"visibility":"show","key":"NQdzjGMQo8"}],"visibility":"show","key":"iRocruWuus"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s read our ARCO dataset using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P8zaicQNRj"},{"type":"inlineCode","value":"xr.backends.api.open_datatree","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gHxgT0HE1z"}],"key":"s2MfIwRJFq"}],"visibility":"show","key":"oIhGQkvhO0"},{"type":"block","kind":"notebook-code","data":{"editable":true,"execution":{"iopub.execute_input":"2024-08-30T17:25:03.404107Z","iopub.status.busy":"2024-08-30T17:25:03.403648Z","iopub.status.idle":"2024-08-30T17:25:14.029839Z","shell.execute_reply":"2024-08-30T17:25:14.029248Z"},"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"%%time\ndtree = xr.backends.api.open_datatree(\n    file, \n    engine='zarr', \n    consolidated=True, \n    chunks={}\n)","visibility":"show","key":"tnDdYUXLIP"},{"type":"output","id":"REe-lvZQ_NbarOLJrLD9w","data":[{"name":"stdout","output_type":"stream","text":"CPU times: user 3.15 s, sys: 256 ms, total: 3.41 s\nWall time: 10.6 s\n"}],"visibility":"show","key":"NePKH1EIhp"}],"visibility":"show","key":"khAijWFn1z"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:14.032404Z","iopub.status.busy":"2024-08-30T17:25:14.031884Z","iopub.status.idle":"2024-08-30T17:25:15.607398Z","shell.execute_reply":"2024-08-30T17:25:15.606156Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dtree","key":"KUt84MFBI3"},{"type":"output","id":"iDmsCMsugvpebLkqBEuT5","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"9a695bc8d30cfc4e6aa98087e4bc7273","path":"/erad2024/build/9a695bc8d30cfc4e6aa98087e4bc7273.html"},"text/plain":{"content_type":"text/plain","hash":"2e64cc22fd37729c184a05278ec2b763","path":"/erad2024/build/2e64cc22fd37729c184a05278ec2b763.txt"}}}],"key":"JyzLfSwsHR"}],"key":"k3qQqLRkLG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:15.649845Z","iopub.status.busy":"2024-08-30T17:25:15.649405Z","iopub.status.idle":"2024-08-30T17:25:15.653316Z","shell.execute_reply":"2024-08-30T17:25:15.652785Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"list(dtree.children)","key":"MN9oWEDYUC"},{"type":"output","id":"uOA9wJ6GRHSnXKVtAV5Pj","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"['cband', 'xband']","content_type":"text/plain"}}}],"key":"xfPV6acqMg"}],"key":"KBUi5zS8TD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"C-band radar data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OCd0c5TS5b"}],"identifier":"c-band-radar-data","label":"C-band radar data","html_id":"c-band-radar-data","implicit":true,"key":"mBSzUDL9MQ"}],"key":"MixigWpWmA"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can access a nested dataset by using the path as follows:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OQW54h9tpa"}],"key":"LlGSjiBTDX"}],"key":"cE47OwtuMQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:15.655663Z","iopub.status.busy":"2024-08-30T17:25:15.655188Z","iopub.status.idle":"2024-08-30T17:25:16.634563Z","shell.execute_reply":"2024-08-30T17:25:16.633977Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dtree[\"cband\"]","key":"U7amiP9mPz"},{"type":"output","id":"q1495BqbhcZPftUWw_mm6","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"2663c8425d4871a68efe5eaafa18969b","path":"/erad2024/build/2663c8425d4871a68efe5eaafa18969b.html"},"text/plain":{"content_type":"text/plain","hash":"9c3d1e53ddf31ae914f9e63b3bfdc314","path":"/erad2024/build/9c3d1e53ddf31ae914f9e63b3bfdc314.txt"}}}],"key":"i0Gop0kcgd"}],"key":"Y5DUuzieOt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.655914Z","iopub.status.busy":"2024-08-30T17:25:16.655568Z","iopub.status.idle":"2024-08-30T17:25:16.659546Z","shell.execute_reply":"2024-08-30T17:25:16.659119Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# all sweeps/nodes within the cband datatree\nlist(dtree[\"cband\"].children)","key":"gnQ7DjHeH2"},{"type":"output","id":"VdfpMQaRedyoYLY3nkOQg","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"['sweep_0',\n 'sweep_1',\n 'sweep_10',\n 'sweep_11',\n 'sweep_12',\n 'sweep_13',\n 'sweep_14',\n 'sweep_15',\n 'sweep_16',\n 'sweep_17',\n 'sweep_18',\n 'sweep_19',\n 'sweep_2',\n 'sweep_3',\n 'sweep_4',\n 'sweep_5',\n 'sweep_6',\n 'sweep_7',\n 'sweep_8',\n 'sweep_9']","content_type":"text/plain"}}}],"key":"VcTm9EP1a6"}],"key":"R1MBoJAI3C"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Accessing one of the sweeps (“sweep_2”):","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gsE9ZEFHYV"}],"key":"B3eso3kHA5"}],"key":"GqeUo4BE27"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.661241Z","iopub.status.busy":"2024-08-30T17:25:16.661072Z","iopub.status.idle":"2024-08-30T17:25:16.663598Z","shell.execute_reply":"2024-08-30T17:25:16.663191Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dsc = dtree[\"cband/sweep_2\"].ds","key":"mrv5USt3sV"},{"type":"output","id":"Hi2JVr5uZdl3wwOHvnpDO","data":[],"key":"kGCxCfaXQn"}],"key":"HuQYOGuVeB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.665209Z","iopub.status.busy":"2024-08-30T17:25:16.665049Z","iopub.status.idle":"2024-08-30T17:25:16.716201Z","shell.execute_reply":"2024-08-30T17:25:16.715724Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display(dsc)","key":"fw3W8UaFZ7"},{"type":"output","id":"m92fQGkYf8cIkFH4kaHEu","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"9e220ef62584d5bec4077dfe95ebecc6","path":"/erad2024/build/9e220ef62584d5bec4077dfe95ebecc6.html"},"text/plain":{"content":"<xarray.DatasetView> Size: 1GB\nDimensions:                              (volume_time: 73, azimuth: 360,\n                                          range: 492)\nCoordinates:\n    altitude                             float32 4B ...\n  * azimuth                              (azimuth) float32 1kB 0.5 1.5 ... 359.5\n    crs_wkt                              int64 8B ...\n    elevation                            (volume_time, azimuth) float32 105kB dask.array<chunksize=(73, 360), meta=np.ndarray>\n    latitude                             float32 4B ...\n    longitude                            float32 4B ...\n  * range                                (range) float32 2kB 250.0 ... 2.457e+05\n    time                                 (volume_time, azimuth) datetime64[ns] 210kB dask.array<chunksize=(73, 360), meta=np.ndarray>\n  * volume_time                          (volume_time) datetime64[ns] 584B 20...\n    x                                    (azimuth, range, volume_time) float32 52MB dask.array<chunksize=(90, 123, 19), meta=np.ndarray>\n    y                                    (azimuth, range, volume_time) float32 52MB dask.array<chunksize=(90, 123, 19), meta=np.ndarray>\n    z                                    (volume_time, azimuth, range) float32 52MB dask.array<chunksize=(19, 90, 123), meta=np.ndarray>\nData variables: (12/14)\n    differential_reflectivity            (volume_time, azimuth, range) float64 103MB dask.array<chunksize=(1, 360, 492), meta=np.ndarray>\n    nyquist_velocity                     (volume_time, azimuth) float32 105kB dask.array<chunksize=(1, 360), meta=np.ndarray>\n    pulse_width                          (volume_time, azimuth) timedelta64[ns] 210kB dask.array<chunksize=(1, 360), meta=np.ndarray>\n    reflectivity                         (volume_time, azimuth, range) float64 103MB dask.array<chunksize=(1, 360, 492), meta=np.ndarray>\n    reflectivity_hh_clut                 (volume_time, azimuth, range) float64 103MB dask.array<chunksize=(1, 360, 492), meta=np.ndarray>\n    reflectivity_vv                      (volume_time, azimuth, range) float64 103MB dask.array<chunksize=(1, 360, 492), meta=np.ndarray>\n    ...                                   ...\n    sweep_fixed_angle                    (volume_time) float32 292B dask.array<chunksize=(73,), meta=np.ndarray>\n    sweep_mode                           (volume_time) <U20 6kB dask.array<chunksize=(73,), meta=np.ndarray>\n    sweep_number                         (volume_time) int64 584B dask.array<chunksize=(73,), meta=np.ndarray>\n    uncorrected_cross_correlation_ratio  (volume_time, azimuth, range) float64 103MB dask.array<chunksize=(1, 360, 492), meta=np.ndarray>\n    uncorrected_differential_phase       (volume_time, azimuth, range) float64 103MB dask.array<chunksize=(1, 360, 492), meta=np.ndarray>\n    velocity                             (volume_time, azimuth, range) float64 103MB dask.array<chunksize=(1, 360, 492), meta=np.ndarray>","content_type":"text/plain"}}}],"key":"pswAFIgd9d"}],"key":"cvYw21DDSN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"X-band radar data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zp4t4tBzJp"}],"identifier":"x-band-radar-data","label":"X-band radar data","html_id":"x-band-radar-data","implicit":true,"key":"D458OeqMIa"}],"key":"iOQNEFdM5S"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Similarly, we can access X-band radar data as follows:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fZmjqxHmsM"}],"key":"h0mhI8plY8"}],"key":"v2YbUtgn8n"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.718368Z","iopub.status.busy":"2024-08-30T17:25:16.718206Z","iopub.status.idle":"2024-08-30T17:25:16.721583Z","shell.execute_reply":"2024-08-30T17:25:16.721161Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"list(dtree[\"xband\"].children)","key":"FQukpJDvJX"},{"type":"output","id":"XuBlv-4Mr-UbXYSdyglPY","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"['sweep_0',\n 'sweep_1',\n 'sweep_2',\n 'sweep_3',\n 'sweep_4',\n 'sweep_5',\n 'sweep_6',\n 'sweep_7']","content_type":"text/plain"}}}],"key":"YY7WEV8UiA"}],"key":"llBiLkrkue"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.723335Z","iopub.status.busy":"2024-08-30T17:25:16.723070Z","iopub.status.idle":"2024-08-30T17:25:16.725414Z","shell.execute_reply":"2024-08-30T17:25:16.725021Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dsx = dtree[\"xband/sweep_0\"].ds","key":"J83l52hWCM"},{"type":"output","id":"PQEA5ogP86oYXPJnVYPR8","data":[],"key":"EdOG2bcUju"}],"key":"o0htyFJyuZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.727173Z","iopub.status.busy":"2024-08-30T17:25:16.726824Z","iopub.status.idle":"2024-08-30T17:25:16.809895Z","shell.execute_reply":"2024-08-30T17:25:16.809261Z"},"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"display(dsx)","key":"GdZIT3o8sR"},{"type":"output","id":"K-Lei6epE9esokEETflFX","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"9c55f531ce46b0a9a62c4767ceccdfbb","path":"/erad2024/build/9c55f531ce46b0a9a62c4767ceccdfbb.html"},"text/plain":{"content":"<xarray.DatasetView> Size: 1GB\nDimensions:                    (volume_time: 72, azimuth: 360, range: 416)\nCoordinates:\n    altitude                   float64 8B ...\n  * azimuth                    (azimuth) float32 1kB 0.5 1.5 2.5 ... 358.5 359.5\n    crs_wkt                    int64 8B ...\n    elevation                  (volume_time, azimuth) float32 104kB dask.array<chunksize=(72, 360), meta=np.ndarray>\n    latitude                   float64 8B ...\n    longitude                  float64 8B ...\n  * range                      (range) float32 2kB 150.0 450.0 ... 1.246e+05\n    time                       (volume_time, azimuth, range) datetime64[ns] 86MB dask.array<chunksize=(18, 90, 104), meta=np.ndarray>\n  * volume_time                (volume_time) datetime64[ns] 576B 2024-05-22T1...\n    x                          (azimuth, range, volume_time) float32 43MB dask.array<chunksize=(90, 104, 18), meta=np.ndarray>\n    y                          (azimuth, range, volume_time) float32 43MB dask.array<chunksize=(90, 104, 18), meta=np.ndarray>\n    z                          (volume_time, azimuth, range) float32 43MB dask.array<chunksize=(18, 90, 104), meta=np.ndarray>\nData variables: (12/30)\n    DBZ                        (volume_time, azimuth, range) float64 86MB dask.array<chunksize=(1, 360, 416), meta=np.ndarray>\n    DBZ_TOT                    (volume_time, azimuth, range) float64 86MB dask.array<chunksize=(1, 360, 416), meta=np.ndarray>\n    HCLASS                     (volume_time, azimuth, range) float64 86MB dask.array<chunksize=(1, 360, 416), meta=np.ndarray>\n    KDP                        (volume_time, azimuth, range) float64 86MB dask.array<chunksize=(1, 360, 416), meta=np.ndarray>\n    MCSSX                      (volume_time, azimuth, range) float32 43MB dask.array<chunksize=(1, 360, 416), meta=np.ndarray>\n    PHIDP                      (volume_time, azimuth, range) float64 86MB dask.array<chunksize=(1, 360, 416), meta=np.ndarray>\n    ...                         ...\n    ray_start_range            (volume_time, azimuth) float32 104kB dask.array<chunksize=(1, 360), meta=np.ndarray>\n    scan_rate                  (volume_time, azimuth) float32 104kB dask.array<chunksize=(1, 360), meta=np.ndarray>\n    sweep_fixed_angle          (volume_time) float32 288B dask.array<chunksize=(72,), meta=np.ndarray>\n    sweep_mode                 (volume_time) <U20 6kB dask.array<chunksize=(72,), meta=np.ndarray>\n    sweep_number               (volume_time) float64 576B dask.array<chunksize=(72,), meta=np.ndarray>\n    unambiguous_range          (volume_time, azimuth) float32 104kB dask.array<chunksize=(1, 360), meta=np.ndarray>","content_type":"text/plain"}}}],"key":"vBJobGQtGN"}],"key":"OGO0we81Dw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Quantitave Precipitation Estimation (QPE)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MSKTvgq0uv"}],"identifier":"quantitave-precipitation-estimation-qpe","label":"Quantitave Precipitation Estimation (QPE)","html_id":"quantitave-precipitation-estimation-qpe","implicit":true,"key":"JegkRTQrxD"}],"key":"LKZoeS6w6F"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"QPE is a critical process in meteorology, providing measurements of rainfall intensity and accumulation from radar data. One of the foundational methods for QPE is based on the  Z-R relationship, which establishes a statistical relationship between radar reflectivity (Z) and rainfall rate (R). This empirical relationship, derived from observations, is commonly expressed as","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ajButBX6Go"}],"key":"SvGcJkhLnz"},{"type":"math","value":"𝑍=\\alpha R^{\\beta}","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>𝑍</mi><mo>=</mo><mi>α</mi><msup><mi>R</mi><mi>β</mi></msup></mrow><annotation encoding=\"application/x-tex\">𝑍=\\alpha R^{\\beta}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8991em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span></span></span></span></span></span></span></span></span></span>","enumerator":"1","key":"adH6a2lqGf"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"where ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oK2vmnpF1w"},{"type":"text","value":"α","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"R5tO2VpEWB"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YfNEf0TkQ1"},{"type":"text","value":"β","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Vtbw3UdUJC"},{"type":"text","value":" are constants.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"B93FJZjTzn"}],"key":"p1f2oH3451"}],"key":"ykuytXOIqg"},{"type":"block","kind":"notebook-code","data":{"editable":true,"execution":{"iopub.execute_input":"2024-08-30T17:25:16.813503Z","iopub.status.busy":"2024-08-30T17:25:16.813329Z","iopub.status.idle":"2024-08-30T17:25:16.817058Z","shell.execute_reply":"2024-08-30T17:25:16.816511Z"},"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def rain_depth(z: xr.DataArray, a: float=200.0, b: float=1.6, t:int=5) -> xr.DataArray:\n    \"\"\"\n    Estimates rainfall depth using radar reflectivity and a Z-R relationship.\n    \n    This function computes Quantitative Precipitation Estimation (QPE) by converting\n    radar reflectivity (Z) into rainfall rate (R) using the Z-R relationship and\n    then integrating over time to estimate the total rainfall depth.\n    \n    Parameters:\n    -----------\n    z : xr.DataArray\n        Radar reflectivity in dBZ. This should be a multi-dimensional Xarray DataArray.\n    a : float, optional\n        The alpha (a) parameter in the Z-R relationship. Default is 200.0, corresponding\n        to the Marshall and Palmer (1948) relationship.\n    b : float, optional\n        The beta (b) parameter in the Z-R relationship. Default is 1.6, also from the\n        Marshall and Palmer (1948) relationship.\n    t : int, optional\n        Time integration period in minutes, used to convert rainfall rates into\n        accumulated depth. Default is 5 minutes.\n    \n    Returns:\n    --------\n    xr.DataArray\n        A DataArray representing the estimated rainfall depth in the same dimensions\n        as the input radar reflectivity. The units of the returned DataArray will be\n        consistent with the time integration provided (e.g., mm for 5-minute accumulation).\n    \n    Notes:\n    ------\n    - The Z-R relationship used is of the form Z = a * R^b, where Z is in linear units.\n    - The function first converts the radar reflectivity from dBZ to linear units (Z),\n      then computes the rainfall rate (R), and finally multiplies by the time integration\n      period to obtain the rainfall depth.\n    \n    Example:\n    --------\n    To compute the rainfall depth over a 5-minute period using reflectivity data:\n    \n    >>> rainfall_depth = rain_depth(z, a=200.0, b=1.6, t=5)\n    \n    This will return the estimated rainfall depth in millimeters, assuming the default\n    parameters for the Marshall and Palmer (1955) Z-R relationship.\n    \n    \"\"\"\n    # Convert reflectivity from dBZ to linear units\n    z_lin = 10 ** (z / 10) \n    # Compute rainfall depth using the Z-R relationship and time integration\n    \n    return ((1 / a) ** (1 / b) * z_lin ** (1 / b)) * (t / 60) # rainfall depth","visibility":"show","key":"u4BN33l9qr"},{"type":"output","id":"KqHMxDJoaPTRaMK6yQlrH","data":[],"visibility":"show","key":"bKEdZ3v8tm"}],"visibility":"show","key":"bJGP5PAL3E"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s apply this fucntion to our radar dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"We5Dl8TZkl"}],"key":"Qtd1blQ9cD"}],"key":"JptMH7baAn"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.818890Z","iopub.status.busy":"2024-08-30T17:25:16.818725Z","iopub.status.idle":"2024-08-30T17:25:16.825461Z","shell.execute_reply":"2024-08-30T17:25:16.824941Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"r_depth = rain_depth(dsc.reflectivity)","key":"eZMSqaK44w"},{"type":"output","id":"T3jEZ4dz3cQA4TvvVOYkG","data":[],"key":"FYgM0uOV7I"}],"key":"OGtY5y6Rml"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.827364Z","iopub.status.busy":"2024-08-30T17:25:16.827200Z","iopub.status.idle":"2024-08-30T17:25:16.851355Z","shell.execute_reply":"2024-08-30T17:25:16.850873Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"r_depth","key":"BWKyMOePcK"},{"type":"output","id":"QUYWK2DfWEFFSWR8EJYAS","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"b69a0c767881f0c9d37bb6aed660ecd3","path":"/erad2024/build/b69a0c767881f0c9d37bb6aed660ecd3.html"},"text/plain":{"content":"<xarray.DataArray 'reflectivity' (volume_time: 73, azimuth: 360, range: 492)> Size: 103MB\ndask.array<mul, shape=(73, 360, 492), dtype=float64, chunksize=(1, 360, 492), chunktype=numpy.ndarray>\nCoordinates:\n    altitude     float32 4B ...\n  * azimuth      (azimuth) float32 1kB 0.5 1.5 2.5 3.5 ... 357.5 358.5 359.5\n    crs_wkt      int64 8B ...\n    elevation    (volume_time, azimuth) float32 105kB dask.array<chunksize=(73, 360), meta=np.ndarray>\n    latitude     float32 4B ...\n    longitude    float32 4B ...\n  * range        (range) float32 2kB 250.0 750.0 ... 2.452e+05 2.457e+05\n    time         (volume_time, azimuth) datetime64[ns] 210kB dask.array<chunksize=(73, 360), meta=np.ndarray>\n  * volume_time  (volume_time) datetime64[ns] 584B 2024-05-22T12:55:24 ... 20...\n    x            (azimuth, range, volume_time) float32 52MB dask.array<chunksize=(90, 123, 19), meta=np.ndarray>\n    y            (azimuth, range, volume_time) float32 52MB dask.array<chunksize=(90, 123, 19), meta=np.ndarray>\n    z            (volume_time, azimuth, range) float32 52MB dask.array<chunksize=(19, 90, 123), meta=np.ndarray>","content_type":"text/plain"}}}],"key":"TRETbQQK6n"}],"key":"dlkTlOsD0e"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As the coordinates depend on the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RUeRMnKhSZ"},{"type":"inlineCode","value":"volume_time","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fw8mISeg15"},{"type":"text","value":" dimension, they will disappear when aggregating along this dimension. Therefore, we need to store these coordinates so that we can add them back to our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HM5iZZwNrc"},{"type":"inlineCode","value":"xr.DataArray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZT08EXspwg"}],"key":"MTGSz0evyU"}],"key":"lH0Ik0oatZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.853119Z","iopub.status.busy":"2024-08-30T17:25:16.852955Z","iopub.status.idle":"2024-08-30T17:25:16.860782Z","shell.execute_reply":"2024-08-30T17:25:16.860362Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"x = dsc.x.isel(volume_time=0)\ny = dsc.y.isel(volume_time=0)\nz = dsc.z.isel(volume_time=0)","key":"OgBGDgqi5D"},{"type":"output","id":"u1XfUReM7NiMHJ9G3Rd75","data":[],"key":"UaVIS2vDCE"}],"key":"BP45Ff7MOo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s compute the total rainfall depth across the entire dataset.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KLiLoxJnPn"}],"key":"OWvNmhhoGV"}],"key":"gZJWDDWHke"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.862723Z","iopub.status.busy":"2024-08-30T17:25:16.862428Z","iopub.status.idle":"2024-08-30T17:25:16.874372Z","shell.execute_reply":"2024-08-30T17:25:16.873931Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"r_total = r_depth.sum(\"volume_time\")","key":"iX6hCqgxQ2"},{"type":"output","id":"gukDda9nGf2u-LElTgR6M","data":[],"key":"l5wk4KgDEH"}],"key":"a7WaIkIF9x"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Adding coordinates back","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BcxBLejaOG"}],"key":"bNy3pLbDDE"}],"key":"Yu7bFS6iDr"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:16.876350Z","iopub.status.busy":"2024-08-30T17:25:16.876013Z","iopub.status.idle":"2024-08-30T17:25:17.440996Z","shell.execute_reply":"2024-08-30T17:25:17.440580Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"r_total = r_total.assign_coords({\"x\":x, \"y\":y, \"z\":z})","key":"LdJw0e3Ppz"},{"type":"output","id":"zBtIioQ47ILjdQE96sWbv","data":[],"key":"JhxzWxw71q"}],"key":"DePsCJlOGD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting the total rainfall depth","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KrUC3upWi0"}],"key":"tBo1t4jZMK"}],"key":"Mi9dlojNAy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:17.442980Z","iopub.status.busy":"2024-08-30T17:25:17.442642Z","iopub.status.idle":"2024-08-30T17:25:19.163602Z","shell.execute_reply":"2024-08-30T17:25:19.162961Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nfig, ax = plt.subplots(figsize=(6, 5))\nc = r_total.plot.pcolormesh(\n    x='x', \n    y='y', \n    cmap='ChaseSpectral', \n    vmin=0,\n    vmax=50,\n    add_colorbar=False\n)\nplt.colorbar(c, ax=ax, label=\"Rainfall depth [mm]\")\nax.set_title(\"\")","key":"MuFbWKriBR"},{"type":"output","id":"6nTQ08CDyQr7ufWe9rgpQ","data":[{"name":"stdout","output_type":"stream","text":"CPU times: user 840 ms, sys: 93 ms, total: 933 ms\nWall time: 1.46 s\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8d8180f653654411ca5dd4acf47ee7a1","path":"/erad2024/build/8d8180f653654411ca5dd4acf47ee7a1.png"},"text/plain":{"content":"<Figure size 600x500 with 2 Axes>","content_type":"text/plain"}}}],"key":"CzoyxBbENG"}],"key":"GZVwNslfjz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now it’s your turn. Try computing the QPE for the X-band radar dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tyntMO87d3"}],"key":"TlwWKgibwC"}],"key":"P9gfALo4l6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.166177Z","iopub.status.busy":"2024-08-30T17:25:19.165670Z","iopub.status.idle":"2024-08-30T17:25:19.169253Z","shell.execute_reply":"2024-08-30T17:25:19.168808Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Computing rainfall depth\n","key":"EOt0VQlagp"},{"type":"output","id":"fuh_J6KivN1VnAtdqZP5Y","data":[],"key":"SIWv4aBGHl"}],"key":"C8kqM3Cxxc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.171177Z","iopub.status.busy":"2024-08-30T17:25:19.171003Z","iopub.status.idle":"2024-08-30T17:25:19.173508Z","shell.execute_reply":"2024-08-30T17:25:19.172974Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# saving coordinates\n","key":"gaLWDnXZIG"},{"type":"output","id":"bkXvP2tZ2dvf5He7lQ_Tv","data":[],"key":"G6MKmc7Glq"}],"key":"gADMBS7i44"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.175396Z","iopub.status.busy":"2024-08-30T17:25:19.175230Z","iopub.status.idle":"2024-08-30T17:25:19.177654Z","shell.execute_reply":"2024-08-30T17:25:19.177114Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Acummulating rainfall depths\n","key":"Zc1HPtus39"},{"type":"output","id":"YSjxJjTEj0oyr2AifJiRX","data":[],"key":"i9vRQTeYIG"}],"key":"O9IUtSTB4s"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.179866Z","iopub.status.busy":"2024-08-30T17:25:19.179707Z","iopub.status.idle":"2024-08-30T17:25:19.182099Z","shell.execute_reply":"2024-08-30T17:25:19.181607Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# adding back x,y, and z coordinates\n","key":"Vt2T0S6TkO"},{"type":"output","id":"JhQU8qJjmBCVRYYd-UgAm","data":[],"key":"cgctm8dLUO"}],"key":"JePzoYWbC9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.184174Z","iopub.status.busy":"2024-08-30T17:25:19.184020Z","iopub.status.idle":"2024-08-30T17:25:19.186371Z","shell.execute_reply":"2024-08-30T17:25:19.185870Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plotting rainfall accumulation\n","key":"gSSemwrIjN"},{"type":"output","id":"E4X3rrwZKYpO-ARfAjwBr","data":[],"key":"qogDp9sxRs"}],"key":"gKFYOszf7C"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Quasi-Vertical Profile (QVP)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KKt8i8uAy4"}],"identifier":"quasi-vertical-profile-qvp","label":"Quasi-Vertical Profile (QVP)","html_id":"quasi-vertical-profile-qvp","implicit":true,"key":"PRWm6Zonwf"}],"key":"fuvN2BCsLn"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Quasi-Vertical Profiles (QVP) are a radar analysis technique that provides vertical profiles of atmospheric phenomena by averaging radar data over a specific azimuthal range. This method simplifies the study of storm structures, revealing vertical distributions of reflectivity, velocity, and other key parameters. QVPs are valuable for understanding storm dynamics and the development of severe weather.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rLYWTqJ1DT"}],"key":"oM47wiAYga"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The following function will help us computing QVPs","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qDByDeDa6r"}],"key":"NgKmdUOz2d"}],"key":"HvxWiDoPOD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.188277Z","iopub.status.busy":"2024-08-30T17:25:19.188122Z","iopub.status.idle":"2024-08-30T17:25:19.192557Z","shell.execute_reply":"2024-08-30T17:25:19.192035Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"def compute_qvp(ds: xr.Dataset, var=\"reflectivity\")-> xr.DataArray:\n    \"\"\"\n    Computes a Quasi-Vertical Profile (QVP) from a radar time-series dataset.\n    \n    This function averages the specified variable over the azimuthal dimension\n    to produce a QVP. If the variable is in dBZ (a logarithmic scale), it converts\n    the values to linear units before averaging and then converts the result \n    back to dBZ.\n    \n    Parameters:\n    -----------\n    ds : xr.Dataset\n        The Xarray Dataset containing the radar data. This dataset should include\n        multiple sweeps, azimuth angles, and range gates.\n    var : str, optional\n        The variable to be averaged to create the QVP. \n        Default is \"reflectivity\".\n    \n    Returns:\n    --------\n    xr.DataArray\n        A DataArray representing the QVP for the specified variable. The result\n        is averaged over azimuth and adjusted for height using the mean sweep \n        elevation angle.\n    \n    Notes:\n    ------\n    - If the variable is in dBZ units, the function converts it to linear units \n      before averaging to ensure accurate results, then converts it back to dBZ.\n    - The QVP is calculated by adjusting the range gates to height using the \n      sine of the mean sweep elevation angle.\n    \n    Example:\n    --------\n    To compute a QVP for reflectivity:\n    \n    >>> qvp_reflectivity = compute_qvp(ds, var=\"reflectivity\")\n    \n    The resulting QVP will be in dBZ and aligned along the height dimension.\n    \n    \"\"\"\n    \n    units: str = ds[var].attrs['units']\n    if units.startswith(\"dB\"):\n        qvp = 10 ** (ds[var] / 10)\n        qvp = qvp.mean(\"azimuth\")\n        qvp = 10 * np.log10(qvp)\n    else:\n        qvp = ds[var]\n        qvp = qvp.mean(\"azimuth\")\n        \n    qvp = qvp.assign_coords({\"range\":(qvp.range.values * \n                                 np.sin(ds.sweep_fixed_angle.values.mean() *  \n                                        np.pi / 180.))})\n    qvp = qvp.rename(f\"qvp_{var}\")\n    qvp = qvp.rename({\"range\": \"height\"})\n    return qvp","key":"dDvBnZ4sh5"},{"type":"output","id":"rJ5mPqWNIB2gtHMQERb7p","data":[],"key":"OkMWcTNcWZ"}],"key":"KQafdRmlNG"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s compute the QVP for the X-band radar dataset at the highest elevation angle (“sweep_7”).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OYV8sk6oYL"}],"key":"aFsnjw2XUT"}],"key":"ewJr85EY5e"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.194632Z","iopub.status.busy":"2024-08-30T17:25:19.194479Z","iopub.status.idle":"2024-08-30T17:25:19.197191Z","shell.execute_reply":"2024-08-30T17:25:19.196677Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ds_x = dtree[\"xband/sweep_7\"].ds","key":"ajgkZeNGSv"},{"type":"output","id":"7ux6hf9jiPTOCE3FvjCgh","data":[],"key":"L7VSzRvIzT"}],"key":"K07FpGOz5P"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.199205Z","iopub.status.busy":"2024-08-30T17:25:19.198807Z","iopub.status.idle":"2024-08-30T17:25:19.291153Z","shell.execute_reply":"2024-08-30T17:25:19.290567Z"},"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"display(ds_x)","key":"WCEGpQQE8t"},{"type":"output","id":"5KYNx0NEGqOhlCJpBq6Sa","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"f375021f2b0b3be074697d082854be40","path":"/erad2024/build/f375021f2b0b3be074697d082854be40.html"},"text/plain":{"content":"<xarray.DatasetView> Size: 393MB\nDimensions:                    (volume_time: 72, azimuth: 360, range: 157)\nCoordinates:\n    altitude                   float64 8B ...\n  * azimuth                    (azimuth) float32 1kB 0.5 1.5 2.5 ... 358.5 359.5\n    crs_wkt                    int64 8B ...\n    elevation                  (volume_time, azimuth) float32 104kB dask.array<chunksize=(72, 360), meta=np.ndarray>\n    latitude                   float64 8B ...\n    longitude                  float64 8B ...\n  * range                      (range) float32 628B 150.0 450.0 ... 4.695e+04\n    time                       (volume_time, azimuth, range) datetime64[ns] 33MB dask.array<chunksize=(18, 90, 79), meta=np.ndarray>\n  * volume_time                (volume_time) datetime64[ns] 576B 2024-05-22T1...\n    x                          (azimuth, range, volume_time) float32 16MB dask.array<chunksize=(90, 40, 36), meta=np.ndarray>\n    y                          (azimuth, range, volume_time) float32 16MB dask.array<chunksize=(90, 40, 36), meta=np.ndarray>\n    z                          (volume_time, azimuth, range) float32 16MB dask.array<chunksize=(18, 90, 79), meta=np.ndarray>\nData variables: (12/30)\n    DBZ                        (volume_time, azimuth, range) float64 33MB dask.array<chunksize=(1, 360, 157), meta=np.ndarray>\n    DBZ_TOT                    (volume_time, azimuth, range) float64 33MB dask.array<chunksize=(1, 360, 157), meta=np.ndarray>\n    HCLASS                     (volume_time, azimuth, range) float64 33MB dask.array<chunksize=(1, 360, 157), meta=np.ndarray>\n    KDP                        (volume_time, azimuth, range) float64 33MB dask.array<chunksize=(1, 360, 157), meta=np.ndarray>\n    MCSSX                      (volume_time, azimuth, range) float32 16MB dask.array<chunksize=(1, 360, 157), meta=np.ndarray>\n    PHIDP                      (volume_time, azimuth, range) float64 33MB dask.array<chunksize=(1, 360, 157), meta=np.ndarray>\n    ...                         ...\n    ray_start_range            (volume_time, azimuth) float32 104kB dask.array<chunksize=(1, 360), meta=np.ndarray>\n    scan_rate                  (volume_time, azimuth) float32 104kB dask.array<chunksize=(1, 360), meta=np.ndarray>\n    sweep_fixed_angle          (volume_time) float32 288B dask.array<chunksize=(72,), meta=np.ndarray>\n    sweep_mode                 (volume_time) <U20 6kB dask.array<chunksize=(72,), meta=np.ndarray>\n    sweep_number               (volume_time) float64 576B dask.array<chunksize=(72,), meta=np.ndarray>\n    unambiguous_range          (volume_time, azimuth) float32 104kB dask.array<chunksize=(1, 360), meta=np.ndarray>","content_type":"text/plain"}}}],"key":"j4NEkl7K7i"}],"key":"hzi6D24XhF"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can use our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bVx0GPUgqK"},{"type":"inlineCode","value":"compute_qvp","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DY5vWnxWvu"},{"type":"text","value":" function to create the reflectivity QVP.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N0mJVWlV5A"}],"key":"Mm5G4berMr"}],"key":"cmhtMBKFWA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.294721Z","iopub.status.busy":"2024-08-30T17:25:19.294268Z","iopub.status.idle":"2024-08-30T17:25:19.337119Z","shell.execute_reply":"2024-08-30T17:25:19.336617Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"qvp_ref = compute_qvp(ds_x, var=\"DBZ\")","key":"o5OM5ExyrS"},{"type":"output","id":"HBy-KtjabRZq3PFZ_wzG6","data":[],"key":"KxtnHsLd2i"}],"key":"CBEu9EUbHA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.339368Z","iopub.status.busy":"2024-08-30T17:25:19.339006Z","iopub.status.idle":"2024-08-30T17:25:19.353039Z","shell.execute_reply":"2024-08-30T17:25:19.352557Z"},"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"display(qvp_ref)","key":"JpKMvj1XjI"},{"type":"output","id":"p7H9B64u5tBAI7T-SCCSd","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"ea13a36fd243a849378a78377900f300","path":"/erad2024/build/ea13a36fd243a849378a78377900f300.html"},"text/plain":{"content":"<xarray.DataArray 'qvp_DBZ' (volume_time: 72, height: 157)> Size: 90kB\ndask.array<mul, shape=(72, 157), dtype=float64, chunksize=(1, 157), chunktype=numpy.ndarray>\nCoordinates:\n    altitude     float64 8B ...\n    crs_wkt      int64 8B ...\n    latitude     float64 8B ...\n    longitude    float64 8B ...\n  * volume_time  (volume_time) datetime64[ns] 576B 2024-05-22T13:03:09.983000...\n  * height       (height) float32 628B 63.39 190.2 317.0 ... 1.972e+04 1.984e+04","content_type":"text/plain"}}}],"key":"hibFhklzM0"}],"key":"gFCzSLsAxt"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can visualize the QVP results using the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"old8OyaD3G"},{"type":"inlineCode","value":".plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kXE6hPImT6"},{"type":"text","value":" functionality within ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YEB8jg5lq8"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Vmfoe91vUI"},{"type":"text","value":" library.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OzOU4oxf4q"}],"key":"KEQ9txmbHD"}],"key":"fqpEXOVxOb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:19.355184Z","iopub.status.busy":"2024-08-30T17:25:19.354843Z","iopub.status.idle":"2024-08-30T17:25:20.659244Z","shell.execute_reply":"2024-08-30T17:25:20.658600Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"qvp_ref.sel(height=slice(0, 1.2e4)).plot(\n    x=\"volume_time\",\n    y=\"height\",\n    cmap=\"ChaseSpectral\",\n    vmin=-10,\n    vmax=50\n)","key":"aTJTfIjMko"},{"type":"output","id":"1RtsG7lUJMsqVBcPgOwDV","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ae33ef827146ef06ddb198d6fa3dc52b","path":"/erad2024/build/ae33ef827146ef06ddb198d6fa3dc52b.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"AaYniTnXni"}],"key":"sK7x8sLlL2"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s try to create a figure similar to the one in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I9aMj2wSdf"},{"type":"cite","url":"https://doi.org/10.1175/JTECH-D-15-0020.1","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ryzhkov et al. (2016)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jUMHfjnPCB"}],"kind":"narrative","label":"Ryzhkov_2016","identifier":"https://doi.org/10.1175/JTECH-D-15-0020.1","enumerator":"1","key":"Rtds5dXFCA"},{"type":"text","value":" by estimating the QVP for differential reflectivity (ZDR), the cross-correlation coefficient (RHOHV), and the differential phase (PHIDP).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HHPGwiV1qG"}],"key":"fPMm2eVwpH"}],"key":"efrHIiN8GA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:20.661653Z","iopub.status.busy":"2024-08-30T17:25:20.661268Z","iopub.status.idle":"2024-08-30T17:25:20.766704Z","shell.execute_reply":"2024-08-30T17:25:20.766184Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"qvp_zdr = compute_qvp(ds_x, var=\"ZDR\")\nqvp_rhohv = compute_qvp(ds_x, var=\"RHOHV\")\nqvp_phidp = compute_qvp(ds_x, var=\"PHIDP\")","key":"drMg66feK3"},{"type":"output","id":"FUcgMRDXU8uT2eQa6Pl4a","data":[],"key":"pkCpS4Ico2"}],"key":"xyKXfxgDVg"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s create the figure","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"moWX2UB8J8"}],"key":"E6EZewXeK6"}],"key":"E3LM8gr31L"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:20.769023Z","iopub.status.busy":"2024-08-30T17:25:20.768833Z","iopub.status.idle":"2024-08-30T17:25:27.158343Z","shell.execute_reply":"2024-08-30T17:25:27.157786Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nfig, axs = plt.subplots(2, 2, figsize=(12, 5), sharey=True, sharex=True)\n\ncf = qvp_ref.sel(height=slice(0, 1.2e4)).plot.contourf(\n    x=\"volume_time\",\n    y=\"height\",\n    cmap=\"ChaseSpectral\",\n    vmin=-10,\n    vmax=50, \n    ax=axs[0][0],\n    levels=np.linspace(-10, 50, 61),\n    add_colorbar=False,\n)\naxs[0][0].set_title(r\"$Z$\")\naxs[0][0].set_xlabel(\"\")\naxs[0][0].set_ylabel(r\"$Height \\ [m]$\")\n\ncbar = plt.colorbar(cf, ax=axs[0][0], \n                    label=r\"$Reflectivity \\ [dBZ]$\", \n                   )\n\n\ncf1 = qvp_zdr.sel(height=slice(0, 1.2e4)).plot.contourf(\n    x=\"volume_time\",\n    y=\"height\",\n    cmap=\"ChaseSpectral\",\n    vmin=-1,\n    vmax=5, \n    ax=axs[0][1],\n    levels=np.linspace(-1, 5, 11),\n    add_colorbar=False,\n)\naxs[0][1].set_title(r\"$Z_{DR}$\")\naxs[0][1].set_xlabel(\"\")\naxs[0][1].set_ylabel(r\"\")\n\ncbar = plt.colorbar(cf1, ax=axs[0][1], \n                    label=r\"$Diff. \\ Reflectivity \\ [dB]$\", \n                   )\n\ncf2 = qvp_rhohv.sel(height=slice(0, 1.2e4)).plot.contourf(\n    x=\"volume_time\",\n    y=\"height\",\n    cmap=\"ChaseSpectral\",\n    vmin=0,\n    vmax=1, \n    ax=axs[1][0],\n    levels=np.linspace(0, 1, 101),\n    add_colorbar=False,\n)\naxs[1][0].set_title(r\"$\\rho _{HV}$\")\naxs[1][0].set_ylabel(r\"$Height \\ [m]$\")\naxs[1][0].set_xlabel(r\"$Time \\ [UTC]$\")\n\ncbar = plt.colorbar(cf2, ax=axs[1][0], \n                    label=r\"$Cross-Correlation \\ Coef.$\", \n                   )\ncf3 = qvp_phidp.sel(height=slice(0, 1.2e4)).plot.contourf(\n    x=\"volume_time\",\n    y=\"height\",\n    cmap=\"jet\",\n    vmin=0,\n    vmax=100, \n    ax=axs[1][1],\n    levels=np.linspace(0, 100, 101),\n    add_colorbar=False,\n\n)\naxs[1][1].set_title(r\"$\\theta _{DP}$\")\naxs[1][1].set_xlabel(r\"$Time \\ [UTC]$\")\naxs[1][1].set_ylabel(r\"\")\n\ncbar = plt.colorbar(cf3, ax=axs[1][1], \n                    label=r\"$Differential \\ Phase \\ [deg]$\", \n                   )\n\nfig.tight_layout()\nplt.savefig('../images/QVP.svg',  bbox_inches='tight')","key":"nGnrdIuJ2e"},{"type":"output","id":"3ZpwmtI_ZBNDvSiJe9_dh","data":[{"name":"stdout","output_type":"stream","text":"CPU times: user 2.83 s, sys: 129 ms, total: 2.96 s\nWall time: 5.66 s\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"5afa4a31acb02b636d555c0742897de5","path":"/erad2024/build/5afa4a31acb02b636d555c0742897de5.png"},"text/plain":{"content":"<Figure size 1200x500 with 8 Axes>","content_type":"text/plain"}}}],"key":"jn418hg8tY"}],"key":"PGkA63a1OS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now it’s your turn. Try computing the QPE for the C-band radar dataset using the 20 deg elevation angle (“sweep_15”)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zvsliSs5ko"}],"key":"ygI4l0iZte"}],"key":"qjely9eRyg"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:27.161268Z","iopub.status.busy":"2024-08-30T17:25:27.160877Z","iopub.status.idle":"2024-08-30T17:25:27.163544Z","shell.execute_reply":"2024-08-30T17:25:27.163089Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"## Select the sweep_15 from the dtree\n","key":"kUZs0Dy4WG"},{"type":"output","id":"m74z5ppmJ0EWHcW6mGX0Y","data":[],"key":"eJL2JDnO50"}],"key":"I9GtnxAKMC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:27.165392Z","iopub.status.busy":"2024-08-30T17:25:27.165053Z","iopub.status.idle":"2024-08-30T17:25:27.167411Z","shell.execute_reply":"2024-08-30T17:25:27.166966Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"## compute the QVP for \"reflectivity\", \"differential_reflectivity\", \n## \"uncorrected_cross_correlation_ratio\", and \"uncorrected_differential_phase\"\n","key":"dw6atIpiA0"},{"type":"output","id":"JtqKHV2i3_21uto2U5hwc","data":[],"key":"XS6CuF6irI"}],"key":"H6NhSdVp7z"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T17:25:27.169228Z","iopub.status.busy":"2024-08-30T17:25:27.168896Z","iopub.status.idle":"2024-08-30T17:25:27.171254Z","shell.execute_reply":"2024-08-30T17:25:27.170765Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# create the figure\n\n","key":"WShuuCxV9f"},{"type":"output","id":"YVFYahYRrck4eSDGqb2Np","data":[],"key":"ixsAuY2Vmz"}],"key":"p0Nb9SwSi3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aRumCYC4BD"}],"key":"qTVGBu7TCM"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kvMFufisLu"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"txE8oFLM9O"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we successfully computed Quantitative Precipitation Estimation (QPE) and Quasi-Vertical Profiles (QVP) for both X-band and C-band radar data using the Analysis-Ready Cloud-Optimized (ARCO) dataset. By leveraging the ARCO format, we were able to streamline the data processing, allowing us to efficiently apply our custom functions for QPE and QVP computation. This approach demonstrated the effectiveness of ARCO datasets in facilitating advanced radar data analysis with minimal preprocessing effort.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HQEDBmhhzQ"}],"key":"gMmuI6crxg"}],"key":"WPRxRW7tqj"},{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mz48xe4teW"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"ull24b5YhS"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Ryzhkov, A., P. Zhang, H. Reeves, M. Kumjian, T. Tschallener, S. Trömel, and C. Simmer, 2016: Quasi-Vertical Profiles—A New Way to Look at Polarimetric Radar Data. J. Atmos.   Oceanic Technol., 33, 551–562, ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"I30VRk33aR"},{"type":"cite","url":"https://doi.org/10.1175/JTECH-D-15-0020.1","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Ryzhkov ","key":"rJGGmtaiat"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"ZELjsK1pWJ"}],"key":"aPd5MxhoA1"},{"type":"text","value":" (2016)","key":"wDPBwqRKwc"}],"kind":"narrative","label":"Ryzhkov_2016","identifier":"https://doi.org/10.1175/JTECH-D-15-0020.1","enumerator":"1","key":"YjGSMijlsK"}],"key":"ffPB0QxO0X"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Marshall, J. S.; Palmer, W. M. (1948). “The distribution of raindrops with size”. Journal of Meteorology. 5 (4): 165–166. ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KYBOHT1eV9"},{"type":"cite","url":"https://doi.org/10.1175/1520-0469(1948)005%3C0165:TDORWS%3E2.0.CO;2","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Marshall & Palmer (1948)","key":"ZS1zt0Pbmf"}],"kind":"narrative","label":"Marshall_1948","identifier":"https://doi.org/10.1175/1520-0469(1948)005%3C0165:TDORWS%3E2.0.CO;2","enumerator":"2","key":"XanPuXehG5"}],"key":"BsDF0SI5Ox"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/index.html","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Xradar","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"VlnL7kNsLC"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/index.html","key":"CG3278j2pA"}],"key":"rwqjFM09RQ"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://github.com/ProjectPythia/radar-cookbook","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Radar cookbook","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"F8K8ecuJ9U"}],"urlSource":"https://github.com/ProjectPythia/radar-cookbook","error":true,"key":"juJBqLxwfv"}],"key":"cynMVsSR6s"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://arm-doe.github.io/pyart/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Py-Art landing page","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"nQAzkwFeBF"}],"urlSource":"https://arm-doe.github.io/pyart/","key":"DPfOdfA9mp"}],"key":"N2ve40Br3R"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://docs.wradlib.org/en/latest/index.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Wradlib landing page","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zDxlUnsO5F"}],"urlSource":"https://docs.wradlib.org/en/latest/index.html","key":"qPEJaR3pwQ"}],"key":"i8pcBZjRt9"}],"key":"XFdJwZKqPC"}],"visibility":"show","key":"gpSGAqAwSM"}],"key":"OX6nxHCf5H"},"references":{"cite":{"order":["Ryzhkov_2016","Marshall_1948"],"data":{"Ryzhkov_2016":{"label":"Ryzhkov_2016","enumerator":"1","doi":"10.1175/jtech-d-15-0020.1","html":"Ryzhkov, A., Zhang, P., Reeves, H., Kumjian, M., Tschallener, T., Trömel, S., & Simmer, C. (2016). Quasi-Vertical Profiles—A New Way to Look at Polarimetric Radar Data. <i>Journal of Atmospheric and Oceanic Technology</i>, <i>33</i>(3), 551–562. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.1175/jtech-d-15-0020.1\">10.1175/jtech-d-15-0020.1</a>","url":"https://doi.org/10.1175/jtech-d-15-0020.1"},"Marshall_1948":{"label":"Marshall_1948","enumerator":"2","doi":"10.1175/1520-0469(1948)005<0165:tdorws>2.0.co;2","html":"Marshall, J. S., & Palmer, W. M. K. (1948). THE DISTRIBUTION OF RAINDROPS WITH SIZE. <i>Journal of Meteorology</i>, <i>5</i>(4), 165–166. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.1175/1520-0469(1948)005&lt\">https://doi.org/10.1175/1520-0469(1948)005&lt</a>;0165:tdorws&gt;2.0.co;2","url":"https://doi.org/10.1175/1520-0469(1948)005&lt"}}}},"footer":{"navigation":{"prev":{"title":"Analysis-Ready Cloud-Optimized Datasets","url":"/arco-datasets","group":"ARCO Radar Datasets"}}},"domain":"http://localhost:3000"}