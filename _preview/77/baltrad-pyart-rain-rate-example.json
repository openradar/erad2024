{"kind":"Notebook","sha256":"23e35d8eaa327ff6db4e75fccba569e5555e0d7daf80cef7c9d62d113b66d0c6","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/77/build/0_baltrad_pyart_rain-54d6c970bc57b5ac7d14e18f3956e66b.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ia97CCrqdf"}],"key":"wDLDZWrTzf"}],"key":"ByZAyfelSh"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IeO8EuPK4I"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"twLvWNy4ut"}],"key":"zdzwtvJ8Vp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:38.511011Z","iopub.status.busy":"2024-08-16T11:24:38.510514Z","iopub.status.idle":"2024-08-16T11:24:39.498524Z","shell.execute_reply":"2024-08-16T11:24:39.497795Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"x6kfFpEn0A"},{"type":"output","id":"E5JVaUO_xuNbatBzHLGTv","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"spooQRvsOg"}],"key":"GF5Ch0GVtj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:39.501653Z","iopub.status.busy":"2024-08-16T11:24:39.501317Z","iopub.status.idle":"2024-08-16T11:24:39.851957Z","shell.execute_reply":"2024-08-16T11:24:39.851397Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"E0YpwCu8E7"},{"type":"output","id":"wpRz-mik5EKW60jRxfTrH","data":[],"key":"WTVZ7fvMRp"}],"key":"CoYNICdwoK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QKAGLhQsj2"}],"key":"pyVPuhiL5q"}],"key":"JJ0by4FncD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:39.854245Z","iopub.status.busy":"2024-08-16T11:24:39.854020Z","iopub.status.idle":"2024-08-16T11:24:40.848494Z","shell.execute_reply":"2024-08-16T11:24:40.847831Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"WXIhY9LeP8"},{"type":"output","id":"HKKDh8Fp_jF0rDA6MwBxW","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"Fq6dk1hMCU"}],"key":"uqq1KyNaZw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Yclsff3nuj"}],"key":"qkXxwS0nsX"}],"key":"PDQfh3WAy1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j7q5MEFzdD"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"ntDSKnKJAJ"}],"key":"eVBp9OVWo0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:40.851961Z","iopub.status.busy":"2024-08-16T11:24:40.851327Z","iopub.status.idle":"2024-08-16T11:24:40.887222Z","shell.execute_reply":"2024-08-16T11:24:40.886642Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"YJ1acAYadr"},{"type":"output","id":"knhm8LXU2D-8R0LCHN_fh","data":[],"key":"viIravrcb5"}],"key":"SSTvh4lK8x"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mVJ1QCpqY8"}],"key":"SyN8GcpcK4"}],"key":"hlSTZNVeBc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:40.889803Z","iopub.status.busy":"2024-08-16T11:24:40.889382Z","iopub.status.idle":"2024-08-16T11:24:40.932025Z","shell.execute_reply":"2024-08-16T11:24:40.931479Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"ZOPZOHEm4P"},{"type":"output","id":"BFqWgrxigU82LFQP7cPev","data":[],"key":"fMBkAD0cML"}],"key":"PWtsF4DqAu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G4R63mzHt1"}],"key":"rcFUjIWW7m"}],"key":"w9JfYq7fte"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:40.934328Z","iopub.status.busy":"2024-08-16T11:24:40.934144Z","iopub.status.idle":"2024-08-16T11:24:40.936794Z","shell.execute_reply":"2024-08-16T11:24:40.936341Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"JDBlT7rM9G"},{"type":"output","id":"ic8qXBQTcSb9vPRFI-uZw","data":[],"key":"EwofCzFhSq"}],"key":"iwOmw6Pdja"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:40.938880Z","iopub.status.busy":"2024-08-16T11:24:40.938442Z","iopub.status.idle":"2024-08-16T11:24:41.438563Z","shell.execute_reply":"2024-08-16T11:24:41.438017Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"KyBh44k9pL"},{"type":"output","id":"G-ARW1vskzqPxXvr9IZ9q","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/_preview/77/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"WN8f8knz3H"}],"key":"QAByKqyIgK"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:41.441399Z","iopub.status.busy":"2024-08-16T11:24:41.440814Z","iopub.status.idle":"2024-08-16T11:24:41.894680Z","shell.execute_reply":"2024-08-16T11:24:41.894129Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"UsLhcbShHW"},{"type":"output","id":"3mu73NSaWDMMohKIsTDTK","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/_preview/77/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"Cmju4mhhmK"}],"key":"VqrfLdPaRI"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:41.896703Z","iopub.status.busy":"2024-08-16T11:24:41.896528Z","iopub.status.idle":"2024-08-16T11:24:42.332608Z","shell.execute_reply":"2024-08-16T11:24:42.332058Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"OFTi14qjrg"},{"type":"output","id":"0F-z1qyoNcnkrxUaQnNZr","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/_preview/77/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"efQJcp1elr"}],"key":"y1OGsFs4XW"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:42.334810Z","iopub.status.busy":"2024-08-16T11:24:42.334425Z","iopub.status.idle":"2024-08-16T11:24:42.795917Z","shell.execute_reply":"2024-08-16T11:24:42.795365Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"jMzu1iMvVK"},{"type":"output","id":"r9PTEd7InTVOYKyBWzD0T","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/_preview/77/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"npxzmGhdFl"}],"key":"kChCZIRPt3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M1LgWplXwS"}],"key":"fNIBNbLvM9"}],"key":"IE5OQ6Q3kG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:42.798787Z","iopub.status.busy":"2024-08-16T11:24:42.798565Z","iopub.status.idle":"2024-08-16T11:24:42.802824Z","shell.execute_reply":"2024-08-16T11:24:42.802352Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"BQlw5ypisp"},{"type":"output","id":"d7oifssTIM5M6jp8cgill","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"M7KbbsZVSF"}],"key":"oILrMSouwH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:42.804630Z","iopub.status.busy":"2024-08-16T11:24:42.804462Z","iopub.status.idle":"2024-08-16T11:24:42.985521Z","shell.execute_reply":"2024-08-16T11:24:42.984715Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"Nl5UnIdyHA"},{"type":"output","id":"Iav-1APRufGYmMgrNCDre","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"e0kG3dyWCo"}],"key":"kti39xxAu1"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:42.987998Z","iopub.status.busy":"2024-08-16T11:24:42.987807Z","iopub.status.idle":"2024-08-16T11:24:42.991909Z","shell.execute_reply":"2024-08-16T11:24:42.991371Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"CzEiFS5fZ3"},{"type":"output","id":"btKxd-TjKJs8qT-sIqpyl","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"hzaN6Vl4Wn"}],"key":"J1BB5FnDcA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:42.994325Z","iopub.status.busy":"2024-08-16T11:24:42.994135Z","iopub.status.idle":"2024-08-16T11:24:42.996913Z","shell.execute_reply":"2024-08-16T11:24:42.996461Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"JoSbVHuKU4"},{"type":"output","id":"78Iq7hD25UdGidBKuB6jt","data":[],"key":"XF4MmZEoFH"}],"key":"W4H7z0R1Js"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ih0lbC2kpY"}],"key":"zpawvBrzPG"}],"key":"j77y9MauB6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:42.998962Z","iopub.status.busy":"2024-08-16T11:24:42.998614Z","iopub.status.idle":"2024-08-16T11:24:43.553029Z","shell.execute_reply":"2024-08-16T11:24:43.552509Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"kTVCWADO1j"},{"type":"output","id":"3uM_Cm8hqLqivYLU1vik4","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/_preview/77/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"NM3BQJ2CxG"}],"key":"rcflilRnmx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:43.555055Z","iopub.status.busy":"2024-08-16T11:24:43.554885Z","iopub.status.idle":"2024-08-16T11:24:44.016705Z","shell.execute_reply":"2024-08-16T11:24:44.016141Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"mSqG7MP6aI"},{"type":"output","id":"gMv9Jl6h6MGpi2AZuADNf","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/_preview/77/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"ZkKNVlUosB"}],"key":"sVEkLgYdnl"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"UKgz5hp2cC"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"rJFT3rQ1ox"}],"key":"NhusutIyRZ"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"QhUk31IvNq"}],"key":"Rlb3xmxogw"}],"key":"Db4q9gleLb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:44.019442Z","iopub.status.busy":"2024-08-16T11:24:44.019248Z","iopub.status.idle":"2024-08-16T11:24:44.030087Z","shell.execute_reply":"2024-08-16T11:24:44.029477Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"KmB9JGZjkK"},{"type":"output","id":"ZA_zAu9L648e6UASvh-DP","data":[],"key":"u4ueesN2nm"}],"key":"IjK4hyJAzs"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:44.032711Z","iopub.status.busy":"2024-08-16T11:24:44.032520Z","iopub.status.idle":"2024-08-16T11:24:44.035239Z","shell.execute_reply":"2024-08-16T11:24:44.034721Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"bsAFZkFJg9"},{"type":"output","id":"acdEeTm6PqOJeGNRJkOpk","data":[],"key":"lZmtDsRRim"}],"key":"M3JkO6D8XI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xZO5OIZzsL"}],"key":"c6hpU1BHhu"}],"key":"ZIHPsO6C0k"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:44.037158Z","iopub.status.busy":"2024-08-16T11:24:44.036993Z","iopub.status.idle":"2024-08-16T11:24:44.460058Z","shell.execute_reply":"2024-08-16T11:24:44.459540Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"DqVHCVFkIF"},{"type":"output","id":"wiIHMDPH5FmgVqKyFddaZ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/_preview/77/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"HBNSNeXMMo"}],"key":"PNB58k0JmH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q5dM31xkS6"}],"key":"uxvGwd7YAD"}],"key":"Vjw5W01ee0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:44.462259Z","iopub.status.busy":"2024-08-16T11:24:44.461888Z","iopub.status.idle":"2024-08-16T11:24:44.477270Z","shell.execute_reply":"2024-08-16T11:24:44.476749Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"YxXFwDAFCc"},{"type":"output","id":"kne1Vc7JA_cyAPKqqZng6","data":[],"key":"iUvOoxSdaa"}],"key":"fDvax3VeIu"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T11:24:44.479619Z","iopub.status.busy":"2024-08-16T11:24:44.479251Z","iopub.status.idle":"2024-08-16T11:24:45.283301Z","shell.execute_reply":"2024-08-16T11:24:45.282806Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"om9mzTQDLW"},{"type":"output","id":"Sevv9fBTAWtvEhxAoPzg9","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"mzKEElhQWp"}],"key":"tXw89JPhXg"}],"key":"m9oHTx6f0O"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}