{"kind":"Notebook","sha256":"95882445bb3d17d7e1300180f7d035346c2a39d035575d23bde9abf053b342b1","slug":"baltrad-compositing","location":"/notebooks/baltrad/baltrad_short_course/4_BALTRAD_Compositing.ipynb","dependencies":[],"frontmatter":{"title":"Compositing","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"settings":{"output_matplotlib_strings":"remove"},"exports":[{"format":"ipynb","filename":"4_BALTRAD_Compositing.ipynb","url":"/erad2024/_preview/104/build/4_BALTRAD_Compositin-0d5b756960f1c342cd036e603632c50e.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This exercise builds on output from the parallel processing exercise. It does not address how projections and navigation is dealt with in BALTRAD. This should be addressed in a separate exercise.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Xv8WS1GHzL"}],"key":"M0vPEaYLD6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Cartesian product area used in this exercise is pre-configured and looked up from a registry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TK89GUOaxA"}],"key":"e61nVsrgjI"}],"key":"gWPEVmQqvi"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rudimentary composite","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xOyjjQe6gJ"}],"identifier":"rudimentary-composite","label":"Rudimentary composite","html_id":"rudimentary-composite","implicit":true,"key":"vQgtZra8FB"}],"key":"P6V7cFAjl7"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:55:14.619547Z","iopub.status.busy":"2024-09-05T14:55:14.619050Z","iopub.status.idle":"2024-09-05T14:55:15.057952Z","shell.execute_reply":"2024-09-05T14:55:15.056916Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport glob, time\nimport matplotlib\nimport _raveio, _rave\nimport _pycomposite, compositing\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")  # Suppress SyntaxWarning from Python2 code\n\ngenerator = compositing.compositing()\ngenerator.filenames = glob.glob(\"data/se*.h5\")","key":"Rw26fihmtr"},{"type":"output","id":"2iqdBXSopJRzOXqESk4Bs","data":[],"key":"QSVxzojfuj"}],"key":"s2SGaHV9Ia"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:55:15.061776Z","iopub.status.busy":"2024-09-05T14:55:15.061382Z","iopub.status.idle":"2024-09-05T14:55:26.296410Z","shell.execute_reply":"2024-09-05T14:55:26.295890Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Run with all defaults to a pre-configured area that uses the Google Maps projection.\n# First two arguments are product date and time. These are taken from the last input file if not specified.\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\n\nrio = _raveio.new()\nrio.object = comp\nrio.save(\"data/comp_pcappi1000m.h5\")\n\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"pBLUMeCQqo"},{"type":"output","id":"vrfzwcQYfOyg9_Rb24oVs","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 11.20 seconds\n"}],"key":"ZMehcmqV9H"}],"key":"icxlzJvN4J"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Tweak the plotter from earlier exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Pr9KWHHMZ7"}],"identifier":"tweak-the-plotter-from-earlier-exercises","label":"Tweak the plotter from earlier exercises","html_id":"tweak-the-plotter-from-earlier-exercises","implicit":true,"key":"n0IlrR4Omp"}],"key":"k59bhJtwi6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:55:26.299108Z","iopub.status.busy":"2024-09-05T14:55:26.298592Z","iopub.status.idle":"2024-09-05T14:55:26.305173Z","shell.execute_reply":"2024-09-05T14:55:26.304672Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Two color palettes, one used in GoogleMapsPlugin, and the other from RAVE\nfrom GmapColorMap import dbzh as dbzp\n\n\n# Convert a 768-list palette to a matplotlib colorlist\ndef make_colorlist(pal):\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i] / 255.0, pal[i + 1] / 255.0, pal[i + 2] / 255.0])\n    return colorlist\n\n\n# Convert lists to colormaps\ndbzcl = make_colorlist(dbzp)\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\n\nStringType = type(\"\")\n\n\ndef plot(data, colorlist=dbzcl, title=\"Composite\"):\n    mini, maxi = data.shape.index(min(data.shape)), data.shape.index(max(data.shape))\n    figsize = (20, 16)  # if mini == 0 else (12,8)\n    fig = plt.figure(figsize=figsize)\n    plt.title(title)\n    clist = (\n        colorlist\n        if type(colorlist) == StringType\n        else matplotlib.colors.ListedColormap(colorlist)\n    )\n    plt.imshow(data, cmap=clist, clim=(0, 255))\n    plt.colorbar(shrink=float(data.shape[mini]) / data.shape[maxi])","key":"B3eZqAgjoT"},{"type":"output","id":"zW62Wh6VakYuR6eKeOkIQ","data":[],"key":"hO7UgvGvPi"}],"key":"QNX217ff79"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:55:26.307285Z","iopub.status.busy":"2024-09-05T14:55:26.307096Z","iopub.status.idle":"2024-09-05T14:55:26.754602Z","shell.execute_reply":"2024-09-05T14:55:26.754001Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(\n    comp.getParameter(\"DBZH\").getData(),\n    title=\"Default composite: DBZH 1000 m Pseudo-CAPPI, nearest radar\",\n)","key":"nfg7kYkl97"},{"type":"output","id":"lumgn2Sbo6Q2NDCCZ1N6Y","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"14a1907a7fc7bbc7097bf4cad6bfe855","path":"/erad2024/_preview/104/build/14a1907a7fc7bbc7097bf4cad6bfe855.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"Em6hhGdF24"}],"key":"Q8F9ciBxJ3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Maximum reflectivity, lowest pixel, add QC chain","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZHDWhKGdJB"}],"identifier":"maximum-reflectivity-lowest-pixel-add-qc-chain","label":"Maximum reflectivity, lowest pixel, add QC chain","html_id":"maximum-reflectivity-lowest-pixel-add-qc-chain","implicit":true,"key":"vYkRylNGbn"}],"key":"U4sGLI0ZWb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:55:26.758283Z","iopub.status.busy":"2024-09-05T14:55:26.757858Z","iopub.status.idle":"2024-09-05T14:55:49.085572Z","shell.execute_reply":"2024-09-05T14:55:49.084782Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.product = _rave.Rave_ProductType_MAX\ngenerator.selection_method = _pycomposite.SelectionMethod_HEIGHT\ngenerator.detectors = [\n    \"ropo\",\n    \"beamb\",\n    \"radvol-att\",\n    \"radvol-broad\",\n    \"rave-overshooting\",\n    \"qi-total\",\n]\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_max.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"Rsqpc5r4yi"},{"type":"output","id":"79v-QX5fhACLEz5fX0HL2","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 22.12 seconds\n"}],"key":"hrJQtcYvGl"}],"key":"Liafk3fuac"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:55:49.088006Z","iopub.status.busy":"2024-09-05T14:55:49.087696Z","iopub.status.idle":"2024-09-05T14:55:49.501284Z","shell.execute_reply":"2024-09-05T14:55:49.500717Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, lowest pixel\")","key":"nELJMkcUUO"},{"type":"output","id":"KN_8PoAyXxd-47fiEDFrP","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"337297c6f237b9f37d6eac2a18b7518c","path":"/erad2024/_preview/104/build/337297c6f237b9f37d6eac2a18b7518c.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"zVzw9yEaAb"}],"key":"mbAbARfYqI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot correspondong total quality index","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"No9G9H64Le"}],"identifier":"plot-correspondong-total-quality-index","label":"Plot correspondong total quality index","html_id":"plot-correspondong-total-quality-index","implicit":true,"key":"gRQ9pMRwx9"}],"key":"fwTOvyfuhf"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:55:49.503692Z","iopub.status.busy":"2024-09-05T14:55:49.503503Z","iopub.status.idle":"2024-09-05T14:55:49.952943Z","shell.execute_reply":"2024-09-05T14:55:49.952291Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh = comp.getParameter(\"DBZH\")\nqitot = dbzh.getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\nplot(qitot.getData(), \"binary\", \"Total quality index\")","key":"sIuJJwHequ"},{"type":"output","id":"JNo3Yt9NS0znKEdVNOVtw","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1bd4eff246c7dc12b049f2a464a98ea6","path":"/erad2024/_preview/104/build/1bd4eff246c7dc12b049f2a464a98ea6.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"iQHET9mv48"}],"key":"AYsGnLAORr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now use “total quality” as the compositing criterion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XZaHOw3de6"}],"identifier":"now-use-total-quality-as-the-compositing-criterion","label":"Now use “total quality” as the compositing criterion","html_id":"now-use-total-quality-as-the-compositing-criterion","implicit":true,"key":"uYCK9mgYon"}],"key":"IEGnbpnxVR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:55:49.957399Z","iopub.status.busy":"2024-09-05T14:55:49.956892Z","iopub.status.idle":"2024-09-05T14:56:13.878965Z","shell.execute_reply":"2024-09-05T14:56:13.878239Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.qitotal_field = \"pl.imgw.quality.qi_total\"\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_qitotal.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"V376VNKMdD"},{"type":"output","id":"WJbfW-iYDBq9_q4h_cSSd","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 23.72 seconds\n"}],"key":"u2eo5Oyqvw"}],"key":"eeYR88BnAK"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:56:13.881252Z","iopub.status.busy":"2024-09-05T14:56:13.881064Z","iopub.status.idle":"2024-09-05T14:56:14.302821Z","shell.execute_reply":"2024-09-05T14:56:14.302208Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, quality-based\")","key":"m0zSg3x2hn"},{"type":"output","id":"ReNoTfq57N4NWRyzbiJzH","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"06dd83d593a2787f307c365a4273ded6","path":"/erad2024/_preview/104/build/06dd83d593a2787f307c365a4273ded6.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"uE5JPWoODE"}],"key":"J6Vou3bDGl"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T14:56:14.306402Z","iopub.status.busy":"2024-09-05T14:56:14.305992Z","iopub.status.idle":"2024-09-05T14:56:14.731436Z","shell.execute_reply":"2024-09-05T14:56:14.730655Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(\n    comp.getParameter(\"DBZH\")\n    .getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\n    .getData(),\n    \"binary\",\n    \"Total quality index\",\n)","key":"sCRHllBlTM"},{"type":"output","id":"AXrsbveFEbIQZy0AtexZv","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"739cee832fa322d930662a38cd1e9af2","path":"/erad2024/_preview/104/build/739cee832fa322d930662a38cd1e9af2.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"ZoS1Fs5GQd"}],"key":"e8StMQ77vN"}],"key":"k2QODSgUQl"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Parallel processing","url":"/baltrad-parallel-processing","group":"BALTRAD"},"next":{"title":"Rain Rate retrieval with Py-ART","url":"/baltrad-pyart-rain-rate-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}