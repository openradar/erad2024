{"kind":"Notebook","sha256":"81c8f2d274cfff26a8173e4f567ed971aabfbb39449af5d0f1849cd2e5eca6e2","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/104/build/0_baltrad_pyart_rain-1c15b6d0bc47b4ba2a691f612e008428.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RvNLuh654x"}],"key":"JfrL1PKZJq"}],"key":"gPyXyxF9VS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EH7Aam5vU7"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"bIO9l4VNWO"}],"key":"n7rOTw2T9X"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:54.161407Z","iopub.status.busy":"2024-09-05T06:23:54.161022Z","iopub.status.idle":"2024-09-05T06:23:54.704027Z","shell.execute_reply":"2024-09-05T06:23:54.703464Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"G0hCydkm0d"},{"type":"output","id":"Jqj62JvMbjli9Mg6fZ-3_","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"sByqESjQPd"}],"key":"jVcUe1DYch"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:54.706491Z","iopub.status.busy":"2024-09-05T06:23:54.706296Z","iopub.status.idle":"2024-09-05T06:23:55.118533Z","shell.execute_reply":"2024-09-05T06:23:55.118057Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"XtRvYy68ff"},{"type":"output","id":"hGL7AwBmDzALEUzblpEtN","data":[],"key":"bRH6mdPzCJ"}],"key":"rf2o0FIvNh"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A8DombeB4n"}],"key":"iY9qmEqdE6"}],"key":"siuVVjtZm6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:55.120895Z","iopub.status.busy":"2024-09-05T06:23:55.120661Z","iopub.status.idle":"2024-09-05T06:23:56.635413Z","shell.execute_reply":"2024-09-05T06:23:56.634802Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"zlHPJr0zUF"},{"type":"output","id":"rXpLgvQyGy7sMZRUrThUR","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"mt8NpBt9ap"}],"key":"Tr9Kh6W1Yq"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YxBvpwSppn"}],"key":"YrS6Yk2Mda"}],"key":"R9xqsarKP8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"e3e5U4CQpi"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"IBljMM2aZY"}],"key":"nalKeOtUPa"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:56.638211Z","iopub.status.busy":"2024-09-05T06:23:56.637790Z","iopub.status.idle":"2024-09-05T06:23:56.678012Z","shell.execute_reply":"2024-09-05T06:23:56.677366Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"EhA2XdrVB0"},{"type":"output","id":"V6Pg_X2ccIomV1Gga-b8L","data":[],"key":"SWX31mGFUs"}],"key":"pc1lLWHNXW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SnF0rFQdbn"}],"key":"BLmswOo17L"}],"key":"x2WcI12UsU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:56.681110Z","iopub.status.busy":"2024-09-05T06:23:56.680759Z","iopub.status.idle":"2024-09-05T06:23:56.723709Z","shell.execute_reply":"2024-09-05T06:23:56.723169Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"ImjkQYMXDC"},{"type":"output","id":"ZIL7vArDmdxzHDbxQqet7","data":[],"key":"nx4rYzWDZY"}],"key":"LWMVYG2XbO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eBok0v9Gsf"}],"key":"cObj25AfPP"}],"key":"WMxlkVwd0Z"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:56.726013Z","iopub.status.busy":"2024-09-05T06:23:56.725834Z","iopub.status.idle":"2024-09-05T06:23:56.728432Z","shell.execute_reply":"2024-09-05T06:23:56.728005Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"efkz28E16J"},{"type":"output","id":"NKwsb4G_MyVHFm0Nm_Kz3","data":[],"key":"CHDA1i6tOt"}],"key":"zqNgEG54lQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:56.730163Z","iopub.status.busy":"2024-09-05T06:23:56.729997Z","iopub.status.idle":"2024-09-05T06:23:57.222177Z","shell.execute_reply":"2024-09-05T06:23:57.221754Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"fUpmwvXGgv"},{"type":"output","id":"75x3rvNW2Y8YmHCnyDAO2","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/_preview/104/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"WTSKKbMt7b"}],"key":"IntqwDmPWE"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:57.224318Z","iopub.status.busy":"2024-09-05T06:23:57.223950Z","iopub.status.idle":"2024-09-05T06:23:57.690378Z","shell.execute_reply":"2024-09-05T06:23:57.689780Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"c5DRme4CAc"},{"type":"output","id":"p3J16qoxmu-1YfVMZOjHd","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/_preview/104/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"vOknMXmvGo"}],"key":"bvkZ1hbAGe"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:57.693830Z","iopub.status.busy":"2024-09-05T06:23:57.693578Z","iopub.status.idle":"2024-09-05T06:23:58.138431Z","shell.execute_reply":"2024-09-05T06:23:58.137747Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"oideuWSqbC"},{"type":"output","id":"xoKG6_bm55EWz9344LRAa","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/_preview/104/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"dRcmqpnJdF"}],"key":"wwSjhqLgyG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:58.141010Z","iopub.status.busy":"2024-09-05T06:23:58.140757Z","iopub.status.idle":"2024-09-05T06:23:58.616035Z","shell.execute_reply":"2024-09-05T06:23:58.615448Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"NaLhQUh1LG"},{"type":"output","id":"-58yock1pSu61UyrLKBXE","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/_preview/104/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"wd3oIfYVm2"}],"key":"eHHDD3bWoU"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cRoHv9QchE"}],"key":"hTkitvThQ4"}],"key":"LhOMtqE241"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:58.619459Z","iopub.status.busy":"2024-09-05T06:23:58.619269Z","iopub.status.idle":"2024-09-05T06:23:58.623444Z","shell.execute_reply":"2024-09-05T06:23:58.622968Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"xnsRtR1JiN"},{"type":"output","id":"ORix4PLvDiKlzjB3TvYlu","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"Xdcngq4hMe"}],"key":"rOlW8PTwSN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:58.625231Z","iopub.status.busy":"2024-09-05T06:23:58.625061Z","iopub.status.idle":"2024-09-05T06:23:58.820562Z","shell.execute_reply":"2024-09-05T06:23:58.820104Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"U9vm1VZXcZ"},{"type":"output","id":"vJ44VGFMzp0VcAdwlTRLX","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"sS6qCSsRqQ"}],"key":"Nl1fHlWMbv"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:58.822936Z","iopub.status.busy":"2024-09-05T06:23:58.822564Z","iopub.status.idle":"2024-09-05T06:23:58.827970Z","shell.execute_reply":"2024-09-05T06:23:58.827498Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"bqldAwROAU"},{"type":"output","id":"8wWzYjB9_XgZlB1lzoTaj","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"X8ToHsBTHm"}],"key":"AQRucZvH9p"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:58.830109Z","iopub.status.busy":"2024-09-05T06:23:58.829713Z","iopub.status.idle":"2024-09-05T06:23:58.832458Z","shell.execute_reply":"2024-09-05T06:23:58.831918Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"jO9QCrnoYq"},{"type":"output","id":"431MevqJqjylwWhEF5BWE","data":[],"key":"BO3zdXxD58"}],"key":"SjLlScQX8d"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hYM9aF98es"}],"key":"jsvw7uTVGp"}],"key":"Cd4Xc8SxPi"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:58.834814Z","iopub.status.busy":"2024-09-05T06:23:58.834648Z","iopub.status.idle":"2024-09-05T06:23:59.289982Z","shell.execute_reply":"2024-09-05T06:23:59.289330Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"ip6QxbVLZg"},{"type":"output","id":"3MHBMOZKCylvXJPSmc7-e","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/_preview/104/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"HL2IRy7dKS"}],"key":"vw8RNPNtda"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:59.292783Z","iopub.status.busy":"2024-09-05T06:23:59.292296Z","iopub.status.idle":"2024-09-05T06:23:59.741705Z","shell.execute_reply":"2024-09-05T06:23:59.741073Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"anfXTor1me"},{"type":"output","id":"4R1i9wJI44gBl-_nXGr4i","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/_preview/104/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"q2LEviS2Oa"}],"key":"zT7pL2kFMq"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"OTQVDv4GlX"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"BlS8jbxSOW"}],"key":"Pp4obSX7WQ"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"FydqscJW44"}],"key":"cBwwyaSAJ9"}],"key":"xTJG2MNqXp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:59.744248Z","iopub.status.busy":"2024-09-05T06:23:59.744036Z","iopub.status.idle":"2024-09-05T06:23:59.755404Z","shell.execute_reply":"2024-09-05T06:23:59.754817Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"ltuWGDoPH0"},{"type":"output","id":"hyOcFSZ7yIaLBoNqXQ_Cl","data":[],"key":"UHE1hv4l5P"}],"key":"Tg52PvsfhX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:59.757727Z","iopub.status.busy":"2024-09-05T06:23:59.757523Z","iopub.status.idle":"2024-09-05T06:23:59.760526Z","shell.execute_reply":"2024-09-05T06:23:59.759980Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"DvBBAoBUuq"},{"type":"output","id":"nhhPuB5re6uYN1_HpFJyk","data":[],"key":"rs6lj4QCfF"}],"key":"a2c9K0aS2t"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oZvfTngGp7"}],"key":"LD1A1Q1hX5"}],"key":"AJF2jzCcwb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:23:59.762889Z","iopub.status.busy":"2024-09-05T06:23:59.762463Z","iopub.status.idle":"2024-09-05T06:24:00.222289Z","shell.execute_reply":"2024-09-05T06:24:00.221729Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"dN5nZq5i8h"},{"type":"output","id":"Nqta8DvrerYxa8oNAG5UV","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/_preview/104/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"B0jstQxTjD"}],"key":"OG4EhjKMEZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s8qqOspScJ"}],"key":"aFtLKMnXhb"}],"key":"JHgsYtSNFq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:24:00.224668Z","iopub.status.busy":"2024-09-05T06:24:00.224259Z","iopub.status.idle":"2024-09-05T06:24:00.239725Z","shell.execute_reply":"2024-09-05T06:24:00.239237Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"PlaFvCa5ud"},{"type":"output","id":"FFjQKAw4aWfP3eQPbaxJE","data":[],"key":"konGqT9b4O"}],"key":"hpJNBJvtQD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T06:24:00.242089Z","iopub.status.busy":"2024-09-05T06:24:00.241726Z","iopub.status.idle":"2024-09-05T06:24:01.047563Z","shell.execute_reply":"2024-09-05T06:24:01.047070Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"M39Bs57euj"},{"type":"output","id":"tJu5OvVM9--r2b5qZJpR4","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"ZzqlADpaet"}],"key":"pviWt5pKJx"}],"key":"aPDF0wO9RL"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}