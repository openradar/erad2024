{"kind":"Notebook","sha256":"5901f24428a315683f51a8a4241c37e254f05b2d386336bc065492f175ff52ed","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/97/build/0_baltrad_pyart_rain-f7cb96e3ed78b2b5d804885d49d7f2ba.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"njO5hsUKVw"}],"key":"tSm0u5x5mG"}],"key":"l6vpUbMqhm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DPp8J4fyEF"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"AuqtFtjmsH"}],"key":"Qd7v4AXLQd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:13.370503Z","iopub.status.busy":"2024-08-30T14:00:13.370094Z","iopub.status.idle":"2024-08-30T14:00:14.134911Z","shell.execute_reply":"2024-08-30T14:00:14.134296Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"tDqhPux33M"},{"type":"output","id":"SlRYZ3gFYG9gn7mf9hfvm","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"fU5yiEmHxh"}],"key":"z6uw5RdzSv"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:14.137335Z","iopub.status.busy":"2024-08-30T14:00:14.137152Z","iopub.status.idle":"2024-08-30T14:00:14.461541Z","shell.execute_reply":"2024-08-30T14:00:14.460978Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"rVjRAjZ30V"},{"type":"output","id":"X_VA29mUprAIu9lwmfgg7","data":[],"key":"hInGtuqieD"}],"key":"tY5pryf0bu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"igOhtAaNQr"}],"key":"TVUcDScaQW"}],"key":"LTOVr4hfu2"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:14.464275Z","iopub.status.busy":"2024-08-30T14:00:14.463742Z","iopub.status.idle":"2024-08-30T14:00:15.842101Z","shell.execute_reply":"2024-08-30T14:00:15.841528Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"I00juvNWZP"},{"type":"output","id":"asKLXHL11frRihEg8nzau","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"zByChJHDhS"}],"key":"CrGMFLTroM"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S5plWf1mU1"}],"key":"g5LD8SK0Dn"}],"key":"upjddYJsVE"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YECKueW8WZ"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"V5ViNsfytW"}],"key":"dKSebjpQDz"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:15.844768Z","iopub.status.busy":"2024-08-30T14:00:15.844397Z","iopub.status.idle":"2024-08-30T14:00:15.878809Z","shell.execute_reply":"2024-08-30T14:00:15.878263Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"cs3qmxXmPn"},{"type":"output","id":"8mPyAd_EG6t_G9L_DgeTY","data":[],"key":"geJ2i52O56"}],"key":"eaYx2JFAnZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"duKUaJ7JYr"}],"key":"uPX62Er8yO"}],"key":"S5rVsBZKDj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:15.880895Z","iopub.status.busy":"2024-08-30T14:00:15.880721Z","iopub.status.idle":"2024-08-30T14:00:15.923953Z","shell.execute_reply":"2024-08-30T14:00:15.923351Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"sS3iJqvBFy"},{"type":"output","id":"4PvlWjATEQlhJw9-wkfr_","data":[],"key":"KNWDSmW9Ld"}],"key":"kBfCCGaf9n"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TegS2iciAU"}],"key":"NjEBfyHTil"}],"key":"TN1hzuwl1d"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:15.926587Z","iopub.status.busy":"2024-08-30T14:00:15.926385Z","iopub.status.idle":"2024-08-30T14:00:15.929186Z","shell.execute_reply":"2024-08-30T14:00:15.928636Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"AUT8Q9zPF6"},{"type":"output","id":"GMsDzYXtq6c4dK1ScCJXO","data":[],"key":"NdGCQkFrmi"}],"key":"iDXotFiO8g"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:15.931152Z","iopub.status.busy":"2024-08-30T14:00:15.930978Z","iopub.status.idle":"2024-08-30T14:00:16.403404Z","shell.execute_reply":"2024-08-30T14:00:16.402815Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"jy780PtXKI"},{"type":"output","id":"ttNDXd3ylZxIEziSE00Ei","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/_preview/97/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"DekmRmkY1y"}],"key":"UjZIeHJjJM"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:16.405721Z","iopub.status.busy":"2024-08-30T14:00:16.405330Z","iopub.status.idle":"2024-08-30T14:00:16.857379Z","shell.execute_reply":"2024-08-30T14:00:16.856814Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"iBeJRl0lNj"},{"type":"output","id":"e2f6WWKkwfjMLgnXigYVv","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/_preview/97/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"F0FPK8zOcw"}],"key":"ZXtiEmoRfC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:16.859639Z","iopub.status.busy":"2024-08-30T14:00:16.859255Z","iopub.status.idle":"2024-08-30T14:00:17.309420Z","shell.execute_reply":"2024-08-30T14:00:17.308851Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"n7ywo96vM3"},{"type":"output","id":"DIQGCEK8iCpJ2to2Caxtf","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/_preview/97/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"OVGutLdTfR"}],"key":"p0Uj5WpA0t"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:17.311620Z","iopub.status.busy":"2024-08-30T14:00:17.311452Z","iopub.status.idle":"2024-08-30T14:00:17.761390Z","shell.execute_reply":"2024-08-30T14:00:17.760705Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"jGmkOksPG5"},{"type":"output","id":"JoGUAK6-NyvKEmQObJ3os","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/_preview/97/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"UXfpfUruEi"}],"key":"CRLQEptDB4"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CrCF0V82se"}],"key":"jZUhu8o9tz"}],"key":"AuOsn98vgA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:17.764088Z","iopub.status.busy":"2024-08-30T14:00:17.763915Z","iopub.status.idle":"2024-08-30T14:00:17.768076Z","shell.execute_reply":"2024-08-30T14:00:17.767573Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"fUN1UJHR2k"},{"type":"output","id":"V2XPTXqpRx1gDFCotI7xx","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"zg4qGSUhfw"}],"key":"URv18HvZua"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:17.770325Z","iopub.status.busy":"2024-08-30T14:00:17.770163Z","iopub.status.idle":"2024-08-30T14:00:17.953344Z","shell.execute_reply":"2024-08-30T14:00:17.952699Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"MumzHM1H2f"},{"type":"output","id":"G5WMDdV_VNUkhe5Av4PW8","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"NkzsgdJIVm"}],"key":"tzQ4EPd4l0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:17.955295Z","iopub.status.busy":"2024-08-30T14:00:17.955124Z","iopub.status.idle":"2024-08-30T14:00:17.958979Z","shell.execute_reply":"2024-08-30T14:00:17.958481Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"yVYJJj5jfs"},{"type":"output","id":"AoDJKnKzY9vuxEk6v_B1H","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"Ou5UyuJf0s"}],"key":"phCZ4Cxa5W"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:17.961074Z","iopub.status.busy":"2024-08-30T14:00:17.960883Z","iopub.status.idle":"2024-08-30T14:00:17.963509Z","shell.execute_reply":"2024-08-30T14:00:17.963018Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"CmINerJneQ"},{"type":"output","id":"J7NpkpTc76IllfD4g5y7b","data":[],"key":"l67sgMadha"}],"key":"zp9LPfaOOo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I2i6l34MOH"}],"key":"DmnFdUmiOa"}],"key":"nZUurh4Ncv"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:17.965718Z","iopub.status.busy":"2024-08-30T14:00:17.965536Z","iopub.status.idle":"2024-08-30T14:00:18.402764Z","shell.execute_reply":"2024-08-30T14:00:18.402217Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"dxFOX1YmtJ"},{"type":"output","id":"h_UAiAxg7Z-LcNoJ3AxnR","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/_preview/97/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"TBYCJcNhIi"}],"key":"Nqx4MnczVJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:18.405125Z","iopub.status.busy":"2024-08-30T14:00:18.404949Z","iopub.status.idle":"2024-08-30T14:00:18.859364Z","shell.execute_reply":"2024-08-30T14:00:18.858827Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"tYCfaDWL2M"},{"type":"output","id":"Z2e97CHFJ6JhZkZfOX-HB","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/_preview/97/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"elKsE8eAj3"}],"key":"KvbVAHQdHh"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"ZJbo55kwe5"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"IhSFRQ5t7d"}],"key":"FYOE6B0g4y"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"EGcPngfimI"}],"key":"drRxI1kZJi"}],"key":"dEh2dvWuJw"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:18.861483Z","iopub.status.busy":"2024-08-30T14:00:18.861318Z","iopub.status.idle":"2024-08-30T14:00:18.871688Z","shell.execute_reply":"2024-08-30T14:00:18.871174Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"r8tVCq7pHi"},{"type":"output","id":"-bWsWNr-KPlKEnuEGfAQ-","data":[],"key":"kyQWte0GM6"}],"key":"VKi2KjfHFr"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:18.873539Z","iopub.status.busy":"2024-08-30T14:00:18.873376Z","iopub.status.idle":"2024-08-30T14:00:18.875940Z","shell.execute_reply":"2024-08-30T14:00:18.875449Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"OD8HuAcTVT"},{"type":"output","id":"QLHcfJ9lf-YotBz-bICEd","data":[],"key":"sJM1wbAjaC"}],"key":"Ynsbi7sqrl"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UI3tuMqfzN"}],"key":"DhAepPT8s5"}],"key":"QqQMNQqz0P"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:18.877786Z","iopub.status.busy":"2024-08-30T14:00:18.877633Z","iopub.status.idle":"2024-08-30T14:00:19.300036Z","shell.execute_reply":"2024-08-30T14:00:19.299497Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"llgsf0E2Ns"},{"type":"output","id":"SRkxW9TayADU-YgtLu6hM","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/_preview/97/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"hw1OK1rEKr"}],"key":"CFUh9TPIbZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ee3WsIRDad"}],"key":"D4oRmCYk9J"}],"key":"x5nXTZoIL1"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:19.302669Z","iopub.status.busy":"2024-08-30T14:00:19.302314Z","iopub.status.idle":"2024-08-30T14:00:19.316394Z","shell.execute_reply":"2024-08-30T14:00:19.315881Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"ONs7MHMsp3"},{"type":"output","id":"Km70LWBdyQkhzxUUo_21T","data":[],"key":"b7IK2Vafhf"}],"key":"mcjiIuYlqm"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-30T14:00:19.318485Z","iopub.status.busy":"2024-08-30T14:00:19.318313Z","iopub.status.idle":"2024-08-30T14:00:20.112477Z","shell.execute_reply":"2024-08-30T14:00:20.111955Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"ZRMd7lLkJg"},{"type":"output","id":"GHwaBMmeRmQxAfbie1sT9","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"N273leSAVx"}],"key":"sKX2RYlm0h"}],"key":"KhDF77IWGF"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}