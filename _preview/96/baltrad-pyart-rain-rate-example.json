{"kind":"Notebook","sha256":"06696e45c01f3b39550c4dcd16e5d10776bbf366951a0349a2a3c1daf5cac4df","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/96/build/0_baltrad_pyart_rain-d7230fbe3703676fa6d828ac03d3fd62.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sBqJRGnaI8"}],"key":"bVnRrSJ3w2"}],"key":"c7gW9De5GD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aoxHBIJEiY"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"tHznpcDYba"}],"key":"b9B4IjAUrg"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:44.252172Z","iopub.status.busy":"2024-08-27T19:44:44.251469Z","iopub.status.idle":"2024-08-27T19:44:45.392570Z","shell.execute_reply":"2024-08-27T19:44:45.391780Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"zghMkwcfhO"},{"type":"output","id":"tCcqCrL8VShycoS1ql7U0","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"jGmbOvxx6X"}],"key":"JncEB8i3wN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:45.395431Z","iopub.status.busy":"2024-08-27T19:44:45.395001Z","iopub.status.idle":"2024-08-27T19:44:45.774712Z","shell.execute_reply":"2024-08-27T19:44:45.774120Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"wjZS25Rcpk"},{"type":"output","id":"eieuxypfrIWhP9Ipvqsz0","data":[],"key":"aNZiSWlFt3"}],"key":"u1dP21p2qC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XOgyBOANXd"}],"key":"t612QHnnSO"}],"key":"yFLDr0qx9u"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:45.777179Z","iopub.status.busy":"2024-08-27T19:44:45.776914Z","iopub.status.idle":"2024-08-27T19:44:46.762723Z","shell.execute_reply":"2024-08-27T19:44:46.762182Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"dRFTAgAUh9"},{"type":"output","id":"BDNx86KxRcqTjFLSU0wEf","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"M9aVAyAd8b"}],"key":"JBtrENEwRi"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"seYd0PmlNH"}],"key":"r5rhfssHgr"}],"key":"Ri5TnLi8Pe"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PVChGvLY8R"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"qfmTaiM8nx"}],"key":"pDmCSQvBok"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:46.765381Z","iopub.status.busy":"2024-08-27T19:44:46.764794Z","iopub.status.idle":"2024-08-27T19:44:46.808447Z","shell.execute_reply":"2024-08-27T19:44:46.807778Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"GYT9LH9dLs"},{"type":"output","id":"nbMzIVSFnTyEC2gzxlms5","data":[],"key":"bRpgZJpCZc"}],"key":"yII5Gk2OFQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cEAO58gNUy"}],"key":"KdScVWMSGB"}],"key":"GFNiJCtyOn"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:46.810569Z","iopub.status.busy":"2024-08-27T19:44:46.810368Z","iopub.status.idle":"2024-08-27T19:44:46.858675Z","shell.execute_reply":"2024-08-27T19:44:46.858088Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"QVNlSXE3n7"},{"type":"output","id":"2RYXave4wgdgbgkcpw-Gv","data":[],"key":"qUd3tp6lwz"}],"key":"aUSNfsaO6P"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tBIYg0tyTq"}],"key":"VmhqBGhBej"}],"key":"k0V7UEZpLQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:46.861701Z","iopub.status.busy":"2024-08-27T19:44:46.861239Z","iopub.status.idle":"2024-08-27T19:44:46.864446Z","shell.execute_reply":"2024-08-27T19:44:46.863968Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"vk36LygAlV"},{"type":"output","id":"ikxJAOJ0wuX8k50bGP6Qz","data":[],"key":"MuGdkqVMN5"}],"key":"oRm7pszSAn"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:46.866390Z","iopub.status.busy":"2024-08-27T19:44:46.866201Z","iopub.status.idle":"2024-08-27T19:44:47.333551Z","shell.execute_reply":"2024-08-27T19:44:47.332820Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"jtC86Ypzvm"},{"type":"output","id":"8df6taZykFyYIZx1V4JC0","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/_preview/96/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"gkCJfEiT18"}],"key":"FFyHKe32YR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:47.336248Z","iopub.status.busy":"2024-08-27T19:44:47.335743Z","iopub.status.idle":"2024-08-27T19:44:47.806705Z","shell.execute_reply":"2024-08-27T19:44:47.806008Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"Jfpf89x4RR"},{"type":"output","id":"Y0akoT1sZEP3kiQeX_x19","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/_preview/96/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"VVYFwULp7u"}],"key":"gbfTg3oRFE"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:47.809403Z","iopub.status.busy":"2024-08-27T19:44:47.808980Z","iopub.status.idle":"2024-08-27T19:44:48.270121Z","shell.execute_reply":"2024-08-27T19:44:48.269527Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"Csqjr56ZUP"},{"type":"output","id":"SfQbryA17xOhD_Yrax8fQ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/_preview/96/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"QpFRb9yUsM"}],"key":"riG6yS8LXU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:48.272182Z","iopub.status.busy":"2024-08-27T19:44:48.272012Z","iopub.status.idle":"2024-08-27T19:44:48.723628Z","shell.execute_reply":"2024-08-27T19:44:48.723109Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"ck9Oj21d1d"},{"type":"output","id":"tdXJ4TnEmhlNpxk5eHpAa","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/_preview/96/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"Rqz9j2cg52"}],"key":"lWOqQcJeEn"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hxCPFWsFtD"}],"key":"ybEf846l06"}],"key":"rYlu9229el"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:48.726464Z","iopub.status.busy":"2024-08-27T19:44:48.726246Z","iopub.status.idle":"2024-08-27T19:44:48.730553Z","shell.execute_reply":"2024-08-27T19:44:48.730072Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"ZYp0zcuOEs"},{"type":"output","id":"_NOS1o_m7iJckOEKquNpf","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"gNWmQ9ftdM"}],"key":"cwdIwNSWcM"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:48.732491Z","iopub.status.busy":"2024-08-27T19:44:48.732147Z","iopub.status.idle":"2024-08-27T19:44:48.927930Z","shell.execute_reply":"2024-08-27T19:44:48.927316Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"n5TT3McYM9"},{"type":"output","id":"AXSys_uok14bUZHRYnZAy","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"rjI0iEigrk"}],"key":"mkwOgg4369"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:48.930084Z","iopub.status.busy":"2024-08-27T19:44:48.929716Z","iopub.status.idle":"2024-08-27T19:44:48.934521Z","shell.execute_reply":"2024-08-27T19:44:48.933948Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"vAWj89j1lu"},{"type":"output","id":"a7bXheqCNKrRFI016Q0gf","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"UBrEFgFShT"}],"key":"KLXOYRSvrH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:48.936427Z","iopub.status.busy":"2024-08-27T19:44:48.936259Z","iopub.status.idle":"2024-08-27T19:44:48.938910Z","shell.execute_reply":"2024-08-27T19:44:48.938440Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"DQX1Loszxb"},{"type":"output","id":"IlxvVGu9cmVNXbntQEDrC","data":[],"key":"ph9YwRlUZl"}],"key":"U3XLuB97SB"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Sve5iwHuyc"}],"key":"K74K4yoVq4"}],"key":"DqbgAskcWH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:48.940970Z","iopub.status.busy":"2024-08-27T19:44:48.940496Z","iopub.status.idle":"2024-08-27T19:44:49.462494Z","shell.execute_reply":"2024-08-27T19:44:49.461916Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"tadVNx1xoX"},{"type":"output","id":"Gf8h8KgtGEnWn6oC2YxxN","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/_preview/96/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"t8wtoq4dzR"}],"key":"cAN2iActqq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:49.464473Z","iopub.status.busy":"2024-08-27T19:44:49.464303Z","iopub.status.idle":"2024-08-27T19:44:49.913823Z","shell.execute_reply":"2024-08-27T19:44:49.913338Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"ZwTqRWEw06"},{"type":"output","id":"TcQacfzYIx_laf0lutF04","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/_preview/96/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"eI8eoCugKe"}],"key":"vuXaLuMhRw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"VDyTXjuhCL"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"ov9PbWsdvv"}],"key":"pzjGjsbIOm"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"WU1ZQnn8en"}],"key":"KkjcNKZD4c"}],"key":"I4uZRtAfvJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:49.915778Z","iopub.status.busy":"2024-08-27T19:44:49.915607Z","iopub.status.idle":"2024-08-27T19:44:49.929144Z","shell.execute_reply":"2024-08-27T19:44:49.928628Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"c7Vrz8QkeA"},{"type":"output","id":"dZGYUGTJERe7pf7g5BwRB","data":[],"key":"oTcCNC1Jcj"}],"key":"HBdx3YjBvt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:49.931376Z","iopub.status.busy":"2024-08-27T19:44:49.931189Z","iopub.status.idle":"2024-08-27T19:44:49.933873Z","shell.execute_reply":"2024-08-27T19:44:49.933374Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"fqbGyUosdl"},{"type":"output","id":"0KD_TIA5uyft71aH0l4m7","data":[],"key":"jNRm76NZgf"}],"key":"Sou99kdVRI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hRKrl7MxCw"}],"key":"qVit6Nn8mt"}],"key":"glEGUAV8dh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:49.935948Z","iopub.status.busy":"2024-08-27T19:44:49.935770Z","iopub.status.idle":"2024-08-27T19:44:50.375165Z","shell.execute_reply":"2024-08-27T19:44:50.374614Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"J1lCuwuMZA"},{"type":"output","id":"OzuJbLrnzTfPe1QdsB-s7","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/_preview/96/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"g16S8MtQ6Z"}],"key":"k4RXwKjfmW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NV7vrPS3B2"}],"key":"oLhhm7nKA6"}],"key":"xfNhVLVUXp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:50.377374Z","iopub.status.busy":"2024-08-27T19:44:50.377016Z","iopub.status.idle":"2024-08-27T19:44:50.391229Z","shell.execute_reply":"2024-08-27T19:44:50.390762Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"Hf2p01jpUZ"},{"type":"output","id":"YXG9yfZegwtoEzp7dirBN","data":[],"key":"TxlX4rAR8M"}],"key":"oZTiEGRTbC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-27T19:44:50.393184Z","iopub.status.busy":"2024-08-27T19:44:50.392838Z","iopub.status.idle":"2024-08-27T19:44:51.202557Z","shell.execute_reply":"2024-08-27T19:44:51.202000Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"juxT6o3WZ0"},{"type":"output","id":"wjL-DbOqFVR6Tf4wMdCAo","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"ex32N83oVJ"}],"key":"FHwB52md4O"}],"key":"oAV4tjcqjy"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}