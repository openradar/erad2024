{"kind":"Notebook","sha256":"d389f63767ee14ed0e167f50dc7a39231c0fe36a4ade23a75cbb404c9a2b36c5","slug":"baltrad2wradlib","location":"/notebooks/baltrad/baltrad2wradlib/baltrad2wradlib.ipynb","dependencies":[],"frontmatter":{"title":"Attenuation correction comparison with wradlib","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"baltrad2wradlib.ipynb","url":"/erad2024/_preview/91/build/baltrad2wradlib-050a88b3af314f78f045b1622feb62c9.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Comparison between BALTRAD and wradlib attenuation correction","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nHpouXtkNX"}],"key":"FS2QulOPP5"}],"key":"vljlhOpzJa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uIefJn0Oc8"}],"identifier":"retrieve-data-from-s3-bucket","label":"Retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"dFidEJdBTs"}],"key":"Jc9QDHxep9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:07.218812Z","iopub.status.busy":"2024-08-26T06:29:07.218581Z","iopub.status.idle":"2024-08-26T06:29:10.071088Z","shell.execute_reply":"2024-08-26T06:29:10.070261Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/baltrad2wradlib/\"\n!mkdir -p data\n!mkdir -p shp\nfiles = [\n    \"data/201405190715_SUR.h5\",\n    \"shp/europe_countries.dbf\",\n    \"shp/europe_countries.prj\",\n    \"shp/europe_countries.sbn\",\n    \"shp/europe_countries.sbx\",\n    \"shp/europe_countries.shp\",\n    \"shp/europe_countries.shx\",\n]\nfor file in files:\n    file0 = os.path.join(path, Path(file).name)\n    if not os.path.exists(file):\n        print(f\"downloading, {file}\")\n        x = urllib.request.urlretrieve(f\"{URL}{file0}\", file)","key":"FpAxHScCrI"},{"type":"output","id":"OYUJJJQ6QZIuYll_hg55V","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/201405190715_SUR.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, shp/europe_countries.dbf\ndownloading, shp/europe_countries.prj\n"},{"name":"stdout","output_type":"stream","text":"downloading, shp/europe_countries.sbn\ndownloading, shp/europe_countries.sbx\n"},{"name":"stdout","output_type":"stream","text":"downloading, shp/europe_countries.shp\n"},{"name":"stdout","output_type":"stream","text":"downloading, shp/europe_countries.shx\n"}],"key":"nss8S31Fc2"}],"key":"dRtzpqlXhQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prepare your environment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WPzRXTBj8Y"}],"identifier":"prepare-your-environment","label":"Prepare your environment","html_id":"prepare-your-environment","implicit":true,"key":"v42YM2LGVi"}],"key":"L9hAEwz28q"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:10.073778Z","iopub.status.busy":"2024-08-26T06:29:10.073524Z","iopub.status.idle":"2024-08-26T06:29:10.526789Z","shell.execute_reply":"2024-08-26T06:29:10.526261Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"AO7wszIyPR"},{"type":"output","id":"2rXe5PyBNi-uT9QwrVTK3","data":[],"key":"ad1OfGcK1V"}],"key":"VOvq3JmSXh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:10.530415Z","iopub.status.busy":"2024-08-26T06:29:10.529533Z","iopub.status.idle":"2024-08-26T06:29:11.708625Z","shell.execute_reply":"2024-08-26T06:29:11.708096Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import gc\n\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mticker\nimport numpy as np\nimport shapefile\nimport wradlib\nimport xradar as xd\nfrom matplotlib.collections import PatchCollection\nfrom matplotlib.patches import Polygon","key":"VA5MyqKylT"},{"type":"output","id":"PtX_Yqjhv-pkJ_dBg3b-Y","data":[],"key":"xZ0xlhREwb"}],"key":"g8wIPBnsk7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Run BALTRAD’s odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gs8xDA4U0X"}],"identifier":"run-baltrads-odc-toolbox","label":"Run BALTRAD’s odc_toolbox","html_id":"run-baltrads-odc-toolbox","implicit":true,"key":"fBp3iTaduq"}],"key":"bgsesqDmef"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, you will process a scan from Suergavere (Estland) by using BALTRAD’s odc_toolbox.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yuOaVcxMWg"}],"key":"m8gKEKMhpI"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"From your VM’s vagrant directory, navigate to the folder ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PjA1qQTrOI"},{"type":"inlineCode","value":"/baltrad2wradlib","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"b8Q805hhGs"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"i8uKO7DGAz"}],"key":"Tj8bCd2o91"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Execute the following command:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DT7aEzNtlM"}],"key":"ryFvZgTb88"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"$ odc_toolbox -i data -o out -q ropo,radvol-att","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xVQrumwEYf"}],"key":"O3wkwuSlUQ"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Check whether a file was created in the folder ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"B5b2YfW6bZ"},{"type":"inlineCode","value":"/out","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"wbZjkJBAJ0"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"jYPFgvPsZD"}],"key":"OzLOc22jII"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"BALTRAD will not create output files if these already exist.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"olR0fx0dwU"}],"key":"GJ0J84pzUF"},{"type":"text","value":" You can check that via ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"eBH2PJxti7"},{"type":"inlineCode","value":"!ls out","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"rj3SM3B1Xq"},{"type":"text","value":".","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"VcbZPMEWnn"}],"key":"dJZxolKiML"}],"key":"wQtLFVXfzv"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:11.711588Z","iopub.status.busy":"2024-08-26T06:29:11.711182Z","iopub.status.idle":"2024-08-26T06:29:12.479635Z","shell.execute_reply":"2024-08-26T06:29:12.478987Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"!odc_toolbox --help","key":"p31h6DWX5X"},{"type":"output","id":"4sq6XS444VJUrgwq9jVi5","data":[{"name":"stdout","output_type":"stream","text":"Usage: odc_toolbox -i <inpath> -o <outpath> -q <algorithm-list> [-p <processes>] [h]\r\n\r\nCommand-line tool for QC-processing polar data for Odyssey\r\n\r\nOptions:\r\n  -h, --help            show this help message and exit\r\n  -i IPATH, --ipath=IPATH\r\n                        Input path containing polar data.\r\n  -o OPATH, --opath=OPATH\r\n                        Output path for writing data.\r\n  -q QC, --qc=QC        Comma-separated list of which QC algorithms to run,\r\n                        e.g. 'ropo,beamb'. No white spaces between these\r\n                        names. For compositing, this executable hard-wires a\r\n                        quality-based composite algorithm where the last QC\r\n                        algorithm in the chain should be qi-total.\r\n  -d, --delete          Deletes input files following their processing.\r\n  -c, --check           Checks for the presence of output files. If an output\r\n                        file already exists, do nothing and move on to the\r\n                        next.\r\n  -p PROCS, --procs=PROCS\r\n                        Number of concurrent worker processes to run. Defaults\r\n                        to the maximum number of logical CPUs supported on\r\n                        your hardware, but can be constrained or raised as you\r\n                        wish. Use off-line for benchmarking.\r\n  -D, --write-pvols     Write quality-controlled PVOLs to output path.\r\n  -a AREAID, --composite-area=AREAID\r\n                        The area identifier (string) of the output composite\r\n                        area to generate.\r\n  -O OFILE, --composite-file=OFILE\r\n                        The file name of the output composite that will be\r\n                        written to --opath. Default=composite.h5\r\n  -v, --verbose         If the different steps should be displayed. I.e.\r\n                        verbose information.\r\n"}],"key":"xQYmEAUEau"}],"key":"mOWFiI65y5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:12.482603Z","iopub.status.busy":"2024-08-26T06:29:12.482332Z","iopub.status.idle":"2024-08-26T06:29:15.289836Z","shell.execute_reply":"2024-08-26T06:29:15.289089Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"!odc_toolbox -i data -o out -q ropo,radvol-att","key":"URqDLHQZwy"},{"type":"output","id":"6g1diM9_oQcRqfp7sTarX","data":[{"name":"stdout","output_type":"stream","text":"Exception ignored in: "},{"name":"stdout","output_type":"stream","text":"Exception ignored in: <function _after_at_fork_child_reinit_locks at 0x7f80b0d7d800>\r\nTraceback (most recent call last):\r\n<function _after_at_fork_child_reinit_locks at 0x7f80b0d7d800>  File \"/srv/conda/envs/notebook/lib/python3.11/logging/__init__.py\", line 265, in _after_at_fork_child_reinit_locks\r\n\r\nTraceback (most recent call last):\r\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/__init__.py\", line 265, in _after_at_fork_child_reinit_locks\r\nException ignored in: <function _after_at_fork_child_reinit_locks at 0x7f80b0d7d800>\r\nTraceback (most recent call last):\r\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/__init__.py\", line 265, in _after_at_fork_child_reinit_locks\r\n    handler._at_fork_reinit()\r\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/__init__.py\", line 920, in _at_fork_reinit\r\n    handler._at_fork_reinit()\r\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/__init__.py\", line 920, in _at_fork_reinit\r\n    self.lock._at_fork_reinit()\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'RLock' object has no attribute '_at_fork_reinit'\r\n    self.lock._at_fork_reinit()\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    handler._at_fork_reinit()AttributeError\r\n: 'RLock' object has no attribute '_at_fork_reinit'\r\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/__init__.py\", line 920, in _at_fork_reinit\r\n    self.lock._at_fork_reinit()\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'RLock' object has no attribute '_at_fork_reinit'\r\nException ignored in: <function _after_at_fork_child_reinit_locks at 0x7f80b0d7d800>\r\nTraceback (most recent call last):\r\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/__init__.py\", line 265, in _after_at_fork_child_reinit_locks\r\n    handler._at_fork_reinit()\r\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/__init__.py\", line 920, in _at_fork_reinit\r\n    self.lock._at_fork_reinit()\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'RLock' object has no attribute '_at_fork_reinit'\r\n"}],"key":"xWy4DcSQz8"}],"key":"ZCjzPdbsMs"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:15.292417Z","iopub.status.busy":"2024-08-26T06:29:15.292150Z","iopub.status.idle":"2024-08-26T06:29:15.815283Z","shell.execute_reply":"2024-08-26T06:29:15.814610Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"!ls out","key":"ivRAI0YCso"},{"type":"output","id":"AYsHEWsH9YpQcidEGuE1P","data":[{"name":"stdout","output_type":"stream","text":"201405190715_SUR.h5\r\n"}],"key":"bWFMlcmnK6"}],"key":"xIvpDHSE8v"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read and inspect data from Suergavere (Estonia) before and after QC with odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CnNcdsJDoQ"}],"identifier":"read-and-inspect-data-from-suergavere-estonia-before-and-after-qc-with-odc-toolbox","label":"Read and inspect data from Suergavere (Estonia) before and after QC with odc_toolbox","html_id":"read-and-inspect-data-from-suergavere-estonia-before-and-after-qc-with-odc-toolbox","implicit":true,"key":"rrek5WS9Oi"}],"key":"AYgsuJITsd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:15.818474Z","iopub.status.busy":"2024-08-26T06:29:15.818277Z","iopub.status.idle":"2024-08-26T06:29:18.035707Z","shell.execute_reply":"2024-08-26T06:29:18.035127Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Before QC\ninp = xd.io.open_odim_datatree(\"data/201405190715_SUR.h5\")\n# After QC\nout = xd.io.open_odim_datatree(\"out/201405190715_SUR.h5\")","key":"gJ9zjc2m1F"},{"type":"output","id":"ZeDmTxDdeHcRpeEtv7ldX","data":[],"key":"KyzqVAoodk"}],"key":"UWTd8NUlZ8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Georeference","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RxkTekZAIU"}],"identifier":"georeference","label":"Georeference","html_id":"georeference","implicit":true,"key":"L52SKfS5jB"}],"key":"iuIlJ6d32t"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:18.038686Z","iopub.status.busy":"2024-08-26T06:29:18.038185Z","iopub.status.idle":"2024-08-26T06:29:18.299940Z","shell.execute_reply":"2024-08-26T06:29:18.299246Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"inp = inp.xradar.georeference()\nout = out.xradar.georeference()","key":"izN55BYKSm"},{"type":"output","id":"dYrjUaqX02Ki4whlscfMs","data":[],"key":"kn8d0wpiKj"}],"key":"lCivMKobmK"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:18.303302Z","iopub.status.busy":"2024-08-26T06:29:18.302943Z","iopub.status.idle":"2024-08-26T06:29:18.366720Z","shell.execute_reply":"2024-08-26T06:29:18.366235Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"swp_inp = inp[\"sweep_0\"].ds.set_coords(\"sweep_mode\")\nswp_out = out[\"sweep_0\"].ds.set_coords(\"sweep_mode\")\ndisplay(swp_inp)\ndisplay(swp_out)","key":"HN0ACSXC4f"},{"type":"output","id":"oqfxwsaP_avdDWy6ChHJ5","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"1a23c89dee69090e6c2c2554f4c713bb","path":"/erad2024/_preview/91/build/1a23c89dee69090e6c2c2554f4c713bb.html"},"text/plain":{"content":"<xarray.Dataset> Size: 26MB\nDimensions:            (azimuth: 360, range: 831)\nCoordinates:\n    elevation          (azimuth) float32 1kB 0.5 0.5 0.5 0.5 ... 0.5 0.5 0.5 0.5\n    time               (azimuth) datetime64[ns] 3kB 2014-05-19T07:15:22.33890...\n  * range              (range) float32 3kB 1.05e+03 1.35e+03 ... 2.5e+05\n    sweep_mode         <U20 80B ...\n    longitude          float64 8B 25.52\n    latitude           float64 8B 58.48\n    altitude           float64 8B 157.0\n  * azimuth            (azimuth) float32 1kB 0.5 1.5 2.5 ... 357.5 358.5 359.5\n    crs_wkt            int64 8B 0\n    x                  (azimuth, range) float32 1MB 9.162 11.78 ... -2.181e+03\n    y                  (azimuth, range) float32 1MB 1.05e+03 ... 2.499e+05\n    z                  (azimuth, range) float32 1MB 167.0 169.0 ... 6.022e+03\nData variables: (12/14)\n    DBZH               (azimuth, range) float64 2MB ...\n    VRAD               (azimuth, range) float64 2MB ...\n    RHOHV              (azimuth, range) float64 2MB ...\n    HCLASS             (azimuth, range) float32 1MB ...\n    PHIDP              (azimuth, range) float64 2MB ...\n    ZDR                (azimuth, range) float64 2MB ...\n    ...                 ...\n    TH                 (azimuth, range) float64 2MB ...\n    WRAD               (azimuth, range) float64 2MB ...\n    sweep_number       int64 8B ...\n    prt_mode           <U7 28B ...\n    follow_mode        <U7 28B ...\n    sweep_fixed_angle  float64 8B ...","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"fb35686b239597ebd79ea6e7ac3d5834","path":"/erad2024/_preview/91/build/fb35686b239597ebd79ea6e7ac3d5834.html"},"text/plain":{"content":"<xarray.Dataset> Size: 31MB\nDimensions:            (azimuth: 360, range: 831)\nCoordinates:\n    elevation          (azimuth) float32 1kB 0.5 0.5 0.5 0.5 ... 0.5 0.5 0.5 0.5\n    time               (azimuth) datetime64[ns] 3kB 2014-05-19T07:15:22.33890...\n  * range              (range) float32 3kB 1.05e+03 1.35e+03 ... 2.5e+05\n    sweep_mode         <U20 80B ...\n    longitude          float64 8B 25.52\n    latitude           float64 8B 58.48\n    altitude           float64 8B 157.0\n  * azimuth            (azimuth) float32 1kB 0.5 1.5 2.5 ... 357.5 358.5 359.5\n    crs_wkt            int64 8B 0\n    x                  (azimuth, range) float32 1MB 9.162 11.78 ... -2.181e+03\n    y                  (azimuth, range) float32 1MB 1.05e+03 ... 2.499e+05\n    z                  (azimuth, range) float32 1MB 167.0 169.0 ... 6.022e+03\nData variables: (12/16)\n    DBZH               (azimuth, range) float64 2MB ...\n    TH                 (azimuth, range) float64 2MB ...\n    RHOHV              (azimuth, range) float64 2MB ...\n    HCLASS             (azimuth, range) float32 1MB ...\n    WRADH              (azimuth, range) float64 2MB ...\n    PHIDP              (azimuth, range) float64 2MB ...\n    ...                 ...\n    quality1           (azimuth, range) float64 2MB ...\n    QIND               (azimuth, range) float64 2MB ...\n    sweep_number       int64 8B ...\n    prt_mode           <U7 28B ...\n    follow_mode        <U7 28B ...\n    sweep_fixed_angle  float64 8B ...","content_type":"text/plain"}}}],"key":"Hlqin6w5qv"}],"key":"Eg3LFoPNU0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a plot we will use for all PPIs in this exercise","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rixh4ok39u"}],"identifier":"design-a-plot-we-will-use-for-all-ppis-in-this-exercise","label":"Design a plot we will use for all PPIs in this exercise","html_id":"design-a-plot-we-will-use-for-all-ppis-in-this-exercise","implicit":true,"key":"Bd7PqSuObp"}],"key":"owUsCylDqm"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:18.368947Z","iopub.status.busy":"2024-08-26T06:29:18.368777Z","iopub.status.idle":"2024-08-26T06:29:18.626807Z","shell.execute_reply":"2024-08-26T06:29:18.626259Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import cartopy.crs as ccrs\nimport wradlib as wrl\nfrom cartopy.io.shapereader import Reader\n\nmap_proj = ccrs.AzimuthalEquidistant(\n    central_latitude=swp_inp.latitude.values, central_longitude=swp_inp.longitude.values\n)\nosr_proj = wrl.georef.create_osr(\n    \"aeqd\", lat_0=swp_inp.latitude.values, lon_0=swp_inp.longitude.values\n)\n\ngeometries = list(Reader(\"shp/europe_countries.shp\").geometries())\n\n\ndef plot_ppi_to_ax(ppi, ax, title=\"\", geometries=None, **kwargs):\n    pm = ppi.wrl.vis.plot(crs=map_proj, ax=ax, **kwargs)\n    ax.set_title(title)\n    if geometries is not None:\n        ax.add_geometries(\n            geometries,\n            ccrs.PlateCarree(),\n            facecolor=\"lightgrey\",\n            edgecolor=\"k\",\n            linewidths=1,\n            zorder=-1,\n        )\n    wrl.vis.plot_ppi_crosshair(\n        site=(ppi.longitude.values, ppi.latitude.values, ppi.altitude.values),\n        ranges=[50000, 100000, 150000, 200000, ppi.range.max().values],\n        angles=[0, 90, 180, 270],\n        line=dict(color=\"white\"),\n        circle={\"edgecolor\": \"white\"},\n        ax=ax,\n        crs=osr_proj,\n    )\n    return pm","key":"qycjX97FuY"},{"type":"output","id":"egt1bQUlAxjH_8fITrqEA","data":[],"key":"QxwwdLybDF"}],"key":"a8Y3QJ2Zcq"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the selected fields into one figure","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Dv5LlMpMuB"}],"identifier":"plot-the-selected-fields-into-one-figure","label":"Plot the selected fields into one figure","html_id":"plot-the-selected-fields-into-one-figure","implicit":true,"key":"VNhjuvErbB"}],"key":"bgtVwIRhBt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:18.639321Z","iopub.status.busy":"2024-08-26T06:29:18.638960Z","iopub.status.idle":"2024-08-26T06:29:26.932841Z","shell.execute_reply":"2024-08-26T06:29:26.932379Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12, 10))\n\nax = plt.subplot(221, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_inp.DBZH.where(swp_inp.DBZH >= -10),\n    ax=ax,\n    geometries=geometries,\n    title=\"Before QC\",\n    add_colorbar=False,\n    vmin=-10,\n    vmax=65,\n)\n\nax = plt.subplot(222, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_out.DBZH.where(swp_out.DBZH >= -10),\n    ax=ax,\n    geometries=geometries,\n    title=\"After QC\",\n    add_colorbar=False,\n    vmin=-10,\n    vmax=65,\n)\n\nax = plt.subplot(223, projection=map_proj)\nqm = plot_ppi_to_ax(\n    swp_out.quality1,\n    ax=ax,\n    geometries=geometries,\n    add_colorbar=False,\n    title=\"Quality 1\",\n)\n\nax = plt.subplot(224, projection=map_proj)\nqm = plot_ppi_to_ax(\n    swp_out.QIND, ax=ax, geometries=geometries, add_colorbar=False, title=\"Quality 2\"\n)\n\nplt.tight_layout()\n\n# Add colorbars\nfig.subplots_adjust(right=0.9)\ncax = fig.add_axes((0.9, 0.6, 0.03, 0.3))\ncbar = plt.colorbar(pm, cax=cax)\ncbar.set_label(\"Horizontal reflectivity (dBZ)\", fontsize=\"large\")\n\ncax = fig.add_axes((0.9, 0.1, 0.03, 0.3))\ncbar = plt.colorbar(qm, cax=cax)\ncbar.set_label(\"Quality index\", fontsize=\"large\")","key":"bAL1TEFVCA"},{"type":"output","id":"ydHvzxfL9cbpNC0qrmKsF","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"118305197cb65812743cbbb85ccdcae3","path":"/erad2024/_preview/91/build/118305197cb65812743cbbb85ccdcae3.png"},"text/plain":{"content":"<Figure size 1200x1000 with 6 Axes>","content_type":"text/plain"}}}],"key":"L7vumfxngj"}],"key":"biQzrPQOzZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Collect and plot the polarimetric moments from the original ODIM_H5 dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ghB9QVIHEQ"}],"identifier":"collect-and-plot-the-polarimetric-moments-from-the-original-odim-h5-dataset","label":"Collect and plot the polarimetric moments from the original ODIM_H5 dataset","html_id":"collect-and-plot-the-polarimetric-moments-from-the-original-odim-h5-dataset","implicit":true,"key":"zFOGJJQwNN"}],"key":"z6sE6xcnyZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:26.937723Z","iopub.status.busy":"2024-08-26T06:29:26.937538Z","iopub.status.idle":"2024-08-26T06:29:29.804566Z","shell.execute_reply":"2024-08-26T06:29:29.804076Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12, 12))\n\nax = plt.subplot(221, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.RHOHV, ax=ax, title=\"RhoHV\", geometries=geometries)\n\nax = plt.subplot(222, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.PHIDP, ax=ax, title=\"PhiDP\", geometries=geometries)\n\nax = plt.subplot(223, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_inp.ZDR, ax=ax, title=\"Differential reflectivity\", geometries=geometries\n)\n\nax = plt.subplot(224, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_inp.VRAD, ax=ax, title=\"Doppler velocity\", geometries=geometries\n)\n\nplt.tight_layout()","key":"NdvT6z8Xmr"},{"type":"output","id":"AQqul0yis91JaO0jkLdHB","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"10b4ff1f12eef18d8ba82688e263ac34","path":"/erad2024/_preview/91/build/10b4ff1f12eef18d8ba82688e263ac34.png"},"text/plain":{"content":"<Figure size 1200x1200 with 8 Axes>","content_type":"text/plain"}}}],"key":"jL8rGSoAAA"}],"key":"QYhIU2s6Wt"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Try some filtering and attenuation correction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gQUw3JbmXw"}],"identifier":"try-some-filtering-and-attenuation-correction","label":"Try some filtering and attenuation correction","html_id":"try-some-filtering-and-attenuation-correction","implicit":true,"key":"wMqOnvTeDY"}],"key":"E6dE0rlS0k"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:29.809619Z","iopub.status.busy":"2024-08-26T06:29:29.809339Z","iopub.status.idle":"2024-08-26T06:29:30.499101Z","shell.execute_reply":"2024-08-26T06:29:30.498531Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Set ZH to a very low value where we do not expect valid data\nzh = swp_inp.DBZH.fillna(-32.0)\n# Retrieve PIA by using some constraints (see https://docs.wradlib.org/en/latest/notebooks/attenuation/attenuation.html for help)\npia = zh.wrl.atten.correct_attenuation_constrained(\n    constraints=[wradlib.atten.constraint_dbz, wradlib.atten.constraint_pia],\n    constraint_args=[[64.0], [20.0]],\n)\n\n# Correct reflectivity by PIA\nzh_corrected = swp_inp.DBZH + pia","key":"NcOiMReLTg"},{"type":"output","id":"n33QQPf-mcOty5ri1ve3U","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/wradlib/trafo.py:339: RuntimeWarning: overflow encountered in power\n  return 10.0 ** (x / 10.0)\n"}],"key":"wq1d4T8YsJ"}],"key":"aJg5xDHNBh"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare results against QC from odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WkptBVLwYj"}],"identifier":"compare-results-against-qc-from-odc-toolbox","label":"Compare results against QC from odc_toolbox","html_id":"compare-results-against-qc-from-odc-toolbox","implicit":true,"key":"fyQu1L1R9m"}],"key":"wDgXkGiL8j"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T06:29:30.503271Z","iopub.status.busy":"2024-08-26T06:29:30.502118Z","iopub.status.idle":"2024-08-26T06:29:32.526733Z","shell.execute_reply":"2024-08-26T06:29:32.526236Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(18, 10))\n\nax = plt.subplot(131, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_inp.DBZH.where(swp_out.DBZH >= -10),\n    ax=ax,\n    geometries=geometries,\n    title=\"Before QC\",\n)\n\nax = plt.subplot(132, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_out.DBZH.where(swp_out.DBZH >= -10),\n    ax=ax,\n    geometries=geometries,\n    title=\"After QC using BALTRAD Toolbox\",\n)\n\nax = plt.subplot(133, projection=map_proj)\npm = plot_ppi_to_ax(\n    zh_corrected.where(zh_corrected >= -10),\n    ax=ax,\n    geometries=geometries,\n    title=\"After QC using wradlib\",\n)","key":"vb5iqOylZt"},{"type":"output","id":"3tjBslGhDonjU_TYgyFYF","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"0dd64d0cd0776f0fd504fb23a3f1c5d1","path":"/erad2024/_preview/91/build/0dd64d0cd0776f0fd504fb23a3f1c5d1.png"},"text/plain":{"content":"<Figure size 1800x1000 with 6 Axes>","content_type":"text/plain"}}}],"key":"sOq37Jy4Ig"}],"key":"ea0frBn8un"}],"key":"hgNe1vWZiQ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"},"next":{"title":"An Introduction to LROSE","url":"/lrose-basics","group":"LROSE"}}},"domain":"http://localhost:3000"}