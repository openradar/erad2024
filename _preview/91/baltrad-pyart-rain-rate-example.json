{"kind":"Notebook","sha256":"fea4d45be3ed7fa4111fb0152ebf01488dcbfcb7e48035f70f0276b361e55a23","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/91/build/0_baltrad_pyart_rain-f31364ed676152599f19f31db1305425.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"S7SUaRvtBy"}],"key":"B3AMZ6qDXM"}],"key":"iET9Cy8icI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g3dByzbPUP"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"Yqf0z2T8PZ"}],"key":"niF8wkz4EH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:26.519499Z","iopub.status.busy":"2024-08-26T23:00:26.519173Z","iopub.status.idle":"2024-08-26T23:00:27.305076Z","shell.execute_reply":"2024-08-26T23:00:27.304320Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"E5U8KsE7am"},{"type":"output","id":"5ATUN8FGI1OGM7rxMhmeA","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"NjBNK7FFkt"}],"key":"QNaWcvZgKc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:27.307754Z","iopub.status.busy":"2024-08-26T23:00:27.307539Z","iopub.status.idle":"2024-08-26T23:00:27.679314Z","shell.execute_reply":"2024-08-26T23:00:27.678731Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"JtA2MnNIBa"},{"type":"output","id":"Gh9iobhnFATgW9a9VPn8o","data":[],"key":"M1hLxbHNp5"}],"key":"jbuX1pRqGC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Lu68eDnRdT"}],"key":"YVsNKiSoPe"}],"key":"tSA7VZhAt8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:27.681813Z","iopub.status.busy":"2024-08-26T23:00:27.681554Z","iopub.status.idle":"2024-08-26T23:00:29.188189Z","shell.execute_reply":"2024-08-26T23:00:29.187577Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"nrH7uOOqEE"},{"type":"output","id":"zeuStmKsmmjImNmXdMHaa","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"waYap274gD"}],"key":"nmqiJWARIw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HorWuKBXvo"}],"key":"yB8z80W5cx"}],"key":"MaqOotO4VL"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"McSdWPOV3G"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"yIwjeQy1fX"}],"key":"sdPZSDF6yC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:29.191271Z","iopub.status.busy":"2024-08-26T23:00:29.190862Z","iopub.status.idle":"2024-08-26T23:00:29.227097Z","shell.execute_reply":"2024-08-26T23:00:29.226419Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"QfRSG7ZcAP"},{"type":"output","id":"9wymJ-aRTFkAWvc_U1wyO","data":[],"key":"AWOpv2EWeM"}],"key":"dtY6rsvFFg"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hcMHcQd6SW"}],"key":"xadvxjbcIj"}],"key":"QR6WWmK4Hq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:29.229498Z","iopub.status.busy":"2024-08-26T23:00:29.229044Z","iopub.status.idle":"2024-08-26T23:00:29.284703Z","shell.execute_reply":"2024-08-26T23:00:29.284158Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"OLrsQUyyy6"},{"type":"output","id":"pTJLOelEaDP141J46BfYB","data":[],"key":"FefTlau2p9"}],"key":"kidL6F3zok"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S2giwNBcJS"}],"key":"GPaKPGL75Z"}],"key":"Weo3NKMndM"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:29.287172Z","iopub.status.busy":"2024-08-26T23:00:29.286969Z","iopub.status.idle":"2024-08-26T23:00:29.289784Z","shell.execute_reply":"2024-08-26T23:00:29.289326Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"BSDHrhC1Yy"},{"type":"output","id":"gbRIYTwOoaVaZ99LZKei3","data":[],"key":"sccodWvu4i"}],"key":"IsqAj8UctV"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:29.291887Z","iopub.status.busy":"2024-08-26T23:00:29.291510Z","iopub.status.idle":"2024-08-26T23:00:29.787067Z","shell.execute_reply":"2024-08-26T23:00:29.786487Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"eLSqcbLkGi"},{"type":"output","id":"Q4CbO1WltM-E93nY11owj","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/_preview/91/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"aEwaHbYoRB"}],"key":"ADjptWoyEy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:29.789302Z","iopub.status.busy":"2024-08-26T23:00:29.788874Z","iopub.status.idle":"2024-08-26T23:00:30.252798Z","shell.execute_reply":"2024-08-26T23:00:30.252221Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"sVhJiOn0lP"},{"type":"output","id":"jzGzMjhKxRoQOXN9iOUKK","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/_preview/91/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"tiIbP5Mh94"}],"key":"eNwWI570NB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:30.255687Z","iopub.status.busy":"2024-08-26T23:00:30.255445Z","iopub.status.idle":"2024-08-26T23:00:30.715784Z","shell.execute_reply":"2024-08-26T23:00:30.715164Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"golUH5A3CO"},{"type":"output","id":"g2l5Xy9ROc0tyESIlzRiW","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/_preview/91/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"TRaSEASwJg"}],"key":"QN67pBH6Jm"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:30.718031Z","iopub.status.busy":"2024-08-26T23:00:30.717808Z","iopub.status.idle":"2024-08-26T23:00:31.189842Z","shell.execute_reply":"2024-08-26T23:00:31.189146Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"LzTzoIjFOh"},{"type":"output","id":"NYSfnvPvqcKADkRFxLYc1","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/_preview/91/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"yVsii0bXrm"}],"key":"ovWuKQwV1Q"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"B329cEdTSr"}],"key":"S4r6pg12Mc"}],"key":"dp2UkRRDzm"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:31.193286Z","iopub.status.busy":"2024-08-26T23:00:31.192641Z","iopub.status.idle":"2024-08-26T23:00:31.197122Z","shell.execute_reply":"2024-08-26T23:00:31.196625Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"iXfze60Upt"},{"type":"output","id":"13vogj52kss7a6ZNv3CB1","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"MVwoeEkKjS"}],"key":"Td54sL9Dn9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:31.199328Z","iopub.status.busy":"2024-08-26T23:00:31.198886Z","iopub.status.idle":"2024-08-26T23:00:31.386330Z","shell.execute_reply":"2024-08-26T23:00:31.385739Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"Z9JMGMsZTh"},{"type":"output","id":"GdJOynQVBDudMFP5FTX6h","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"LH1oufVon0"}],"key":"UaoR8f95ur"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:31.388377Z","iopub.status.busy":"2024-08-26T23:00:31.388207Z","iopub.status.idle":"2024-08-26T23:00:31.391869Z","shell.execute_reply":"2024-08-26T23:00:31.391333Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"ogwquWkRVS"},{"type":"output","id":"Nq139hF7YkclUOcdLNXcR","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"isYEM53VUs"}],"key":"FR5cO09auX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:31.393627Z","iopub.status.busy":"2024-08-26T23:00:31.393463Z","iopub.status.idle":"2024-08-26T23:00:31.395905Z","shell.execute_reply":"2024-08-26T23:00:31.395476Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"w6Qsl61L0r"},{"type":"output","id":"sKVjyUbTV-SC20cCm--GZ","data":[],"key":"dtutYQy79z"}],"key":"w9m417AVkR"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HWJkLxqNew"}],"key":"RNIdbGz5bF"}],"key":"bINB055Td4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:31.397777Z","iopub.status.busy":"2024-08-26T23:00:31.397427Z","iopub.status.idle":"2024-08-26T23:00:31.854651Z","shell.execute_reply":"2024-08-26T23:00:31.854119Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"PluvuG7RCT"},{"type":"output","id":"M6_iYfA0GzY67M3st7TEp","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/_preview/91/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"a6YGTSZvWp"}],"key":"NWvl354yZU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:31.856685Z","iopub.status.busy":"2024-08-26T23:00:31.856508Z","iopub.status.idle":"2024-08-26T23:00:32.308706Z","shell.execute_reply":"2024-08-26T23:00:32.308023Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"HN55i7qMft"},{"type":"output","id":"o9YaOePGL2gcg_K0dScUS","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/_preview/91/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"oFMBqmVShK"}],"key":"nZV0cGuhL6"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"q0ldetoxer"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"F35otwGWCP"}],"key":"AfYW81eIsU"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"HF8iBf0dh5"}],"key":"zyzaGZJIlk"}],"key":"FdbfWunCg1"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:32.311939Z","iopub.status.busy":"2024-08-26T23:00:32.311412Z","iopub.status.idle":"2024-08-26T23:00:32.328333Z","shell.execute_reply":"2024-08-26T23:00:32.327745Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"eT1soprspy"},{"type":"output","id":"-kapb4bQDVe6kS2syszU5","data":[],"key":"DgaCeyGhcy"}],"key":"H1xxwnnVxX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:32.330656Z","iopub.status.busy":"2024-08-26T23:00:32.330463Z","iopub.status.idle":"2024-08-26T23:00:32.333642Z","shell.execute_reply":"2024-08-26T23:00:32.333066Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"wKduCnbDHq"},{"type":"output","id":"CU8h5kVTJo4BLENNB7n1x","data":[],"key":"FvYh7UXq53"}],"key":"XWHsM7vvst"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tjWwkoIh9d"}],"key":"iOn1PVFvMb"}],"key":"qzhdGk2jT1"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:32.336082Z","iopub.status.busy":"2024-08-26T23:00:32.335625Z","iopub.status.idle":"2024-08-26T23:00:32.776800Z","shell.execute_reply":"2024-08-26T23:00:32.776241Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"okcjn9XPA0"},{"type":"output","id":"UOR5ZdSzse_813WKqW2WZ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/_preview/91/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"kcJ3MV5sqX"}],"key":"o9AXTwxeqD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z4kG06ZMuj"}],"key":"fjapJAoSi4"}],"key":"XcixRodU4C"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:32.779235Z","iopub.status.busy":"2024-08-26T23:00:32.778842Z","iopub.status.idle":"2024-08-26T23:00:32.793358Z","shell.execute_reply":"2024-08-26T23:00:32.792861Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"jQYQxrnU4q"},{"type":"output","id":"EvyI9Y7hEeDYFweX3curZ","data":[],"key":"zXuVWBpj8U"}],"key":"AC6W6kmeB8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T23:00:32.795664Z","iopub.status.busy":"2024-08-26T23:00:32.795238Z","iopub.status.idle":"2024-08-26T23:00:33.590335Z","shell.execute_reply":"2024-08-26T23:00:33.589667Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"Sox679ry4e"},{"type":"output","id":"2FEYQxxoZzbOYlr00BicA","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"Fe3fTZX1EZ"}],"key":"KGG34jqbr9"}],"key":"LLJSLJs3sS"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}