{"kind":"Notebook","sha256":"1b5d139d2ca01ef976025c8724cf7ad90608d743bffc59da254fddb542ace495","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/91/build/0_baltrad_pyart_rain-09c800ab8b1e12578d5fb928b73948b3.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hWWhFAG9iO"}],"key":"TT2Djjhhg7"}],"key":"yvMDtFkXLR"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nQl9DL5Mba"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"WVKyrwKFzr"}],"key":"QBg4TXPi6k"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:07.606291Z","iopub.status.busy":"2024-08-26T21:08:07.605630Z","iopub.status.idle":"2024-08-26T21:08:08.732530Z","shell.execute_reply":"2024-08-26T21:08:08.731658Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"eMZpnqz3aa"},{"type":"output","id":"kJYe5XS296YZFgsSl_I8Q","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"wHR7snJwOC"}],"key":"qlbMZyGvVF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:08.735306Z","iopub.status.busy":"2024-08-26T21:08:08.735074Z","iopub.status.idle":"2024-08-26T21:08:09.104438Z","shell.execute_reply":"2024-08-26T21:08:09.103772Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"xdb80MW1uF"},{"type":"output","id":"4gQr1rjBhW-YgT2Cn90Uy","data":[],"key":"b89vkh6dPd"}],"key":"w8GwjFygdt"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m0TSrUE3dp"}],"key":"rG7eb2a2ER"}],"key":"ybF9jhPypO"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:09.107369Z","iopub.status.busy":"2024-08-26T21:08:09.107050Z","iopub.status.idle":"2024-08-26T21:08:10.620770Z","shell.execute_reply":"2024-08-26T21:08:10.620159Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"R9fap0KCDJ"},{"type":"output","id":"2Ycw1AmmoQ9S5E0UC54kN","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"HIwrq1rXPs"}],"key":"AvVhVnDxHE"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H3y559WA95"}],"key":"PyOatesR3S"}],"key":"W3dzrSEjhH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Kr2HKiJbBa"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"zCw5NoVxXY"}],"key":"ukbvmrov2N"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:10.623738Z","iopub.status.busy":"2024-08-26T21:08:10.623165Z","iopub.status.idle":"2024-08-26T21:08:10.658453Z","shell.execute_reply":"2024-08-26T21:08:10.657859Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"ZV2OtSWy5H"},{"type":"output","id":"FbBjAVjl2vNahaafeVhFf","data":[],"key":"Pd1UFwzL8k"}],"key":"c8p5kQMCFZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DLx6sT3Hj8"}],"key":"G3G9laQoiX"}],"key":"KzXYPXP2r0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:10.660570Z","iopub.status.busy":"2024-08-26T21:08:10.660381Z","iopub.status.idle":"2024-08-26T21:08:10.700952Z","shell.execute_reply":"2024-08-26T21:08:10.700324Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"HXL3VqaULa"},{"type":"output","id":"hAKa7BB2RVXQvN-so492i","data":[],"key":"xjBYSWnobV"}],"key":"U0uH8Plg6q"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SP1XhAowuH"}],"key":"vVJk7cOC99"}],"key":"wVUPQFwYXh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:10.703985Z","iopub.status.busy":"2024-08-26T21:08:10.703426Z","iopub.status.idle":"2024-08-26T21:08:10.707201Z","shell.execute_reply":"2024-08-26T21:08:10.706521Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"FDc9Yf8Vy7"},{"type":"output","id":"zgtBZSvpc2nM4gHJQJI-n","data":[],"key":"UuhE5j2nRy"}],"key":"c3WK2pzUWh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:10.709466Z","iopub.status.busy":"2024-08-26T21:08:10.709260Z","iopub.status.idle":"2024-08-26T21:08:11.183256Z","shell.execute_reply":"2024-08-26T21:08:11.182746Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"nqPTySVyJf"},{"type":"output","id":"dVwvdWMogBzutguMZhtI-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/_preview/91/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"ev6rTZfO8N"}],"key":"TRirKLB0Bd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:11.185660Z","iopub.status.busy":"2024-08-26T21:08:11.185264Z","iopub.status.idle":"2024-08-26T21:08:11.664337Z","shell.execute_reply":"2024-08-26T21:08:11.663754Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"jVrxrlgIw0"},{"type":"output","id":"HRDZg-8Ysx9aa3FC-dAzx","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/_preview/91/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"JSRqWv7Ft7"}],"key":"jeBPfFOKpg"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:11.666530Z","iopub.status.busy":"2024-08-26T21:08:11.666351Z","iopub.status.idle":"2024-08-26T21:08:12.126115Z","shell.execute_reply":"2024-08-26T21:08:12.125380Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"vFZwDdyTfT"},{"type":"output","id":"_8mW9EmRNPyjnjeaPqyp3","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/_preview/91/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"svG5KHyg6o"}],"key":"qVAnYPUWUZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:12.128920Z","iopub.status.busy":"2024-08-26T21:08:12.128437Z","iopub.status.idle":"2024-08-26T21:08:12.602067Z","shell.execute_reply":"2024-08-26T21:08:12.601214Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"kCtejHAo3I"},{"type":"output","id":"_Ib3XWkbTnO4WWT7sMM_2","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/_preview/91/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"tktulpLcDu"}],"key":"Cgjvg0Y8bz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OeomOOqEsb"}],"key":"jh3VeEgNRV"}],"key":"usLZlpBnN9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:12.605085Z","iopub.status.busy":"2024-08-26T21:08:12.604876Z","iopub.status.idle":"2024-08-26T21:08:12.609100Z","shell.execute_reply":"2024-08-26T21:08:12.608550Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"xdSJ30kzM8"},{"type":"output","id":"Qd4Rh7Wjl8TJeQPbi3zpo","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"Kml6sYyuzS"}],"key":"rzy0UcQq4c"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:12.611084Z","iopub.status.busy":"2024-08-26T21:08:12.610909Z","iopub.status.idle":"2024-08-26T21:08:12.799608Z","shell.execute_reply":"2024-08-26T21:08:12.798855Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"XD38YvfVrm"},{"type":"output","id":"uUI3N-j5ZmZrzZNOFbPR4","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"qZRgYuFYQ3"}],"key":"IxvGKNGt3y"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:12.802418Z","iopub.status.busy":"2024-08-26T21:08:12.801843Z","iopub.status.idle":"2024-08-26T21:08:12.808011Z","shell.execute_reply":"2024-08-26T21:08:12.807376Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"R9VzUfZ6Ty"},{"type":"output","id":"49vIyeBDL-OSF4TAXU-uT","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"QUdgHo07hS"}],"key":"M3bg5nsg2V"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:12.810670Z","iopub.status.busy":"2024-08-26T21:08:12.810060Z","iopub.status.idle":"2024-08-26T21:08:12.813824Z","shell.execute_reply":"2024-08-26T21:08:12.813214Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"OegKeDoSXj"},{"type":"output","id":"Itl3fMocv0hbHbp8n2JNv","data":[],"key":"q0gROyJMrL"}],"key":"AXg1yz5pUk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fmt6Wp4NSG"}],"key":"YXRxIp5kfh"}],"key":"kGDFPdkxcp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:12.816250Z","iopub.status.busy":"2024-08-26T21:08:12.815852Z","iopub.status.idle":"2024-08-26T21:08:13.266192Z","shell.execute_reply":"2024-08-26T21:08:13.265586Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"Ij2q7ZCgXj"},{"type":"output","id":"pC_4XkM-ukP4Y9UXxq0Uk","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/_preview/91/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"X1tzcxNKUm"}],"key":"Yos8pDtyNA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:13.268363Z","iopub.status.busy":"2024-08-26T21:08:13.268175Z","iopub.status.idle":"2024-08-26T21:08:13.720970Z","shell.execute_reply":"2024-08-26T21:08:13.720385Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"Y1W1qWOFZx"},{"type":"output","id":"2OqBBzCGUgj419x5ozh3o","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/_preview/91/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"hRXFDEWoOL"}],"key":"Jn3YlLHZ8M"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"LSwnoN97UI"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"qcbV2SKCdj"}],"key":"nWgKaJK997"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"H8V2FXisfy"}],"key":"Ze4yq5Gcgw"}],"key":"EPbcFnB7gH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:13.723372Z","iopub.status.busy":"2024-08-26T21:08:13.722970Z","iopub.status.idle":"2024-08-26T21:08:13.737501Z","shell.execute_reply":"2024-08-26T21:08:13.737023Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"tSPCInZAv4"},{"type":"output","id":"Z8ogEz4zrpRmfgcpKwZL7","data":[],"key":"nCHO0YHqcb"}],"key":"V0CwzbRtuM"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:13.739445Z","iopub.status.busy":"2024-08-26T21:08:13.739265Z","iopub.status.idle":"2024-08-26T21:08:13.742373Z","shell.execute_reply":"2024-08-26T21:08:13.741864Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"odYb2r2G0k"},{"type":"output","id":"GtLGtOwO6DuXVyhZ5_7Gh","data":[],"key":"nYErrhQPJG"}],"key":"v1JtOmrnyW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UBdDaCaKLb"}],"key":"TrJgvFRz0V"}],"key":"HKpaNVXqEc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:13.744478Z","iopub.status.busy":"2024-08-26T21:08:13.744300Z","iopub.status.idle":"2024-08-26T21:08:14.166825Z","shell.execute_reply":"2024-08-26T21:08:14.166236Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"KYM1VDb5zB"},{"type":"output","id":"7-rPH8RLyEfhb3byp1vMR","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/_preview/91/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"ATSKKHBrh4"}],"key":"Sd4EXSmAom"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FMkHH8m08q"}],"key":"VTVcRsA1S1"}],"key":"MJYcuqtA6C"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:14.169224Z","iopub.status.busy":"2024-08-26T21:08:14.168847Z","iopub.status.idle":"2024-08-26T21:08:14.183859Z","shell.execute_reply":"2024-08-26T21:08:14.183356Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"lfPyHbqn0a"},{"type":"output","id":"2Fh8Lg6AR5_7_MRAxsdHk","data":[],"key":"h7Y6pxs0vc"}],"key":"FrH2149YSg"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:14.186005Z","iopub.status.busy":"2024-08-26T21:08:14.185621Z","iopub.status.idle":"2024-08-26T21:08:14.989930Z","shell.execute_reply":"2024-08-26T21:08:14.989391Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"LsJG0LLmeY"},{"type":"output","id":"yHsWwiGz9JnyjDRsm_6E8","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"jx2Uub3K7n"}],"key":"G86DUnudka"}],"key":"ZxzmSGOyW1"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}