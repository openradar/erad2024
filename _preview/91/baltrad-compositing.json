{"kind":"Notebook","sha256":"c383895d504a9ee5d0e0d5f07824901232d1324a27d13b7a7830bce291e17c90","slug":"baltrad-compositing","location":"/notebooks/baltrad/baltrad_short_course/4_BALTRAD_Compositing.ipynb","dependencies":[],"frontmatter":{"title":"Compositing","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"4_BALTRAD_Compositing.ipynb","url":"/erad2024/_preview/91/build/4_BALTRAD_Compositin-9bbb905261535ac70c26b94f55f000bf.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This exercise builds on output from the parallel processing exercise. It does not address how projections and navigation is dealt with in BALTRAD. This should be addressed in a separate exercise.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AWG934KHdH"}],"key":"mERwvfne7U"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Cartesian product area used in this exercise is pre-configured and looked up from a registry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RU7IaXdf1I"}],"key":"JF6INn32po"}],"key":"tezTTHB7iX"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rudimentary composite","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GFXXhkuJAy"}],"identifier":"rudimentary-composite","label":"Rudimentary composite","html_id":"rudimentary-composite","implicit":true,"key":"NgycovkwV0"}],"key":"PXQ6s0gJT8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:07:07.174763Z","iopub.status.busy":"2024-08-26T21:07:07.174567Z","iopub.status.idle":"2024-08-26T21:07:07.628398Z","shell.execute_reply":"2024-08-26T21:07:07.627770Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport glob, time\nimport matplotlib\nimport _raveio, _rave\nimport _pycomposite, compositing\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")  # Suppress SyntaxWarning from Python2 code\n\ngenerator = compositing.compositing()\ngenerator.filenames = glob.glob(\"data/se*.h5\")","key":"auRzzy0FvN"},{"type":"output","id":"UYjjytXMxg2-AIkWDl_9G","data":[],"key":"ekEaQ7rLnX"}],"key":"wDuroyNgo8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:07:07.630995Z","iopub.status.busy":"2024-08-26T21:07:07.630691Z","iopub.status.idle":"2024-08-26T21:07:18.770116Z","shell.execute_reply":"2024-08-26T21:07:18.769580Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Run with all defaults to a pre-configured area that uses the Google Maps projection.\n# First two arguments are product date and time. These are taken from the last input file if not specified.\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\n\nrio = _raveio.new()\nrio.object = comp\nrio.save(\"data/comp_pcappi1000m.h5\")\n\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"ClY7rQwnSY"},{"type":"output","id":"nfwZIwtpdbxuXSIYEkmHG","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 11.09 seconds\n"}],"key":"a0c3xGTAiW"}],"key":"nOfMUd0Yk7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Tweak the plotter from earlier exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gVsriMYxwT"}],"identifier":"tweak-the-plotter-from-earlier-exercises","label":"Tweak the plotter from earlier exercises","html_id":"tweak-the-plotter-from-earlier-exercises","implicit":true,"key":"Ecwa3bXxQ1"}],"key":"LaBDYnZPAg"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:07:18.772715Z","iopub.status.busy":"2024-08-26T21:07:18.772235Z","iopub.status.idle":"2024-08-26T21:07:18.779933Z","shell.execute_reply":"2024-08-26T21:07:18.779423Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Two color palettes, one used in GoogleMapsPlugin, and the other from RAVE\nfrom GmapColorMap import dbzh as dbzp\n\n\n# Convert a 768-list palette to a matplotlib colorlist\ndef make_colorlist(pal):\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i] / 255.0, pal[i + 1] / 255.0, pal[i + 2] / 255.0])\n    return colorlist\n\n\n# Convert lists to colormaps\ndbzcl = make_colorlist(dbzp)\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\n\nStringType = type(\"\")\n\n\ndef plot(data, colorlist=dbzcl, title=\"Composite\"):\n    mini, maxi = data.shape.index(min(data.shape)), data.shape.index(max(data.shape))\n    figsize = (20, 16)  # if mini == 0 else (12,8)\n    fig = plt.figure(figsize=figsize)\n    plt.title(title)\n    clist = (\n        colorlist\n        if type(colorlist) == StringType\n        else matplotlib.colors.ListedColormap(colorlist)\n    )\n    plt.imshow(data, cmap=clist, clim=(0, 255))\n    plt.colorbar(shrink=float(data.shape[mini]) / data.shape[maxi])","key":"yYAesNhTsf"},{"type":"output","id":"r_qHWgZ_WtwdNJsMVcdmh","data":[],"key":"ZRp4jfymVB"}],"key":"rqpMcxEIJY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:07:18.782404Z","iopub.status.busy":"2024-08-26T21:07:18.781931Z","iopub.status.idle":"2024-08-26T21:07:19.222014Z","shell.execute_reply":"2024-08-26T21:07:19.221420Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(\n    comp.getParameter(\"DBZH\").getData(),\n    title=\"Default composite: DBZH 1000 m Pseudo-CAPPI, nearest radar\",\n)","key":"pe6cQBeYSR"},{"type":"output","id":"vYdljPSBqxQnsMjqywblK","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"14a1907a7fc7bbc7097bf4cad6bfe855","path":"/erad2024/_preview/91/build/14a1907a7fc7bbc7097bf4cad6bfe855.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"DxDKI6HUlk"}],"key":"km6Kme6x0k"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Maximum reflectivity, lowest pixel, add QC chain","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"unIfzTvHkB"}],"identifier":"maximum-reflectivity-lowest-pixel-add-qc-chain","label":"Maximum reflectivity, lowest pixel, add QC chain","html_id":"maximum-reflectivity-lowest-pixel-add-qc-chain","implicit":true,"key":"Zw4BD3Nctg"}],"key":"V5R56vMGOS"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:07:19.225572Z","iopub.status.busy":"2024-08-26T21:07:19.225182Z","iopub.status.idle":"2024-08-26T21:07:41.231281Z","shell.execute_reply":"2024-08-26T21:07:41.230573Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.product = _rave.Rave_ProductType_MAX\ngenerator.selection_method = _pycomposite.SelectionMethod_HEIGHT\ngenerator.detectors = [\n    \"ropo\",\n    \"beamb\",\n    \"radvol-att\",\n    \"radvol-broad\",\n    \"rave-overshooting\",\n    \"qi-total\",\n]\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_max.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"MFkJ4ZD1gb"},{"type":"output","id":"LDcnKlUE3TzHEQ_X4dRvf","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 21.80 seconds\n"}],"key":"S7zhRAOkKK"}],"key":"d7SKbivDsm"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:07:41.233355Z","iopub.status.busy":"2024-08-26T21:07:41.233162Z","iopub.status.idle":"2024-08-26T21:07:41.650308Z","shell.execute_reply":"2024-08-26T21:07:41.649718Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, lowest pixel\")","key":"S2auPBv9Mq"},{"type":"output","id":"73ePEP0MZtF46xHQfrZGm","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"337297c6f237b9f37d6eac2a18b7518c","path":"/erad2024/_preview/91/build/337297c6f237b9f37d6eac2a18b7518c.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"TUBaTNrZwn"}],"key":"BywYQ6lv3H"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot correspondong total quality index","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QaTDqiqYzU"}],"identifier":"plot-correspondong-total-quality-index","label":"Plot correspondong total quality index","html_id":"plot-correspondong-total-quality-index","implicit":true,"key":"MBuXj8mEv3"}],"key":"eHBpr0ZU1h"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:07:41.653563Z","iopub.status.busy":"2024-08-26T21:07:41.653373Z","iopub.status.idle":"2024-08-26T21:07:42.089438Z","shell.execute_reply":"2024-08-26T21:07:42.088806Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh = comp.getParameter(\"DBZH\")\nqitot = dbzh.getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\nplot(qitot.getData(), \"binary\", \"Total quality index\")","key":"WgcqJ8VGvs"},{"type":"output","id":"Bsw-_FVFHWFa_67O4O3IW","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4f509c7ba3cd5077ab620888a50a9ab1","path":"/erad2024/_preview/91/build/4f509c7ba3cd5077ab620888a50a9ab1.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"UOD0MKdzAv"}],"key":"gI1asOBgaO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now use “total quality” as the compositing criterion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Q6KIgwksVD"}],"identifier":"now-use-total-quality-as-the-compositing-criterion","label":"Now use “total quality” as the compositing criterion","html_id":"now-use-total-quality-as-the-compositing-criterion","implicit":true,"key":"LqlXMzxhPp"}],"key":"XIJJdSR2qt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:07:42.092955Z","iopub.status.busy":"2024-08-26T21:07:42.092744Z","iopub.status.idle":"2024-08-26T21:08:05.625409Z","shell.execute_reply":"2024-08-26T21:08:05.624865Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.qitotal_field = \"pl.imgw.quality.qi_total\"\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_qitotal.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"EpZPycSEDV"},{"type":"output","id":"XNNQ-00bVdQPOVEKWN5G8","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 23.34 seconds\n"}],"key":"HSajynqAuc"}],"key":"rQ2P55NmRF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:05.627552Z","iopub.status.busy":"2024-08-26T21:08:05.627370Z","iopub.status.idle":"2024-08-26T21:08:06.055884Z","shell.execute_reply":"2024-08-26T21:08:06.055226Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, quality-based\")","key":"i8tJxkWN59"},{"type":"output","id":"BXLYPb_iE4449IkmhfCUM","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fafe350621bc411674b9e0a8c22aca4d","path":"/erad2024/_preview/91/build/fafe350621bc411674b9e0a8c22aca4d.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"vjhCLyJVY7"}],"key":"WfgVS08V1T"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-26T21:08:06.060431Z","iopub.status.busy":"2024-08-26T21:08:06.060151Z","iopub.status.idle":"2024-08-26T21:08:06.498201Z","shell.execute_reply":"2024-08-26T21:08:06.497641Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(\n    comp.getParameter(\"DBZH\")\n    .getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\n    .getData(),\n    \"binary\",\n    \"Total quality index\",\n)","key":"WZpdLVgNKj"},{"type":"output","id":"wrMtGdwCe3SATqmZDoZPH","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"437ad37009173ae652c0851459915b1e","path":"/erad2024/_preview/91/build/437ad37009173ae652c0851459915b1e.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"P9GNQv2LFH"}],"key":"FpdrvRZKpL"}],"key":"fhoG7N3Xi8"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Parallel processing","url":"/baltrad-parallel-processing","group":"BALTRAD"},"next":{"title":"Rain Rate retrieval with Py-ART","url":"/baltrad-pyart-rain-rate-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}