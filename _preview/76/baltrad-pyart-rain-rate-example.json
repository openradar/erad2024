{"kind":"Notebook","sha256":"ffcc6e010f16902410872f245915d07ab06741ae46c78c3cc99fd9e4e7f8b97b","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/76/build/0_baltrad_pyart_rain-f817cb7f8c1349feb155ebd084f9d0dd.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OD8QW9YWR2"}],"key":"xLDZPQ0wxJ"}],"key":"ZpQffAeCnK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S9HIUnBeMq"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"bC3ChCiGd2"}],"key":"HsWNKFfJ4N"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:44.696617Z","iopub.status.busy":"2024-08-16T14:17:44.696444Z","iopub.status.idle":"2024-08-16T14:17:45.679842Z","shell.execute_reply":"2024-08-16T14:17:45.679188Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"pE4qo2tzg0"},{"type":"output","id":"xRHfEd8YQFIvNQra5sv_O","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"vnljiTkN6s"}],"key":"vdHZMCM271"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:45.682388Z","iopub.status.busy":"2024-08-16T14:17:45.682188Z","iopub.status.idle":"2024-08-16T14:17:46.056990Z","shell.execute_reply":"2024-08-16T14:17:46.056333Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"ON52X51Cyi"},{"type":"output","id":"J_ngF3wcK36JTBwgcKoRW","data":[],"key":"LKu1iCFEXo"}],"key":"d8K8ngCJW8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AU1Jui47NF"}],"key":"HOuTxTD3eo"}],"key":"tBPnSFHjfT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:46.059795Z","iopub.status.busy":"2024-08-16T14:17:46.059511Z","iopub.status.idle":"2024-08-16T14:17:47.116183Z","shell.execute_reply":"2024-08-16T14:17:47.115572Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"VXMFpp9EXj"},{"type":"output","id":"tKGvfiLx4Cj-87smWbSgS","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"TXTwOz1r0H"}],"key":"tm93KSZLD3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hf1YvPKrW5"}],"key":"dPptkvRnhS"}],"key":"aWiw4usH5u"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bvPu82pPus"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"mHjY6aRxA8"}],"key":"Kx5Nclpagd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:47.118806Z","iopub.status.busy":"2024-08-16T14:17:47.118426Z","iopub.status.idle":"2024-08-16T14:17:47.153693Z","shell.execute_reply":"2024-08-16T14:17:47.152999Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"mNb4hmxyze"},{"type":"output","id":"OqvmEE5N0oNSdA8deXbcb","data":[],"key":"oQ4UNYL2UW"}],"key":"ITl9FSbkyu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wuLPbQ5BNI"}],"key":"CZyTxsaALO"}],"key":"BSkqf5ppMN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:47.156189Z","iopub.status.busy":"2024-08-16T14:17:47.155736Z","iopub.status.idle":"2024-08-16T14:17:47.209606Z","shell.execute_reply":"2024-08-16T14:17:47.208974Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"SpHnytpm9R"},{"type":"output","id":"qLwzexv5Fzexspbr4_Z_N","data":[],"key":"mFG5e8Ao27"}],"key":"U6XcvwotDl"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BotP6urDC5"}],"key":"by8mY9OZKo"}],"key":"nOqeEjlXEI"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:47.212353Z","iopub.status.busy":"2024-08-16T14:17:47.212004Z","iopub.status.idle":"2024-08-16T14:17:47.214765Z","shell.execute_reply":"2024-08-16T14:17:47.214294Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"gvQNwkOtOn"},{"type":"output","id":"C9DKce_F_bjFm4OXHR-Q8","data":[],"key":"LK1ycyWnAv"}],"key":"yUUpNG4feR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:47.216613Z","iopub.status.busy":"2024-08-16T14:17:47.216445Z","iopub.status.idle":"2024-08-16T14:17:47.682947Z","shell.execute_reply":"2024-08-16T14:17:47.682381Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"ooK1oWCMZc"},{"type":"output","id":"v-xsh_iV1KSllH9RnW7jJ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"20786a78fa0a6ee63e09230ec6e2a793","path":"/erad2024/_preview/76/build/20786a78fa0a6ee63e09230ec6e2a793.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"UQ0Jo2jo2b"}],"key":"VvxQXCRKsy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:47.685185Z","iopub.status.busy":"2024-08-16T14:17:47.684805Z","iopub.status.idle":"2024-08-16T14:17:48.166217Z","shell.execute_reply":"2024-08-16T14:17:48.165496Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"T5abwyFnzZ"},{"type":"output","id":"PmjcU9ffaritjiRhp9ndT","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"64e065084d8f5ac385f231df448932c5","path":"/erad2024/_preview/76/build/64e065084d8f5ac385f231df448932c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"CFBCqEBxQF"}],"key":"Z0jwNquwNq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:48.168485Z","iopub.status.busy":"2024-08-16T14:17:48.168289Z","iopub.status.idle":"2024-08-16T14:17:48.611376Z","shell.execute_reply":"2024-08-16T14:17:48.610899Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"tdpWd9QHp2"},{"type":"output","id":"EmNAD5oXDUtfVA8wGQVjg","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6880cc843901b4ab45db376a178dd343","path":"/erad2024/_preview/76/build/6880cc843901b4ab45db376a178dd343.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"CWwMbL6Ag5"}],"key":"hB88W6ZPtQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:48.613575Z","iopub.status.busy":"2024-08-16T14:17:48.613210Z","iopub.status.idle":"2024-08-16T14:17:49.072186Z","shell.execute_reply":"2024-08-16T14:17:49.071676Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"dcEkl8qMml"},{"type":"output","id":"AScv5PGgq6TcCDBlwPnei","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"33e445673dd6ecd05884cd9a6ef0485a","path":"/erad2024/_preview/76/build/33e445673dd6ecd05884cd9a6ef0485a.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"l4JsD6hQ05"}],"key":"uHnv5w8AG6"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wW83gOMq87"}],"key":"jCqqyFqq2T"}],"key":"d678q8ODxv"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:49.076165Z","iopub.status.busy":"2024-08-16T14:17:49.075283Z","iopub.status.idle":"2024-08-16T14:17:49.080970Z","shell.execute_reply":"2024-08-16T14:17:49.080334Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"naM8FjlBx4"},{"type":"output","id":"84bo1lzDaFlxDIyjBLDBi","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"PQS0EbShos"}],"key":"W0sXjUD3ob"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:49.083377Z","iopub.status.busy":"2024-08-16T14:17:49.082871Z","iopub.status.idle":"2024-08-16T14:17:49.269362Z","shell.execute_reply":"2024-08-16T14:17:49.268738Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"jbZUJmADiG"},{"type":"output","id":"H0h0ewS2OBihct50mkrP4","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"f9uFHpN1vg"}],"key":"zU2If4Nxgj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:49.271472Z","iopub.status.busy":"2024-08-16T14:17:49.271275Z","iopub.status.idle":"2024-08-16T14:17:49.275262Z","shell.execute_reply":"2024-08-16T14:17:49.274751Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"iVCllZxDgV"},{"type":"output","id":"tmBqxFvQyBNuJbn6FeTvY","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"yYbZbNwRc6"}],"key":"kgdfnhEWIL"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:49.277710Z","iopub.status.busy":"2024-08-16T14:17:49.277377Z","iopub.status.idle":"2024-08-16T14:17:49.280121Z","shell.execute_reply":"2024-08-16T14:17:49.279612Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"V4fNpzY1AB"},{"type":"output","id":"_ZqNW2VqIza85sgkMCZsF","data":[],"key":"lZlkQZAbeG"}],"key":"crCnuhOYFk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XwoHqgmTNg"}],"key":"ZJNM2jqmmB"}],"key":"ksCemr3N6J"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:49.281991Z","iopub.status.busy":"2024-08-16T14:17:49.281833Z","iopub.status.idle":"2024-08-16T14:17:49.818232Z","shell.execute_reply":"2024-08-16T14:17:49.817506Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"ajfFxrlARA"},{"type":"output","id":"PPi3VK5aRkCZHCGTdO_vN","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"11417ad41bb26cd1532af626eb881158","path":"/erad2024/_preview/76/build/11417ad41bb26cd1532af626eb881158.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"clpfio9tB9"}],"key":"NkW2FhYogI"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:49.820392Z","iopub.status.busy":"2024-08-16T14:17:49.820182Z","iopub.status.idle":"2024-08-16T14:17:50.291913Z","shell.execute_reply":"2024-08-16T14:17:50.291347Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"RB3OHOBQzY"},{"type":"output","id":"9a9SUiFxvSdTUvPS2OFCm","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"99ae3810d21492782cb00e8156a1f142","path":"/erad2024/_preview/76/build/99ae3810d21492782cb00e8156a1f142.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"lzJHKz7Bxm"}],"key":"XIirQctvma"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"gagw6c7E2j"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"iJ51r4QMOU"}],"key":"O9LKwbnLaQ"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"KHNwHNyBxI"}],"key":"CPLHDhbopZ"}],"key":"tgkeYPOqCB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:50.295609Z","iopub.status.busy":"2024-08-16T14:17:50.295122Z","iopub.status.idle":"2024-08-16T14:17:50.307101Z","shell.execute_reply":"2024-08-16T14:17:50.306532Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"u4nUBYHOSX"},{"type":"output","id":"gQi68Sq4oHXZYd0K9ejtY","data":[],"key":"FPAC5UURrU"}],"key":"H4UoPP2EW5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:50.309762Z","iopub.status.busy":"2024-08-16T14:17:50.309554Z","iopub.status.idle":"2024-08-16T14:17:50.312570Z","shell.execute_reply":"2024-08-16T14:17:50.312012Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"Cp6QaaFS6J"},{"type":"output","id":"RGIlU6wPQOubp6aQxTtax","data":[],"key":"JsIZGdEtK0"}],"key":"zNTEue6e6J"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FCzCqNRx4Y"}],"key":"fyP3Xxm6sS"}],"key":"mdNBkCxveP"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:50.315481Z","iopub.status.busy":"2024-08-16T14:17:50.314890Z","iopub.status.idle":"2024-08-16T14:17:50.742001Z","shell.execute_reply":"2024-08-16T14:17:50.741435Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"oAQKhGTEcc"},{"type":"output","id":"t7-G9mkkFgnjxKUFxv3E8","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da8e469afeab4ceaf82135533fae0204","path":"/erad2024/_preview/76/build/da8e469afeab4ceaf82135533fae0204.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"ZyrrkwZpLt"}],"key":"cih7mWKn3m"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iKvtglyeZp"}],"key":"O5AXA4qFUB"}],"key":"wv5KOwmW6t"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:50.744146Z","iopub.status.busy":"2024-08-16T14:17:50.743976Z","iopub.status.idle":"2024-08-16T14:17:50.757602Z","shell.execute_reply":"2024-08-16T14:17:50.757031Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"ThymDTbyoH"},{"type":"output","id":"W9ykgy8ZI4DYkdWfm4aTf","data":[],"key":"IQS2QwgYay"}],"key":"cuGseFsQIp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-16T14:17:50.761266Z","iopub.status.busy":"2024-08-16T14:17:50.760817Z","iopub.status.idle":"2024-08-16T14:17:51.561613Z","shell.execute_reply":"2024-08-16T14:17:51.561049Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"YbDtz8eF0j"},{"type":"output","id":"6ZAywV04MEdpwE7ZjT0Mk","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"S4n6Vzezoz"}],"key":"Q3089hxn7i"}],"key":"CwmtsntDbD"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}