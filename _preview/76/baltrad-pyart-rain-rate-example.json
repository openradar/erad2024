{"kind":"Notebook","sha256":"96bbec8cce56017e201abafbfc0c24787f857f4bc32bf82edd13484a4b59d8dc","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/76/build/0_baltrad_pyart_rain-1d0532e85ef3f85bad3331bd8daac9eb.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Qq0C8eyW9g"}],"key":"UtwtglKYLo"}],"key":"lEgcZbXDi8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"h4yENEvqbL"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"Y4AELytMuZ"}],"key":"hJFyKu8j4M"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:37.993039Z","iopub.status.busy":"2024-08-18T09:23:37.992799Z","iopub.status.idle":"2024-08-18T09:23:38.531674Z","shell.execute_reply":"2024-08-18T09:23:38.530976Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"i6sIF48Qpv"},{"type":"output","id":"vv-dbJJ3IE0241eVnh6BG","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"a9aLVXt4lQ"}],"key":"HxZJ6nV7cj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:38.534698Z","iopub.status.busy":"2024-08-18T09:23:38.534456Z","iopub.status.idle":"2024-08-18T09:23:38.897327Z","shell.execute_reply":"2024-08-18T09:23:38.896764Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"vB8Ze74c6d"},{"type":"output","id":"xQqPxarKfbHHlkwOKq5uo","data":[],"key":"PHMzlAQd3E"}],"key":"B8Wz8KgmbC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pgWNt7aVMM"}],"key":"OY3bkTKK0b"}],"key":"RVKqA8MgoB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:38.899903Z","iopub.status.busy":"2024-08-18T09:23:38.899663Z","iopub.status.idle":"2024-08-18T09:23:39.919925Z","shell.execute_reply":"2024-08-18T09:23:39.919274Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"HR2NtMptIk"},{"type":"output","id":"n27nA0nP7t-lX27YAcL4L","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"HJfe4LwfIW"}],"key":"nvZ9DwvP4x"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CifADuAUNZ"}],"key":"mXeHfe2i0I"}],"key":"iF7FCaErnD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zzXGgHbkwx"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"SlQvqebfMa"}],"key":"TfpyzJGBEl"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:39.923071Z","iopub.status.busy":"2024-08-18T09:23:39.922650Z","iopub.status.idle":"2024-08-18T09:23:39.958009Z","shell.execute_reply":"2024-08-18T09:23:39.957497Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"VNWIR4yk5E"},{"type":"output","id":"NRc9m797TnmacqYVNJohK","data":[],"key":"iVN2bqdmml"}],"key":"TbpVrE2LwO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wUAPu2x3bt"}],"key":"IDcLbOabDT"}],"key":"KBeQQScv5u"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:39.960032Z","iopub.status.busy":"2024-08-18T09:23:39.959851Z","iopub.status.idle":"2024-08-18T09:23:40.002735Z","shell.execute_reply":"2024-08-18T09:23:40.002129Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"WZEkhN5u8H"},{"type":"output","id":"J14fGns_6OyqWwnZahlfT","data":[],"key":"jQQIFEkOjE"}],"key":"HCtcnaB1SA"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"riv6iTht18"}],"key":"vTCXv4QvNr"}],"key":"gZ7bpYp93x"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:40.005487Z","iopub.status.busy":"2024-08-18T09:23:40.005260Z","iopub.status.idle":"2024-08-18T09:23:40.008083Z","shell.execute_reply":"2024-08-18T09:23:40.007631Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"mWTijP5DXU"},{"type":"output","id":"Fve92680Q9YiPXgkD362n","data":[],"key":"DjuM8ZDNQf"}],"key":"UnoEEvLq4K"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:40.009987Z","iopub.status.busy":"2024-08-18T09:23:40.009827Z","iopub.status.idle":"2024-08-18T09:23:40.474163Z","shell.execute_reply":"2024-08-18T09:23:40.473602Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"EKKqbOmEf8"},{"type":"output","id":"6Nbq55MIXfNZD1jvY3KZ3","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"20786a78fa0a6ee63e09230ec6e2a793","path":"/erad2024/_preview/76/build/20786a78fa0a6ee63e09230ec6e2a793.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"SdFS6k5tHu"}],"key":"jQtC7gEfJ3"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:40.476422Z","iopub.status.busy":"2024-08-18T09:23:40.476051Z","iopub.status.idle":"2024-08-18T09:23:40.940434Z","shell.execute_reply":"2024-08-18T09:23:40.939873Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"UkMhP9kIdx"},{"type":"output","id":"AZoEvdHw05lNohczEkBgH","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"64e065084d8f5ac385f231df448932c5","path":"/erad2024/_preview/76/build/64e065084d8f5ac385f231df448932c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"VefbrIbeVM"}],"key":"jOH7VbSVqc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:40.943355Z","iopub.status.busy":"2024-08-18T09:23:40.943154Z","iopub.status.idle":"2024-08-18T09:23:41.420749Z","shell.execute_reply":"2024-08-18T09:23:41.420259Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"E4Xn90AHmk"},{"type":"output","id":"eq4x3DN-DMvnoxNGxnPc9","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6880cc843901b4ab45db376a178dd343","path":"/erad2024/_preview/76/build/6880cc843901b4ab45db376a178dd343.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"AfNsaSayfS"}],"key":"hmDCI8aXjN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:41.422921Z","iopub.status.busy":"2024-08-18T09:23:41.422565Z","iopub.status.idle":"2024-08-18T09:23:41.872057Z","shell.execute_reply":"2024-08-18T09:23:41.871514Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"zwL5CgtMAL"},{"type":"output","id":"DxIRVFdB_tjGgLL_scTzp","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"33e445673dd6ecd05884cd9a6ef0485a","path":"/erad2024/_preview/76/build/33e445673dd6ecd05884cd9a6ef0485a.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"HvbUHGy1MY"}],"key":"UdWqH1HRhj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dwEAlosN4n"}],"key":"TKz3BW3esW"}],"key":"RscFmnKC80"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:41.875347Z","iopub.status.busy":"2024-08-18T09:23:41.874855Z","iopub.status.idle":"2024-08-18T09:23:41.880032Z","shell.execute_reply":"2024-08-18T09:23:41.879482Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"rvN1uaXG3c"},{"type":"output","id":"ozD4GZRceHjv5Fc6TEdHO","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"sB4CiFgEli"}],"key":"eRgQTSTsAd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:41.881903Z","iopub.status.busy":"2024-08-18T09:23:41.881729Z","iopub.status.idle":"2024-08-18T09:23:42.063225Z","shell.execute_reply":"2024-08-18T09:23:42.062678Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"cWvGjlKnEI"},{"type":"output","id":"YJmeZsIlkAZrKLwnhsCJ8","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"ASSLHY0BFu"}],"key":"AZu2xzLRWt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:42.065410Z","iopub.status.busy":"2024-08-18T09:23:42.065049Z","iopub.status.idle":"2024-08-18T09:23:42.069626Z","shell.execute_reply":"2024-08-18T09:23:42.069184Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"nCkiSaVSmz"},{"type":"output","id":"tGFqNz4jKLWlFDRQP3Fp0","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"GGRlrKAIbd"}],"key":"dvpOkERniS"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:42.071374Z","iopub.status.busy":"2024-08-18T09:23:42.071213Z","iopub.status.idle":"2024-08-18T09:23:42.073523Z","shell.execute_reply":"2024-08-18T09:23:42.073104Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"aFxNLPd1YU"},{"type":"output","id":"5MBWMEp7X-HZnA8-CAlGY","data":[],"key":"SUHsCqKAvh"}],"key":"gAHfAJoQvO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"opFzHmBfZ0"}],"key":"ITCyHBLbk4"}],"key":"NZKm3uZhBc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:42.075234Z","iopub.status.busy":"2024-08-18T09:23:42.075077Z","iopub.status.idle":"2024-08-18T09:23:42.611377Z","shell.execute_reply":"2024-08-18T09:23:42.610787Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"fh8qAvlDsQ"},{"type":"output","id":"YZ37oGeH4uiO6HQ3D9f1P","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"11417ad41bb26cd1532af626eb881158","path":"/erad2024/_preview/76/build/11417ad41bb26cd1532af626eb881158.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"A2FNw3hGw2"}],"key":"DX3dQlPd2n"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:42.613562Z","iopub.status.busy":"2024-08-18T09:23:42.613384Z","iopub.status.idle":"2024-08-18T09:23:43.064981Z","shell.execute_reply":"2024-08-18T09:23:43.064171Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"mHK6mNeFi5"},{"type":"output","id":"wafTN9OBxLAMtTi_Q93uf","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"99ae3810d21492782cb00e8156a1f142","path":"/erad2024/_preview/76/build/99ae3810d21492782cb00e8156a1f142.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"c0esS5H4dW"}],"key":"XVsG2KEGiJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"CjgcnSqP37"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"GCkoMQ7swT"}],"key":"zRfewk00xr"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"bpJPq5jJzR"}],"key":"UMl2tua29I"}],"key":"IKejO7gZ2i"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:43.068323Z","iopub.status.busy":"2024-08-18T09:23:43.067733Z","iopub.status.idle":"2024-08-18T09:23:43.084801Z","shell.execute_reply":"2024-08-18T09:23:43.084230Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"haEsejmk6n"},{"type":"output","id":"JvJ7cLwsCfj0zbihI4pL7","data":[],"key":"yQYsMnEcUF"}],"key":"TDfcb9wP51"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:43.087347Z","iopub.status.busy":"2024-08-18T09:23:43.086868Z","iopub.status.idle":"2024-08-18T09:23:43.090653Z","shell.execute_reply":"2024-08-18T09:23:43.090175Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"VuhUE6AalH"},{"type":"output","id":"OQvBQry4zw1WKwux0n09t","data":[],"key":"XMaSgoi2SQ"}],"key":"d0P3nVZU8h"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CgUWWCR9ih"}],"key":"GKlzhjDxwZ"}],"key":"uFBiY04Qr4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:43.092840Z","iopub.status.busy":"2024-08-18T09:23:43.092453Z","iopub.status.idle":"2024-08-18T09:23:43.512611Z","shell.execute_reply":"2024-08-18T09:23:43.512043Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"LWwOiLUL2S"},{"type":"output","id":"0Qa-reAzunrDQldM62xz0","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da8e469afeab4ceaf82135533fae0204","path":"/erad2024/_preview/76/build/da8e469afeab4ceaf82135533fae0204.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"HVJctNfgyk"}],"key":"h7djbATn6r"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zzyUhRIEbN"}],"key":"cwKs1M8j47"}],"key":"okeibsVc1z"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:43.514715Z","iopub.status.busy":"2024-08-18T09:23:43.514545Z","iopub.status.idle":"2024-08-18T09:23:43.528093Z","shell.execute_reply":"2024-08-18T09:23:43.527569Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"sj5tx3MSjL"},{"type":"output","id":"YczKVSgS-yf6rzDYONA9Y","data":[],"key":"LSn3GU2jml"}],"key":"S5Zb2WYhe4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T09:23:43.530303Z","iopub.status.busy":"2024-08-18T09:23:43.530132Z","iopub.status.idle":"2024-08-18T09:23:44.324304Z","shell.execute_reply":"2024-08-18T09:23:44.323785Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"f9d9TPKI4O"},{"type":"output","id":"Sw85EQHDCUnGn1zyzkIbp","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"oZ2ualAG78"}],"key":"yGG63y73wi"}],"key":"DkskPYOptk"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}