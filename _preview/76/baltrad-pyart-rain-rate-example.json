{"kind":"Notebook","sha256":"fd888776c3d20034d71750e915b7f7341802085caed74a268fadf17cf5d6e3f4","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/76/build/0_baltrad_pyart_rain-d8824af4a99f3d592b7336db6da18290.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hVWlEa6AOi"}],"key":"cHHBMeGOu8"}],"key":"vmENQfeCqY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HfZQRjO8W5"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"G8MTNnY26a"}],"key":"D4BUhmYy1u"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:40.650027Z","iopub.status.busy":"2024-08-18T13:29:40.649770Z","iopub.status.idle":"2024-08-18T13:29:41.313879Z","shell.execute_reply":"2024-08-18T13:29:41.313249Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"pmnTygalts"},{"type":"output","id":"NEyBGB-orkPXKw3seQ5y2","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"FlknndFV3u"}],"key":"ChKOFpYIXU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:41.316799Z","iopub.status.busy":"2024-08-18T13:29:41.316418Z","iopub.status.idle":"2024-08-18T13:29:41.672266Z","shell.execute_reply":"2024-08-18T13:29:41.671587Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"HB7dAeQ0uH"},{"type":"output","id":"9oTsQ4RV2C2xC6J8lZhaq","data":[],"key":"dhFfkgmBh5"}],"key":"cWRQEN9RJU"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K6iScK0Fuh"}],"key":"WjVR7rT9vY"}],"key":"cO6TIovqA7"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:41.675347Z","iopub.status.busy":"2024-08-18T13:29:41.674852Z","iopub.status.idle":"2024-08-18T13:29:42.692741Z","shell.execute_reply":"2024-08-18T13:29:42.692138Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"fqoSleXsMl"},{"type":"output","id":"HD2EB89B6DfHaZ534Pz2R","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"dKsWcUmDa9"}],"key":"zQVB0qey6H"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vCoW4NiXLq"}],"key":"N39tXHtU5R"}],"key":"Z5TSBxpQwI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z6VNQO6tRv"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"jX8w0PqeQ7"}],"key":"l5kI9QDOpi"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:42.695653Z","iopub.status.busy":"2024-08-18T13:29:42.695009Z","iopub.status.idle":"2024-08-18T13:29:42.729632Z","shell.execute_reply":"2024-08-18T13:29:42.729112Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"EzKhIa9IrM"},{"type":"output","id":"O7cYhnmD_AdbOs3eKaW64","data":[],"key":"rwl8gCrks3"}],"key":"AQNdvmmOxL"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TXYD1OYwuU"}],"key":"IBGVsERdxe"}],"key":"mAODY9gNCB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:42.731884Z","iopub.status.busy":"2024-08-18T13:29:42.731502Z","iopub.status.idle":"2024-08-18T13:29:42.783301Z","shell.execute_reply":"2024-08-18T13:29:42.782777Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"oRPuPRHGvb"},{"type":"output","id":"GXOrFvIcYWNmk-4THzNSC","data":[],"key":"K7owflz2IE"}],"key":"ipA28mLkry"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zUGstZl2MY"}],"key":"lvxU8swKRd"}],"key":"bOYP23QcPa"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:42.785839Z","iopub.status.busy":"2024-08-18T13:29:42.785454Z","iopub.status.idle":"2024-08-18T13:29:42.788314Z","shell.execute_reply":"2024-08-18T13:29:42.787806Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"klaGoQYU6X"},{"type":"output","id":"05pSaOWsQ2Eiy5GAH6-HZ","data":[],"key":"HeANFZA4ox"}],"key":"iLHppg3lVx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:42.790238Z","iopub.status.busy":"2024-08-18T13:29:42.789930Z","iopub.status.idle":"2024-08-18T13:29:43.257503Z","shell.execute_reply":"2024-08-18T13:29:43.256879Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"JONZIn9jCA"},{"type":"output","id":"pWNNZHY_6OGTHPLsYcMi5","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"20786a78fa0a6ee63e09230ec6e2a793","path":"/erad2024/_preview/76/build/20786a78fa0a6ee63e09230ec6e2a793.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"tpmV4FLPuW"}],"key":"Y3gIFbOR86"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:43.260294Z","iopub.status.busy":"2024-08-18T13:29:43.259886Z","iopub.status.idle":"2024-08-18T13:29:43.717649Z","shell.execute_reply":"2024-08-18T13:29:43.717094Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"U6sGPtnD7M"},{"type":"output","id":"VPA6vSSEBQEx09u1nk73V","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"64e065084d8f5ac385f231df448932c5","path":"/erad2024/_preview/76/build/64e065084d8f5ac385f231df448932c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"syhUpOELN6"}],"key":"x2CQHyVVQG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:43.719858Z","iopub.status.busy":"2024-08-18T13:29:43.719490Z","iopub.status.idle":"2024-08-18T13:29:44.157079Z","shell.execute_reply":"2024-08-18T13:29:44.156515Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"E59zWHQte8"},{"type":"output","id":"BZDDSRw6qocEb0701Kyt4","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6880cc843901b4ab45db376a178dd343","path":"/erad2024/_preview/76/build/6880cc843901b4ab45db376a178dd343.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"HDI13r8Fv4"}],"key":"uLQ2sTbZyH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:44.159074Z","iopub.status.busy":"2024-08-18T13:29:44.158895Z","iopub.status.idle":"2024-08-18T13:29:44.630729Z","shell.execute_reply":"2024-08-18T13:29:44.630184Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"nLq2tOtwV9"},{"type":"output","id":"uW_pzSAUyR9wJb5c6OjgM","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"33e445673dd6ecd05884cd9a6ef0485a","path":"/erad2024/_preview/76/build/33e445673dd6ecd05884cd9a6ef0485a.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"A9zlpiFV9E"}],"key":"HSjpp1fX0C"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U44f0szkoR"}],"key":"JOsiFpH9GT"}],"key":"ZXgkWSnXPh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:44.633499Z","iopub.status.busy":"2024-08-18T13:29:44.633306Z","iopub.status.idle":"2024-08-18T13:29:44.637312Z","shell.execute_reply":"2024-08-18T13:29:44.636692Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"v2e2lxYsOw"},{"type":"output","id":"Vvm7W2wVSQ3RZdFesXlrN","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"z5LnR6sqrx"}],"key":"QuVLBEWGYF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:44.639028Z","iopub.status.busy":"2024-08-18T13:29:44.638859Z","iopub.status.idle":"2024-08-18T13:29:44.818510Z","shell.execute_reply":"2024-08-18T13:29:44.817950Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"FCchXg4LvJ"},{"type":"output","id":"kLdqtfJ71mgGEsRxWymEm","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"ZyJdaBWUCB"}],"key":"qWGGww3EzZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:44.820555Z","iopub.status.busy":"2024-08-18T13:29:44.820387Z","iopub.status.idle":"2024-08-18T13:29:44.824186Z","shell.execute_reply":"2024-08-18T13:29:44.823677Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"Dct6x3Byew"},{"type":"output","id":"2ezcoPTNXhIb7Wz1qR1jO","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"BnZFS6GVgL"}],"key":"rW61A4eCZs"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:44.826136Z","iopub.status.busy":"2024-08-18T13:29:44.825782Z","iopub.status.idle":"2024-08-18T13:29:44.828548Z","shell.execute_reply":"2024-08-18T13:29:44.828102Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"FcL7nZaF8u"},{"type":"output","id":"mz3xA9k3IbL5K1Umzh9E6","data":[],"key":"mTTOc6egIM"}],"key":"KTaGvkjApC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"i5weD8dayP"}],"key":"bsey0hepHp"}],"key":"flGAblWWhc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:44.830592Z","iopub.status.busy":"2024-08-18T13:29:44.830125Z","iopub.status.idle":"2024-08-18T13:29:45.377814Z","shell.execute_reply":"2024-08-18T13:29:45.377289Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"XdRVx4KVU5"},{"type":"output","id":"YMquaQcZ9QufjfaYtQMoN","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"11417ad41bb26cd1532af626eb881158","path":"/erad2024/_preview/76/build/11417ad41bb26cd1532af626eb881158.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"BBrYH0IwPu"}],"key":"V4f7px8gSX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:45.380385Z","iopub.status.busy":"2024-08-18T13:29:45.379988Z","iopub.status.idle":"2024-08-18T13:29:45.854673Z","shell.execute_reply":"2024-08-18T13:29:45.854122Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"BZY5EKPcbc"},{"type":"output","id":"sqGt8oUBj1gVpRxsx-KO-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"99ae3810d21492782cb00e8156a1f142","path":"/erad2024/_preview/76/build/99ae3810d21492782cb00e8156a1f142.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"gQIjMjlznq"}],"key":"VQBjLV86Yc"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"eWUaywgxBj"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"SAgai08wmy"}],"key":"e8JCgyLCpT"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"MCE0Tl0aiI"}],"key":"a5MEvd6dR1"}],"key":"aOXzgnpxvA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:45.857566Z","iopub.status.busy":"2024-08-18T13:29:45.857075Z","iopub.status.idle":"2024-08-18T13:29:45.874868Z","shell.execute_reply":"2024-08-18T13:29:45.874222Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"gQLTsgQgM9"},{"type":"output","id":"gkmqKcrEEAzi8EHxKwSPo","data":[],"key":"wsNzOvmfwg"}],"key":"ibXEJAtAOT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:45.877734Z","iopub.status.busy":"2024-08-18T13:29:45.877194Z","iopub.status.idle":"2024-08-18T13:29:45.880573Z","shell.execute_reply":"2024-08-18T13:29:45.879976Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"zyySuZYOaX"},{"type":"output","id":"5S8qsEQqrbtdsFvm2xo49","data":[],"key":"r5Kq5RZVKj"}],"key":"IRZ9HrSelF"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KiY0jaRpf1"}],"key":"TzgZNz7tWo"}],"key":"L3tZAQ4LKR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:45.883382Z","iopub.status.busy":"2024-08-18T13:29:45.883136Z","iopub.status.idle":"2024-08-18T13:29:46.310310Z","shell.execute_reply":"2024-08-18T13:29:46.309573Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"T4ZMq2ly4k"},{"type":"output","id":"62qAdyM56259gd4sBlGHF","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da8e469afeab4ceaf82135533fae0204","path":"/erad2024/_preview/76/build/da8e469afeab4ceaf82135533fae0204.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"s52rR2DPYI"}],"key":"LhN5ZpP1B3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QhbWFZ6LST"}],"key":"Z1e0jKXkTI"}],"key":"DI9KEz1Ojw"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:46.313107Z","iopub.status.busy":"2024-08-18T13:29:46.312556Z","iopub.status.idle":"2024-08-18T13:29:46.328418Z","shell.execute_reply":"2024-08-18T13:29:46.327893Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"bOzokJ2iZN"},{"type":"output","id":"_BJK-Vjh29b7c3QGFA5v5","data":[],"key":"w9Q9snBQsO"}],"key":"yD7N7pbtCW"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-18T13:29:46.330715Z","iopub.status.busy":"2024-08-18T13:29:46.330400Z","iopub.status.idle":"2024-08-18T13:29:47.132928Z","shell.execute_reply":"2024-08-18T13:29:47.132400Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"d4H91dLDbP"},{"type":"output","id":"S5Yau_eOiSkTvNZOqezhu","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"ZFOqvcBJIU"}],"key":"T7f3y60Q0m"}],"key":"oE8dF4pfyq"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}