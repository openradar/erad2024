{"kind":"Notebook","sha256":"72a276fe075fb9f541d6134ce159110129861d0199e053574c82857f50259fc3","slug":"wradlib-clutter-beamblockage","location":"/notebooks/wradlib/wradlib_clutter_beamblockage.ipynb","dependencies":[],"frontmatter":{"title":"clutter and beamblockage","content_includes_title":true,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"thumbnail":"/erad2024/_preview/76/build/wradlib_logo.svg-4e564fbee3d14bd86010c270e7ebee23.png","exports":[{"format":"ipynb","filename":"wradlib_clutter_beamblockage.ipynb","url":"/erad2024/_preview/76/build/wradlib_clutter_beam-90d9070ce48e39b5daec31348d00e4a3.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/erad2024/_preview/76/build/wradlib_logo.svg-4e564fbee3d14bd86010c270e7ebee23.png","alt":"wradlib logo png","key":"yJZqsLEpek","urlSource":"../images/logos/wradlib_logo.svg.png"}],"key":"qFRsBwHOed"}],"key":"tZ7c04Bquj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"clutter and beamblockage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZAbb5JP2Qw"}],"identifier":"clutter-and-beamblockage","label":"clutter and beamblockage","html_id":"clutter-and-beamblockage","implicit":true,"key":"qFqtXRNHYv"}],"key":"TxUX15JPvz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DpfNtI68l5"}],"key":"BtowRoMpS9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ni8usrgtXQ"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"wRetqhEw5V"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this notebook, we will cover:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PtQ9m9a7OT"}],"key":"YrtE1nqKMM"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Reading data using xradar","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mzV3sF6vJ3"}],"key":"nMw3SENzR5"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Clutter detection","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"wzmk1PXJi3"}],"key":"irQWnRqkDx"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Beam Blockage calculation","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"HxEHaMJG8a"}],"key":"sB3QDLydGo"}],"key":"jirmVhB2tM"}],"key":"hP2TJvwL7w"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H3RbIoYG9E"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"aJ1t7WUhS2"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iBCw8F9RHM"}],"key":"Bmf35c4xBm"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sdMFhdoUTu"}],"key":"wpj8cbiDGw"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OMjfDrlZMM"}],"key":"qC6FF9JseC"}],"key":"Nj7EmFRVf4"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://tutorial.xarray.dev/intro.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Xarray Basics","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fiFQ8Pqbwk"}],"urlSource":"https://tutorial.xarray.dev/intro.html","key":"r9bAscX0II"}],"key":"rlBiO4tCyc"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZsUXpUPzCQ"}],"key":"K7nDJxpxsA"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Basic Dataset/DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kzXCJOC6Qy"}],"key":"HSM7159ou1"}],"key":"ZJ4noYKFtd"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Matplotlib Basics","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"NQ5rA5FyBS"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","key":"ZuOo003Iph"}],"key":"SffCVM2LOk"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Ux6TfcZNiC"}],"key":"I0NjJ2qrt3"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Basic Plotting","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"bhiE7EKVJe"}],"key":"Twql0Dn3kC"}],"key":"fM9W3OB7KO"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"NWncnoNoB6"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"yT3kLRJDlg"}],"key":"eHOzB4ZjK9"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"p3MKmaZPWa"}],"key":"rALwijSwD9"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Projections","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Di1kdkW32h"}],"key":"UyOvFtmJMB"}],"key":"SBt7V54Iww"}],"key":"ADT1WDLM0r"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"qW6WUMTR3P"}],"key":"FoN6D7reO2"},{"type":"text","value":": 10 minutes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"HMOm5Nan7M"}],"key":"Kf8uR5KehF"}],"key":"Fbnxc8MROW"}],"key":"rCIMmhPlAa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GonpVd65S9"}],"key":"egfuAy2AOX"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ivWgcXe4H5"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"RYMqDulPX0"}],"key":"tk567wFwLQ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport wradlib as wrl\nimport matplotlib.pyplot as plt\nimport xarray as xr\nimport cartopy\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\nimport xradar as xd\nimport hvplot\nimport hvplot.xarray","key":"oAp3HkAD8V"},{"type":"output","id":"heqCbCtmTmZfh2gUOAsrT","data":[],"key":"zMtEWlJOcE"}],"key":"BRzuDUe53E"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rNgi9BtKAC"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"T4bMfp0M4k"}],"key":"MBr2L46bMi"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024\"\n!mkdir -p data\nfiles = [\n    \"20240522_MeteoSwiss_ARPA_Lombardia/Data/Xband/DES_VOL_RAW_20240522_1600.nc\",\n    \"wradlib/desio_dem.tif\",\n]\nfor file in files:\n    file_remote = os.path.join(path, file)\n    file_local = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(file_local):\n        print(f\"downloading, {file_local}\")\n        urllib.request.urlretrieve(f\"{URL}{file_remote}\", file_local)","key":"jlGJ9Q6t9A"},{"type":"output","id":"7RFyoF2HDLRfIrgG2yswB","data":[],"key":"oPmDqqHC0m"}],"key":"IguiIRRnBy"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Open CfRadial1 Volume","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N9ZwcN7bvs"}],"identifier":"open-cfradial1-volume","label":"Open CfRadial1 Volume","html_id":"open-cfradial1-volume","implicit":true,"key":"yETg0QYPhi"}],"key":"lywPftiP3Q"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"reindex = dict(angle_res=1, direction=1, start_angle=0, stop_angle=360)\ndtree = xd.io.open_cfradial1_datatree(\"data/DES_VOL_RAW_20240522_1600.nc\")\ndisplay(dtree.load())","key":"sVsaG3kuQu"},{"type":"output","id":"LGB2b0l80-Sc9r_ay5zFl","data":[],"key":"ebfeSBH08C"}],"key":"MhI2UhKHyD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get first sweep","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qKBXkatFPA"}],"identifier":"get-first-sweep","label":"Get first sweep","html_id":"get-first-sweep","implicit":true,"key":"mqs6YCzVEf"}],"key":"Lyy0gUEzVM"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp = (\n    dtree[\"sweep_0\"]\n    .to_dataset()\n    .wrl.georef.georeference(crs=wrl.georef.get_earth_projection())\n    .set_coords(\"sweep_mode\")\n)\nswp.x.attrs = xd.model.get_longitude_attrs()\nswp.y.attrs = xd.model.get_latitude_attrs()","key":"uPEUrQYsj9"},{"type":"output","id":"E0oX78n0t6x9rB-F-hYHu","data":[],"key":"lPjPGNjYDz"}],"key":"UCCw4SG75Q"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display(swp)","key":"bk9NGtbMOZ"},{"type":"output","id":"Z9kyP_fBtINkGLSbmfhjq","data":[],"key":"HpsfdoSzNh"}],"key":"dWEpmi5QIk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get Digital Elevation Map (DEM)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WheqD5onbH"}],"identifier":"get-digital-elevation-map-dem","label":"Get Digital Elevation Map (DEM)","html_id":"get-digital-elevation-map-dem","implicit":true,"key":"Rs61zQdCAs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If we have access to the NASA EarthData GESDISC, we can use the BearerToken to retrieve SRTM data corresponding to the actual radar domain. Or we can choose the precompiled GeoTiff.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CLIgT63LdH"}],"key":"yTNrjJ056E"}],"key":"vKXEOhIi7H"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# extent = [swp.x.min().values, swp.x.max().values, swp.y.min().values, swp.y.max().values]\n# import os\n# os.environ[\"WRADLIB_EARTHDATA_BEARER_TOKEN\"] = \"\"\n# dem = wrl.io.get_srtm(extent)\n# wrl.io.write_raster_dataset(\"desio_dem.tif\", dem)","key":"o32eSBwH68"},{"type":"output","id":"u9Z2hBLm17JUhIzWgKhA4","data":[],"key":"JAFNTl4qhG"}],"key":"RRuu4oBtj7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dem = (\n    xr.open_dataset(\"desio_dem.tif\", engine=\"rasterio\")\n    .isel(band=0)\n    .rename(band_data=\"DEM\")\n    .reset_coords(\"band\", drop=True)\n)\ndisplay(dem)","key":"vtvuDKHehZ"},{"type":"output","id":"pUFJ0vy86GQSFHQ4Gkibq","data":[],"key":"z6wOtALy8o"}],"key":"YXDBXkg4yK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Extract radar parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"drxdFxWTXo"}],"identifier":"extract-radar-parameters","label":"Extract radar parameters","html_id":"extract-radar-parameters","implicit":true,"key":"mJ6BadGniB"}],"key":"hLGExSw4Ki"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"radar_parameters = dtree[\"radar_parameters\"]","key":"VCHjGM0ZPd"},{"type":"output","id":"SyRytb3fulwjfeUPdIKM3","data":[],"key":"qWpTdHyNhU"}],"key":"ny6zNXiCo7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"radar_parameters[\"radar_beam_width_h\"]","key":"QoGpIzhWnm"},{"type":"output","id":"eH_3fcQoJwPXxcYQTNGkK","data":[],"key":"KgKd9HkywR"}],"key":"PNct0ORAqx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prepare DEM for Polar Processing","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WuMUVqzxem"}],"identifier":"prepare-dem-for-polar-processing","label":"Prepare DEM for Polar Processing","html_id":"prepare-dem-for-polar-processing","implicit":true,"key":"Q0s9jm24lU"}],"key":"BHyP5KCApC"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"bw = radar_parameters[\"radar_beam_width_h\"]\ny, x = xr.broadcast(dem.y, dem.x)\nrastercoords = np.dstack([x, y])\n\npolcoords = np.dstack([swp.x.values, swp.y.values])\n# Map rastervalues to polar grid points\npolarvalues = wrl.ipol.cart_to_irregular_spline(\n    rastercoords, dem.DEM, polcoords, order=3, prefilter=False\n)","key":"YAqXLDQGPU"},{"type":"output","id":"bArzbzdpVovVW_EbcdP2k","data":[],"key":"nOysFhqD6s"}],"key":"J9v4BQTJfe"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp = swp.assign(\n    DEM=([\"azimuth\", \"range\"], polarvalues),\n)","key":"fc4Tt3xI7G"},{"type":"output","id":"yWtXl4pC3ebT9m-tO7mxF","data":[],"key":"xgmTIUHKo0"}],"key":"x5FSeydEtX"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot scan strategy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cL9m0rK8uW"}],"identifier":"plot-scan-strategy","label":"Plot scan strategy","html_id":"plot-scan-strategy","implicit":true,"key":"cQmyRNcCFm"}],"key":"GY4s66GECl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp","key":"ZGqYWxoWN9"},{"type":"output","id":"hAh3bAXoQBGePtqDPkWDV","data":[],"key":"Vxl0S0dm4R"}],"key":"f02w9iMRh3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"nrays = swp.azimuth.size\nnbins = swp.range.size\nrange_res = 300.0\nranges = np.arange(nbins) * range_res\nelevs = dtree.root.sweep_fixed_angle.values\nsitecoords = (\n    dtree.root.longitude.values.item(),\n    dtree.root.latitude.values.item(),\n    dtree.root.altitude.values.item(),\n)\n\nax = wrl.vis.plot_scan_strategy(\n    ranges,\n    elevs,\n    sitecoords,\n    beamwidth=radar_parameters[\"radar_beam_width_h\"].values,\n    terrain=None,\n)","key":"eCx8md9vI4"},{"type":"output","id":"NJUDKA8DNkKIjgqexqxDg","data":[],"key":"H9OccsoW3y"}],"key":"mB53uS5LJV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jEblfdrw0j"},{"type":"inlineCode","value":"terrain=swp.DEM.sel(azimuth=0, method=\"nearest\")","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uYgObsZGjI"},{"type":"text","value":" to get some arbitrary ray.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wsbzrdB58a"}],"key":"EvEHPOBZBa"}],"key":"JZpFEA228I"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"ax = wrl.vis.plot_scan_strategy(\n    ranges,\n    elevs,\n    sitecoords,\n    beamwidth=radar_parameters[\"radar_beam_width_h\"].values,\n    terrain=swp.DEM.sel(azimuth=0, method=\"nearest\"),\n)","key":"wHLeD98FBl"},{"type":"output","id":"O4D6WLD0f6ImxQ93tXN97","data":[],"key":"vEFj6SkklU"}],"key":"UiRbQELB6r"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Arbitrary cuts through volume","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cBHQxDNegE"}],"identifier":"arbitrary-cuts-through-volume","label":"Arbitrary cuts through volume","html_id":"arbitrary-cuts-through-volume","implicit":true,"key":"DurSPC1yAt"}],"key":"OB68jVGg0X"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"sweeps = []\nreindex = dict(angle_res=1, direction=1, start_angle=0, stop_angle=360)\nfor sn in dtree.groups:\n    if \"sweep\" in sn:\n        sweeps.append(\n            dtree[sn]\n            .ds.pipe(xd.util.reindex_angle, **reindex)\n            .set_coords(\"sweep_mode\")\n            .wrl.georef.georeference()\n            .set_coords(\"sweep_fixed_angle\")\n        )\nvol = xr.concat(sweeps, dim=\"sweep_fixed_angle\")","key":"i5zmbzWtfA"},{"type":"output","id":"LbupQJT8QsS4TGc7ceWJX","data":[],"key":"zjbp0BrdNM"}],"key":"lxhSu7JKAP"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Pass meta variables to coords to avoid some issues\nvol = vol.set_coords((\"sweep_mode\", \"sweep_number\", \"prt_mode\", \"follow_mode\"))\n# Reduce coordinates so the georeferencing works\nvol[\"elevation\"] = vol[\"elevation\"].median(\"azimuth\")\nvol[\"time\"] = vol[\"time\"].min(\"azimuth\")\nvol[\"sweep_mode\"] = vol[\"sweep_mode\"].min()\nvol","key":"QwJ3fViUjl"},{"type":"output","id":"_5jhn0ibiQDcVS5sj_U1O","data":[],"key":"pkN15j5z6P"}],"key":"EgmfviSq6Z"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Test extract single azimuth\nazimuth = 180\nrec_rhi = wrl.util.cross_section_ppi(vol, azimuth, method=\"nearest\")","key":"Fl4FhB2Bgo"},{"type":"output","id":"_ERx3iv6axFlV7aKzyA2X","data":[],"key":"SnBBwISbnS"}],"key":"crOgPey45L"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display(rec_rhi)","key":"CASN8SBNer"},{"type":"output","id":"S3c1JE1T6rGlkyvb76m_A","data":[],"key":"lGHfvD2oPw"}],"key":"f2ewW93cAl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rec_rhi.DBZ.plot.contourf(x=\"range\", y=\"z\", ylim=(0, 12000), levels=21)","key":"KXNhbhkucV"},{"type":"output","id":"Gj8BUK5t5NYwGlHuR24S3","data":[],"key":"U22whqrrYf"}],"key":"TnfiB0yCiZ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rec_cut = wrl.util.cross_section_ppi(\n    vol,\n    [(8.5, 45.8), (9.75, 45.3)],\n    crs=wrl.georef.get_earth_projection(),\n    method=\"nearest\",\n    npl=501,\n)\ndisplay(rec_cut)","key":"muE2DkSOvc"},{"type":"output","id":"TA5hDApGhqFcNm8gTfMnI","data":[],"key":"F8G0d2nrTr"}],"key":"roxwvDTUHG"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rec_cut.DBZ.plot.contourf(\n    x=\"xyi\", y=\"z\", levels=21, ylim=(0, 12000), cmap=\"HomeyerRainbow\"\n)","key":"Ny6URpZxLg"},{"type":"output","id":"5nMhjNuGEXySuJKPHUf1L","data":[],"key":"fyTudhnlCy"}],"key":"rIlZOgEUoy"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate clutter map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j0KdnYJ1wA"}],"identifier":"calculate-clutter-map","label":"Calculate clutter map","html_id":"calculate-clutter-map","implicit":true,"key":"wjG4zJfAd5"}],"key":"qY7TEEtNAJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"clmap = swp.DBZ_TOT.wrl.classify.filter_gabella(\n    wsize=5,\n    thrsnorain=0.0,\n    tr1=21.0,  # 21.,\n    n_p=23.0,  # 23,\n    tr2=1.3,\n    rm_nans=False,\n)\nswp = swp.assign({\"CMAP\": clmap})","key":"SS0AXhXpRY"},{"type":"output","id":"so70rp49_dNm-BWnAAe-n","data":[],"key":"oT9DIoKP7l"}],"key":"gNcTNeQqOO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Reflectivities, Clutter and Cluttermap","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dNAVdAyw4V"}],"identifier":"plot-reflectivities-clutter-and-cluttermap","label":"Plot Reflectivities, Clutter and Cluttermap","html_id":"plot-reflectivities-clutter-and-cluttermap","implicit":true,"key":"nANznq1Lrh"}],"key":"Ik4fxEx5LF"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(15, 12))\nax1 = fig.add_subplot(221)\nfrom osgeo import osr\n\nwgs84 = osr.SpatialReference()\nwgs84.ImportFromEPSG(4326)\n# swp = swp.sel(range=slice(0, 100000)).set_coords(\"sweep_mode\").wrl.georef.georeference(crs=wgs84)\nswp.DBZ_TOT.plot(x=\"x\", y=\"y\", ax=ax1, vmin=0, vmax=60)\nax1.set_title(\"Reflectivity raw\")\nax2 = fig.add_subplot(222)\nswp.CMAP.plot(x=\"x\", y=\"y\", ax=ax2)\nax2.set_title(\"Cluttermap\")\nax3 = fig.add_subplot(223)\nswp.DBZ_TOT.where(swp.CMAP == 1).plot(x=\"x\", y=\"y\", ax=ax3, vmin=0, vmax=60)\nax3.set_title(\"Clutter\")\nax4 = fig.add_subplot(224)\nswp.DBZ_TOT.where(swp.CMAP < 1).plot(x=\"x\", y=\"y\", ax=ax4, vmin=0, vmax=60)\nax4.set_title(\"Reflectivity clutter removed\")","key":"CzoEEx8d1v"},{"type":"output","id":"KYO-EVVKws1Oh-y5c4xEn","data":[],"key":"aThZuHlle0"}],"key":"l61F4vLLnp"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp","key":"elguyfRZYm"},{"type":"output","id":"alv6CehOj0HqYJXVSZB6v","data":[],"key":"mJ2zScIoVQ"}],"key":"g8WAUdC5Rd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare with corrected reflectivity from signal processor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"laGvjxcxWA"}],"identifier":"compare-with-corrected-reflectivity-from-signal-processor","label":"Compare with corrected reflectivity from signal processor","html_id":"compare-with-corrected-reflectivity-from-signal-processor","implicit":true,"key":"aoAhZJw0JZ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plus additional simple RHOHV filter","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rkOpma0yc9"}],"key":"uXPSvbhyMj"}],"key":"gtzBURFbxt"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(15, 6))\nax1 = fig.add_subplot(121)\nswp.DBZ.plot(x=\"x\", y=\"y\", ax=ax1, vmin=0, vmax=60)\nax1.set_title(\"Reflectivity corr\")\nax2 = fig.add_subplot(122)\nswp.DBZ_TOT.where((swp.CMAP < 1) & (swp.RHOHV >= 0.8)).plot(\n    x=\"x\", y=\"y\", ax=ax2, vmin=0, vmax=60\n)\nax2.set_title(\"Reflectivity clutter removed\")","key":"otAeJkgaMZ"},{"type":"output","id":"VNfx6quG7tsNJR1eDgIAD","data":[],"key":"pxM8yT4D3P"}],"key":"LUrqndDAP1"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(8, 5))\nax1 = fig.add_subplot(111)\nswp.CMAP.where(swp.CMAP == 1).plot(x=\"x\", y=\"y\", vmin=0, vmax=1, cmap=\"turbo\")\nax1.set_title(\"Reflectivity corr\")\ndem.DEM.plot(ax=ax1, zorder=-2, cmap=\"terrain\", vmin=0)","key":"PSCHtEh9if"},{"type":"output","id":"McGRG0S9WhBj-OOgh6APm","data":[],"key":"jJLf8shsFs"}],"key":"x80Fb3DGPP"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use hvplot for zooming and panning","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UsfSf6mwop"}],"identifier":"use-hvplot-for-zooming-and-panning","label":"Use hvplot for zooming and panning","html_id":"use-hvplot-for-zooming-and-panning","implicit":true,"key":"xhftV7ZtbO"}],"key":"hwpoA2V8OJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We need to rechunk the coordinates as hvplot needs chunked variables and coords.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QIxplgz5Rx"}],"key":"qcFV5vuwCM"}],"key":"ocLyqQACH0"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cl = (\n    swp.CMAP.where(swp.CMAP == 1)\n    .chunk(chunks={})\n    .hvplot.quadmesh(\n        x=\"x\", y=\"y\", cmap=\"turbo\", width=600, height=500, clim=(0, 1), rasterize=True\n    )\n)\ndm = dem.DEM.chunk(chunks={}).hvplot(\n    x=\"x\", y=\"y\", cmap=\"terrain\", width=600, height=500, rasterize=True\n)\ndm * cl","key":"hgOA3pb8ij"},{"type":"output","id":"XmleSL3LngmmFuoYBSxbj","data":[],"key":"mxua4tyDNn"}],"key":"ATQZWXC6Fm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"BeamBlockage Calculation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FH4eXpRpQD"}],"identifier":"beamblockage-calculation","label":"BeamBlockage Calculation","html_id":"beamblockage-calculation","implicit":true,"key":"rc0Q9FRNRK"}],"key":"ueAMR92pcI"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"beamradius = wrl.util.half_power_radius(swp.range, bw)\nPBB = wrl.qual.beam_block_frac(polarvalues, swp.z.values, beamradius)\nPBB = np.ma.masked_invalid(PBB)\nCBB = wrl.qual.cum_beam_block_frac(PBB)","key":"ypUq13zGyk"},{"type":"output","id":"jlnSiDIXXxFEleTvBJOXF","data":[],"key":"zu2qDpihrq"}],"key":"MriUbHDUYu"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp = swp.assign(\n    CBB=([\"azimuth\", \"range\"], CBB),\n    PBB=([\"azimuth\", \"range\"], PBB),\n)","key":"kjqAX5ewbc"},{"type":"output","id":"r_jNYZ63uhy6_OIiQ83g-","data":[],"key":"nYAoE3IPYt"}],"key":"Hlnjz88nPY"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# just a little helper function to style x and y axes of our maps\ndef annotate_map(ax, cm=None, title=\"\"):\n    # ticks = (ax.get_xticks() / 1000).astype(int)\n    # ax.set_xticklabels(ticks)\n    # ticks = (ax.get_yticks() / 1000).astype(int)\n    # ax.set_yticklabels(ticks)\n    # ax.set_xlabel(\"Kilometers\")\n    # ax.set_ylabel(\"Kilometers\")\n    if not cm is None:\n        plt.colorbar(cm, ax=ax)\n    if not title == \"\":\n        ax.set_title(title)\n    ax.grid()","key":"ZQ2AusEE0N"},{"type":"output","id":"Xrqo-iseLtvvaB_bTe9sm","data":[],"key":"oacRL3to7R"}],"key":"iBgLyFZHh6"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib as mpl\n\nsitecoords = (swp.longitude.values, swp.latitude.values, swp.altitude.values)\nr = swp.range.values\naz = swp.azimuth.values\n\nalt = swp.z.values\nfig = plt.figure(figsize=(15, 12))\n\n# create subplots\nax1 = plt.subplot2grid((2, 2), (0, 0))\nax2 = plt.subplot2grid((2, 2), (0, 1))\nax3 = plt.subplot2grid((2, 2), (1, 0), colspan=2, rowspan=1)\n\n# azimuth angle\nangle = 0\n\n# Plot terrain (on ax1)\ndem_pm = swp.DEM.wrl.vis.plot(ax=ax1, cmap=mpl.cm.terrain, vmin=0.0, add_colorbar=False)\nswp.sel(azimuth=0, method=\"nearest\").plot.scatter(\n    x=\"x\", y=\"y\", marker=\".\", color=\"r\", alpha=0.2, ax=ax1\n)\nax1.plot(swp.longitude.values, swp.latitude.values, \"ro\")\nannotate_map(\n    ax1,\n    dem_pm,\n    \"Terrain within {0} km range\".format(np.max(swp.range.values / 1000.0) + 0.1),\n)\n\n# Plot CBB (on ax2)\ncbb = swp.CBB.wrl.vis.plot(ax=ax2, cmap=mpl.cm.PuRd, vmin=0, vmax=1, add_colorbar=False)\nannotate_map(ax2, cbb, \"Beam-Blockage Fraction\")\n\n# Plot single ray terrain profile on ax3\n(bc,) = ax3.plot(\n    swp.range / 1000.0, swp.z[angle, :], \"-b\", linewidth=3, label=\"Beam Center\"\n)\n(b3db,) = ax3.plot(\n    swp.range.values / 1000.0,\n    (swp.z[angle, :] + beamradius),\n    \":b\",\n    linewidth=1.5,\n    label=\"3 dB Beam width\",\n)\nax3.plot(swp.range / 1000.0, (swp.z[angle, :] - beamradius), \":b\")\nax3.fill_between(swp.range / 1000.0, 0.0, swp.DEM[angle, :], color=\"0.75\")\nax3.set_xlim(0.0, np.max(swp.range / 1000.0) + 0.1)\nax3.set_ylim(0.0, 3000)\nax3.set_xlabel(\"Range (km)\")\nax3.set_ylabel(\"Altitude (m)\")\nax3.grid()\n\naxb = ax3.twinx()\n(bbf,) = axb.plot(swp.range / 1000.0, swp.CBB[angle, :], \"-k\", label=\"BBF\")\naxb.set_ylabel(\"Beam-blockage fraction\")\naxb.set_ylim(0.0, 1.0)\naxb.set_xlim(0.0, np.max(swp.range / 1000.0) + 0.1)\n\n\nlegend = ax3.legend(\n    (bc, b3db, bbf),\n    (\"Beam Center\", \"3 dB Beam width\", \"BBF\"),\n    loc=\"upper left\",\n    fontsize=10,\n)","key":"bsqd4Fla2y"},{"type":"output","id":"iDcfEgUCgvoFO93Q4ru3j","data":[],"key":"ODdadUEVZZ"}],"key":"CnZMwPNUFZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Some EyeCandy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rwgQM5uNfw"}],"identifier":"some-eyecandy","label":"Some EyeCandy","html_id":"some-eyecandy","implicit":true,"key":"m7ehxdJtMF"}],"key":"sQIOyL9mdT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def height_formatter(x, pos):\n    x = (x - 6370000) / 1000\n    fmt_str = \"{:g}\".format(x)\n    return fmt_str\n\n\ndef range_formatter(x, pos):\n    x = x / 1000.0\n    fmt_str = \"{:g}\".format(x)\n    return fmt_str","key":"e4dQQJ9P9G"},{"type":"output","id":"yMGuNwdHAvj5Yyf-nQr3Y","data":[],"key":"hYSY3miRoP"}],"key":"Ou0ysgIhii"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(10, 6))\n\ncgax, caax, paax = wrl.vis.create_cg(fig=fig, rot=0, scale=1)\n\n# azimuth angle\nangle = 0\n\n# fix grid_helper\ner = 6370000\ngh = cgax.get_grid_helper()\ngh.grid_finder.grid_locator2._nbins = 80\ngh.grid_finder.grid_locator2._steps = [1, 2, 4, 5, 10]\n\n# calculate beam_height and arc_distance for ke=1\n# means line of sight\nbhe = wrl.georef.bin_altitude(r, 0, sitecoords[2], re=er, ke=1.0)\nade = wrl.georef.bin_distance(r, 0, sitecoords[2], re=er, ke=1.0)\nnn0 = np.zeros_like(r)\n# for nice plotting we assume earth_radius = 6370000 m\necp = nn0 + er\n# theta (arc_distance sector angle)\nthetap = -np.degrees(ade / er) + 90.0\n\n# zero degree elevation with standard refraction\nbh0 = wrl.georef.bin_altitude(r, 0, sitecoords[2], re=er)\n\n# plot (ecp is earth surface normal null)\n(bes,) = paax.plot(thetap, ecp, \"-k\", linewidth=3, label=\"Earth Surface NN\")\n(bc,) = paax.plot(thetap, ecp + alt[angle, :], \"-b\", linewidth=3, label=\"Beam Center\")\n(bc0r,) = paax.plot(thetap, ecp + bh0, \"-g\", label=\"0 deg Refraction\")\n(bc0n,) = paax.plot(thetap, ecp + bhe, \"-r\", label=\"0 deg line of sight\")\n(b3db,) = paax.plot(\n    thetap, ecp + alt[angle, :] + beamradius, \":b\", label=\"+3 dB Beam width\"\n)\npaax.plot(thetap, ecp + alt[angle, :] - beamradius, \":b\", label=\"-3 dB Beam width\")\n\n# orography\npaax.fill_between(thetap, ecp, ecp + polarvalues[angle, :], color=\"0.75\")\n\n# shape axes\ncgax.set_xlim(0, np.max(ade))\ncgax.set_ylim([ecp.min() - 1000, ecp.max() + 2500])\ncaax.grid(True, axis=\"x\")\ncgax.grid(True, axis=\"y\")\ncgax.axis[\"top\"].toggle(all=False)\ncaax.yaxis.set_major_locator(\n    mpl.ticker.MaxNLocator(steps=[1, 2, 4, 5, 10], nbins=20, prune=\"both\")\n)\ncaax.xaxis.set_major_locator(mpl.ticker.MaxNLocator())\ncaax.yaxis.set_major_formatter(mpl.ticker.FuncFormatter(height_formatter))\ncaax.xaxis.set_major_formatter(mpl.ticker.FuncFormatter(range_formatter))\n\ncaax.set_xlabel(\"Range (km)\")\ncaax.set_ylabel(\"Altitude (km)\")\n\nlegend = paax.legend(\n    (bes, bc0n, bc0r, bc, b3db),\n    (\n        \"Earth Surface NN\",\n        \"0 deg line of sight\",\n        \"0 deg std refraction\",\n        \"Beam Center\",\n        \"3 dB Beam width\",\n    ),\n    loc=\"lower left\",\n    fontsize=10,\n)","key":"KBFPbQz0nQ"},{"type":"output","id":"C-J9tiO6DLVobOTzVWTW3","data":[],"key":"ZGlLreSiRu"}],"key":"MOhPWc2mpp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BFMq1EkBxM"}],"key":"RX0Y2ymoo7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PQw9e55Swe"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"kg4guTmMbE"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We’ve just learned how to use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fXGuX9Yx5K"},{"type":"inlineMath","value":"\\omega radlib","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>l</mi><mi>i</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\omega radlib</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">ib</span></span></span></span>","key":"s1PbpHElXC"},{"type":"text","value":"’s Gabella clutter detection for single sweeps. We’ve looked into digital elevation maps and beam blockage calculations.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qaqzdQCmqB"}],"key":"HsKMZOU3lj"}],"key":"u1Av6RWe19"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Dc2AYgvzsm"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"oUQFJ8KrVo"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://docs.xarray.dev","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"xarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"s578y9cYJt"}],"urlSource":"https://docs.xarray.dev","key":"TldGesw5Q2"}],"key":"FY7hyDMv1B"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://docs.dask.org/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"dask","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"cOvQx7IW6X"}],"urlSource":"https://docs.dask.org/","key":"XEW3a9ASQJ"}],"key":"VZEujHnmKk"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/importers.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"xradar backends","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dXqeBrNLOz"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/importers.html","key":"SlW6Kk8BtC"}],"key":"nC0JqNFmPb"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://ncar.github.io/CfRadial/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"CfRadial1","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"hqyAdWVNoE"}],"urlSource":"https://ncar.github.io/CfRadial/","key":"CxbYQzJxOO"}],"key":"g0fXu1sDEw"}],"key":"yEm8VG3z7o"}],"key":"ClgrSJ0KNm"}],"key":"IsA6IzVjK1"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Py-ART Basics with Xradar","url":"/pyart-basics","group":"Py-ART and wradlib"},"next":{"title":"I/O model","url":"/baltrad-io","group":"BALTRAD"}}},"domain":"http://localhost:3000"}