{"kind":"Notebook","sha256":"05c81913b052b16c190a18905e9df0744ae2f8ccf3c6a019ece2d83a8de66d21","slug":"wradlib-clutter-beamblockage","location":"/notebooks/wradlib/wradlib_clutter_beamblockage.ipynb","dependencies":[],"frontmatter":{"title":"clutter and beamblockage","content_includes_title":true,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"thumbnail":"/erad2024/_preview/76/build/wradlib_logo.svg-36904405a5eff16a7e3ac16cb0498713.png","exports":[{"format":"ipynb","filename":"wradlib_clutter_beamblockage.ipynb","url":"/erad2024/_preview/76/build/wradlib_clutter_beam-68b1006b83c1afdfb3cecbe640456dd5.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/erad2024/_preview/76/build/wradlib_logo.svg-36904405a5eff16a7e3ac16cb0498713.png","alt":"wradlib logo png","key":"qI8aVcGMW6","urlSource":"../images/logos/wradlib_logo.svg.png"}],"key":"lSUrEgHczH"}],"key":"KLqqI0jOOp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"clutter and beamblockage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H7NeEzrgnN"}],"identifier":"clutter-and-beamblockage","label":"clutter and beamblockage","html_id":"clutter-and-beamblockage","implicit":true,"key":"ZKfZHK2PkK"}],"key":"v6MBeLu14m"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"c2LIR8kS1R"}],"key":"IVVaVEyuAJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SeXa9l0Ox3"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"Iu9gpNYkMO"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this notebook, we will cover:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RfG3zrK0V2"}],"key":"xBg7sOF43i"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Reading data using xradar","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"J9tdm3uvtT"}],"key":"crarGINf7d"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Clutter detection","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"VgBlZx1mw1"}],"key":"oGNSLXFwv0"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Beam Blockage calculation","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"DHgrq4oE07"}],"key":"qGzr35pH6U"}],"key":"XjBEOnIb0b"}],"key":"MHcCaNzWsH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S79g420uwl"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"DNBVZgcpwr"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RSxPjMMVuT"}],"key":"VQfTLD022C"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eX3xYHskDy"}],"key":"qIkyUV2sMA"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RxRwZSa0P7"}],"key":"zsLhVEx0Gf"}],"key":"cCVJMy408I"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://tutorial.xarray.dev/intro.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Xarray Basics","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xqTVS5KO2c"}],"urlSource":"https://tutorial.xarray.dev/intro.html","key":"Nyk5pmtvoH"}],"key":"iwXORhYihe"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"q223RfSS2D"}],"key":"ErcWwVrFf8"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Basic Dataset/DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HVNCrvWLhb"}],"key":"ZdlK2EtZp7"}],"key":"JTWeZRI7GV"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Matplotlib Basics","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"cKYle691jo"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","key":"fmac3QmyU6"}],"key":"tZvCg3eUMk"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"XoBeGdcvcD"}],"key":"GjYawZcDFK"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Basic Plotting","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"alalpxubsk"}],"key":"k2GvB4QAsV"}],"key":"EcTmKOCrZI"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"M3mcnhIdV9"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"uLQi0RNc7z"}],"key":"PcjIFqKAx5"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"M7QfFLL7qQ"}],"key":"SdXmNWgTco"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Projections","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rEoTMwTri0"}],"key":"kuXWM6t1n1"}],"key":"pEEZBI3ofB"}],"key":"rkP6T7tEbk"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"eR3Zl1HTGh"}],"key":"nb7XGRFxes"},{"type":"text","value":": 10 minutes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ogji5mmgWZ"}],"key":"lTGyvjJvP1"}],"key":"pW8TjngXqZ"}],"key":"vtEauwEoxI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dQStBOK7hF"}],"key":"u3FEbCkf3N"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wLhyJC1ZfP"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"xD2PXfWald"}],"key":"zKX766TFWl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport glob\nimport itertools\n\nimport wradlib as wrl\nimport matplotlib.pyplot as plt\nimport xarray as xr\nimport cartopy\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\nimport xradar as xd","key":"cbiCtlCAlG"},{"type":"output","id":"jQif_5xbZ7u2KbAsJot7n","data":[],"key":"A8mRxvP5UU"}],"key":"sJ29blL81w"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"esyQ9jonaO"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"O6Ei1ouHPK"}],"key":"XwjzELrFVw"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/20240522_MeteoSwiss_ARPA_Lombardia/Data/Xband/\"\n!mkdir -p data\nfiles = [\n    \"data/DES_VOL_RAW_20240522_1600.nc\",\n]\nfor file in files:\n    file0 = os.path.join(path, Path(file).name)\n    if not os.path.exists(file):\n        print(f\"downloading, {file}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", file)","key":"Ieyz3DiIlE"},{"type":"output","id":"zqbReYPjmDnjY6jv_ow5c","data":[],"key":"bG3XSlekVr"}],"key":"SUMIPHRV4J"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Open CfRadial1 Volume","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kMPnI3AAOG"}],"identifier":"open-cfradial1-volume","label":"Open CfRadial1 Volume","html_id":"open-cfradial1-volume","implicit":true,"key":"GGQtEynjgB"}],"key":"n2YCWTpTAE"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dtree = xd.io.open_cfradial1_datatree(files[0])\ndisplay(dtree.load())","key":"feQ3Hx4iQE"},{"type":"output","id":"kgv-D1GkDo24lmsP7Yrcl","data":[],"key":"HGbfIHAzAM"}],"key":"zdhu1VyWGB"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Extract radar parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UaehM8ujK4"}],"identifier":"extract-radar-parameters","label":"Extract radar parameters","html_id":"extract-radar-parameters","implicit":true,"key":"MiMXjtRtof"}],"key":"UFEBlolrso"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"radar_parameters = dtree[\"radar_parameters\"]","key":"LQ1otbZYE7"},{"type":"output","id":"HTRcjMtzEYbyfkJsz9Sqv","data":[],"key":"R7M8O7htkK"}],"key":"GCCUDY2j9n"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get first sweep","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HDKU63zD6S"}],"identifier":"get-first-sweep","label":"Get first sweep","html_id":"get-first-sweep","implicit":true,"key":"DzOco4Gjgm"}],"key":"hCEKHBJmFH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp = dtree[\"sweep_0\"].ds.set_coords(\"sweep_mode\")","key":"op3RJ7hKfd"},{"type":"output","id":"T9XUxlPkmjRnsVwn9Lmge","data":[],"key":"Mtk74I9L5r"}],"key":"DEvGcBZ5S8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display(swp)","key":"GAGlh5W7XK"},{"type":"output","id":"_SQvurAIUVrWDQF0qmmxj","data":[],"key":"DirMKehPON"}],"key":"GDp3kJT91C"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate clutter map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kvWyUWe4oz"}],"identifier":"calculate-clutter-map","label":"Calculate clutter map","html_id":"calculate-clutter-map","implicit":true,"key":"nQlX7tWpk9"}],"key":"HVAQq8ryMX"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"clmap = swp.DBZ_TOT.wrl.classify.filter_gabella(\n    wsize=5,\n    thrsnorain=0.0,\n    tr1=21.0,  # 21.,\n    n_p=23.0,  # 23,\n    tr2=1.3,\n    rm_nans=False,\n)\nswp = swp.assign({\"CMAP\": clmap})","key":"aE9hMfmION"},{"type":"output","id":"7Uqn5qiQkFD1byZgkCwur","data":[],"key":"tOjWZRUIKa"}],"key":"z3cOo5IgJN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Reflectivities, Clutter and Cluttermap","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LAMEmyaokB"}],"identifier":"plot-reflectivities-clutter-and-cluttermap","label":"Plot Reflectivities, Clutter and Cluttermap","html_id":"plot-reflectivities-clutter-and-cluttermap","implicit":true,"key":"cCE6hblgEg"}],"key":"Sk0EXzKcnJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(15, 12))\nax1 = fig.add_subplot(221)\nfrom osgeo import osr\n\nwgs84 = osr.SpatialReference()\nwgs84.ImportFromEPSG(4326)\nswpx = swp.sel(range=slice(0, 100000)).wrl.georef.georeference(crs=wgs84)\nswpx.DBZ_TOT.plot(x=\"x\", y=\"y\", ax=ax1, vmin=0, vmax=60)\nax1.set_title(\"Reflectivity raw\")\nax2 = fig.add_subplot(222)\nswpx.CMAP.plot(x=\"x\", y=\"y\", ax=ax2)\nax2.set_title(\"Cluttermap\")\nax3 = fig.add_subplot(223)\nswpx.DBZ_TOT.where(swpx.CMAP == 1).plot(x=\"x\", y=\"y\", ax=ax3, vmin=0, vmax=60)\nax3.set_title(\"Clutter\")\nax4 = fig.add_subplot(224)\nswpx.DBZ_TOT.where(swpx.CMAP < 1).plot(x=\"x\", y=\"y\", ax=ax4, vmin=0, vmax=60)\nax4.set_title(\"Reflectivity clutter removed\")","key":"O5aRpukqB1"},{"type":"output","id":"ghy3uHSl4OEsbwZYFBC8d","data":[],"key":"v5owCzPJ0U"}],"key":"d78d2DWtwB"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare with corrected reflectivity from signal processor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UlzT5hCvVc"}],"identifier":"compare-with-corrected-reflectivity-from-signal-processor","label":"Compare with corrected reflectivity from signal processor","html_id":"compare-with-corrected-reflectivity-from-signal-processor","implicit":true,"key":"zX3TtBELev"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plus additional simple RHOHV filter","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UJVp9KvZ5c"}],"key":"xVepdxb1Cs"}],"key":"bpiWKDZBcW"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(15, 6))\nax1 = fig.add_subplot(121)\nswpx.DBZ.plot(x=\"x\", y=\"y\", ax=ax1, vmin=0, vmax=60)\nax1.set_title(\"Reflectivity corr\")\nax2 = fig.add_subplot(122)\nswpx.DBZ_TOT.where((swpx.CMAP < 1) & (swpx.RHOHV >= 0.8)).plot(\n    x=\"x\", y=\"y\", ax=ax2, vmin=0, vmax=60\n)\nax2.set_title(\"Reflectivity clutter removed\")","key":"YVmpqhS9mN"},{"type":"output","id":"KBXfLcd_WdCP8vm2GXgej","data":[],"key":"T0H8VBI1ts"}],"key":"zRGq9ezPZK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get Digital Elevation Map (DEM)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kbY3QfE6eO"}],"identifier":"get-digital-elevation-map-dem","label":"Get Digital Elevation Map (DEM)","html_id":"get-digital-elevation-map-dem","implicit":true,"key":"Cpr9HAnSPW"}],"key":"fVglCEj0h5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# extent = [swpx.x.min().values, swpx.x.max().values, swpx.y.min().values, swpx.y.max().values]\n# import os\n# os.environ[\"WRADLIB_EARTHDATA_BEARER_TOKEN\"] = \"\"\n# dem = wrl.io.get_srtm(extent)\n# wrl.io.write_raster_dataset(\"desio_dem.tif\", dem)","key":"o2Z0CHZa5r"},{"type":"output","id":"c1yuZ_pSy4QxwvNyXC6n3","data":[],"key":"B1TDoGoRl1"}],"key":"UZjlv4igcD"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dem = (\n    xr.open_dataset(\"desio_dem.tif\", engine=\"rasterio\")\n    .isel(band=0)\n    .rename(band_data=\"DEM\")\n    .reset_coords(\"band\", drop=True)\n)\ndisplay(dem)","key":"qOsByi5a80"},{"type":"output","id":"BG-vr3RDfsqyDkmvTrYfY","data":[],"key":"r0lNHbCe6J"}],"key":"fUd5ffcHDW"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\n\nfig = plt.figure(figsize=(8, 5))\nax1 = fig.add_subplot(111)\nswpx.CMAP.where(swpx.CMAP == 1).plot(x=\"x\", y=\"y\", vmin=0, vmax=1, cmap=\"turbo\")\nax1.set_title(\"Reflectivity corr\")\ndem.DEM.plot(ax=ax1, zorder=-2, cmap=\"terrain\", vmin=0)","key":"WG2U60KMGe"},{"type":"output","id":"_i0lMsCawntQVrpt2I6QE","data":[],"key":"aDN1PgFBm4"}],"key":"BDPiK7alLy"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use hvplot for zooming and panning","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RhGrpAnSFE"}],"identifier":"use-hvplot-for-zooming-and-panning","label":"Use hvplot for zooming and panning","html_id":"use-hvplot-for-zooming-and-panning","implicit":true,"key":"N7J9WHEU4N"}],"key":"vRccqf4Kg3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import hvplot\nimport hvplot.xarray","key":"oHmevjpXRs"},{"type":"output","id":"BjzZ4jt5mBpaoKyETdrXy","data":[],"key":"iZ84EKacYQ"}],"key":"PP62uXh5AJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We need to rechunk the coordinates as hvplot needs chunked variables and coords.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gXVjvg4UjC"}],"key":"sYh8I8zNP9"}],"key":"AkLf1jejx2"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cl = (\n    swpx.CMAP.where(swpx.CMAP == 1)\n    .chunk(chunks={})\n    .hvplot.quadmesh(\n        x=\"x\", y=\"y\", cmap=\"turbo\", width=600, height=500, clim=(0, 1), rasterize=True\n    )\n)\ndm = dem.DEM.chunk(chunks={}).hvplot(\n    x=\"x\", y=\"y\", cmap=\"terrain\", width=600, height=500, rasterize=True\n)\ndm * cl","key":"SLdeDlhjrm"},{"type":"output","id":"v20Bqdwccf_uRy1Fk_g9M","data":[],"key":"tpLK493I1Z"}],"key":"MgvEd1jG0g"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prepare DEM for Polar Processing","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tTIV3je30u"}],"identifier":"prepare-dem-for-polar-processing","label":"Prepare DEM for Polar Processing","html_id":"prepare-dem-for-polar-processing","implicit":true,"key":"XR4nMO1q9N"}],"key":"KLg6oC9R3U"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"bw = radar_parameters[\"radar_beam_width_h\"]\ny, x = xr.broadcast(dem.y, dem.x)\nrastercoords = np.dstack([x, y])\n\npolcoords = np.dstack([swpx.x.values, swpx.y.values])\n# Map rastervalues to polar grid points\npolarvalues = wrl.ipol.cart_to_irregular_spline(\n    rastercoords, dem.DEM, polcoords, order=3, prefilter=False\n)","key":"wQDfjX792Q"},{"type":"output","id":"8XYfnxcQjTnSYqG9tnYN5","data":[],"key":"hOHsh6dM40"}],"key":"eAgAko7KYe"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"BeamBlockage Calculation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"knerxD0NZy"}],"identifier":"beamblockage-calculation","label":"BeamBlockage Calculation","html_id":"beamblockage-calculation","implicit":true,"key":"ed2cGxAfP2"}],"key":"eoXjMKgzWj"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"beamradius = wrl.util.half_power_radius(swpx.range, bw)\nPBB = wrl.qual.beam_block_frac(polarvalues, swpx.z.values, beamradius)\nPBB = np.ma.masked_invalid(PBB)\nCBB = wrl.qual.cum_beam_block_frac(PBB)","key":"iManmiFCwq"},{"type":"output","id":"Bxh5KE9AVlWsvp9N8u1Er","data":[],"key":"EYxbrveZp2"}],"key":"PYC2cGbVu2"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp2 = swpx.assign(\n    DEM=([\"azimuth\", \"range\"], polarvalues),\n    CBB=([\"azimuth\", \"range\"], CBB),\n    PBB=([\"azimuth\", \"range\"], PBB),\n)","key":"Pnq3LWnAu6"},{"type":"output","id":"tPYafVwlKnrpyPQtUNb3v","data":[],"key":"Udntn8VZej"}],"key":"t28q32waX6"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# just a little helper function to style x and y axes of our maps\ndef annotate_map(ax, cm=None, title=\"\"):\n    ticks = (ax.get_xticks() / 1000).astype(int)\n    # ax.set_xticklabels(ticks)\n    ticks = (ax.get_yticks() / 1000).astype(int)\n    # ax.set_yticklabels(ticks)\n    # ax.set_xlabel(\"Kilometers\")\n    # ax.set_ylabel(\"Kilometers\")\n    if not cm is None:\n        plt.colorbar(cm, ax=ax)\n    if not title == \"\":\n        ax.set_title(title)\n    ax.grid()","key":"dk9xwnwfJz"},{"type":"output","id":"RGMeVKYVfIX94y2x4Ev5g","data":[],"key":"ZVEW3PBORC"}],"key":"zoB1kP9mjx"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib as mpl\n\nsitecoords = (swpx.longitude.values, swpx.latitude.values, swpx.altitude.values)\nr = swp2.range.values\naz = swp2.azimuth.values\n\nalt = swp2.z.values\nfig = plt.figure(figsize=(15, 12))\n\n# create subplots\nax1 = plt.subplot2grid((2, 2), (0, 0))\nax2 = plt.subplot2grid((2, 2), (0, 1))\nax3 = plt.subplot2grid((2, 2), (1, 0), colspan=2, rowspan=1)\n\n# azimuth angle\nangle = 0\n\n# Plot terrain (on ax1)\ndem_pm = swp2.DEM.wrl.vis.plot(\n    ax=ax1, cmap=mpl.cm.terrain, vmin=0.0, add_colorbar=False\n)\nswp2.sel(azimuth=0, method=\"nearest\").plot.scatter(\n    x=\"x\", y=\"y\", marker=\".\", color=\"r\", alpha=0.2, ax=ax1\n)\nax1.plot(swp2.longitude.values, swp2.latitude.values, \"ro\")\nannotate_map(\n    ax1,\n    dem_pm,\n    \"Terrain within {0} km range\".format(np.max(swp2.range.values / 1000.0) + 0.1),\n)\n\n# Plot CBB (on ax2)\ncbb = swp2.CBB.wrl.vis.plot(\n    ax=ax2, cmap=mpl.cm.PuRd, vmin=0, vmax=1, add_colorbar=False\n)\nannotate_map(ax2, cbb, \"Beam-Blockage Fraction\")\n\n# Plot single ray terrain profile on ax3\n(bc,) = ax3.plot(\n    swp2.range / 1000.0, swp2.z[angle, :], \"-b\", linewidth=3, label=\"Beam Center\"\n)\n(b3db,) = ax3.plot(\n    swp2.range.values / 1000.0,\n    (swp2.z[angle, :] + beamradius),\n    \":b\",\n    linewidth=1.5,\n    label=\"3 dB Beam width\",\n)\nax3.plot(swp2.range / 1000.0, (swp2.z[angle, :] - beamradius), \":b\")\nax3.fill_between(swp2.range / 1000.0, 0.0, swp2.DEM[angle, :], color=\"0.75\")\nax3.set_xlim(0.0, np.max(swp2.range / 1000.0) + 0.1)\nax3.set_ylim(0.0, 3000)\nax3.set_xlabel(\"Range (km)\")\nax3.set_ylabel(\"Altitude (m)\")\nax3.grid()\n\naxb = ax3.twinx()\n(bbf,) = axb.plot(swp2.range / 1000.0, swp2.CBB[angle, :], \"-k\", label=\"BBF\")\naxb.set_ylabel(\"Beam-blockage fraction\")\naxb.set_ylim(0.0, 1.0)\naxb.set_xlim(0.0, np.max(swp2.range / 1000.0) + 0.1)\n\n\nlegend = ax3.legend(\n    (bc, b3db, bbf),\n    (\"Beam Center\", \"3 dB Beam width\", \"BBF\"),\n    loc=\"upper left\",\n    fontsize=10,\n)","key":"SHaf4ZIAa2"},{"type":"output","id":"4t-sCeOX9snl7g3OwpFmb","data":[],"key":"Y2LQh3Da9r"}],"key":"Q9s9bbHKcY"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def height_formatter(x, pos):\n    x = (x - 6370000) / 1000\n    fmt_str = \"{:g}\".format(x)\n    return fmt_str\n\n\ndef range_formatter(x, pos):\n    x = x / 1000.0\n    fmt_str = \"{:g}\".format(x)\n    return fmt_str","key":"pkj6t4KjJe"},{"type":"output","id":"KRar7PDPe6kMnAasDSo9R","data":[],"key":"UWynkiyXXs"}],"key":"suynNPmUpQ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(10, 6))\n\ncgax, caax, paax = wrl.vis.create_cg(fig=fig, rot=0, scale=1)\n\n# azimuth angle\nangle = 0\n\n# fix grid_helper\ner = 6370000\ngh = cgax.get_grid_helper()\ngh.grid_finder.grid_locator2._nbins = 80\ngh.grid_finder.grid_locator2._steps = [1, 2, 4, 5, 10]\n\n# calculate beam_height and arc_distance for ke=1\n# means line of sight\nbhe = wrl.georef.bin_altitude(r, 0, sitecoords[2], re=er, ke=1.0)\nade = wrl.georef.bin_distance(r, 0, sitecoords[2], re=er, ke=1.0)\nnn0 = np.zeros_like(r)\n# for nice plotting we assume earth_radius = 6370000 m\necp = nn0 + er\n# theta (arc_distance sector angle)\nthetap = -np.degrees(ade / er) + 90.0\n\n# zero degree elevation with standard refraction\nbh0 = wrl.georef.bin_altitude(r, 0, sitecoords[2], re=er)\n\n# plot (ecp is earth surface normal null)\n(bes,) = paax.plot(thetap, ecp, \"-k\", linewidth=3, label=\"Earth Surface NN\")\n(bc,) = paax.plot(thetap, ecp + alt[angle, :], \"-b\", linewidth=3, label=\"Beam Center\")\n(bc0r,) = paax.plot(thetap, ecp + bh0, \"-g\", label=\"0 deg Refraction\")\n(bc0n,) = paax.plot(thetap, ecp + bhe, \"-r\", label=\"0 deg line of sight\")\n(b3db,) = paax.plot(\n    thetap, ecp + alt[angle, :] + beamradius, \":b\", label=\"+3 dB Beam width\"\n)\npaax.plot(thetap, ecp + alt[angle, :] - beamradius, \":b\", label=\"-3 dB Beam width\")\n\n# orography\npaax.fill_between(thetap, ecp, ecp + polarvalues[angle, :], color=\"0.75\")\n\n# shape axes\ncgax.set_xlim(0, np.max(ade))\ncgax.set_ylim([ecp.min() - 1000, ecp.max() + 2500])\ncaax.grid(True, axis=\"x\")\ncgax.grid(True, axis=\"y\")\ncgax.axis[\"top\"].toggle(all=False)\ncaax.yaxis.set_major_locator(\n    mpl.ticker.MaxNLocator(steps=[1, 2, 4, 5, 10], nbins=20, prune=\"both\")\n)\ncaax.xaxis.set_major_locator(mpl.ticker.MaxNLocator())\ncaax.yaxis.set_major_formatter(mpl.ticker.FuncFormatter(height_formatter))\ncaax.xaxis.set_major_formatter(mpl.ticker.FuncFormatter(range_formatter))\n\ncaax.set_xlabel(\"Range (km)\")\ncaax.set_ylabel(\"Altitude (km)\")\n\nlegend = paax.legend(\n    (bes, bc0n, bc0r, bc, b3db),\n    (\n        \"Earth Surface NN\",\n        \"0 deg line of sight\",\n        \"0 deg std refraction\",\n        \"Beam Center\",\n        \"3 dB Beam width\",\n    ),\n    loc=\"lower left\",\n    fontsize=10,\n)","key":"yhQ53Tz8PG"},{"type":"output","id":"9T0O9TM5iEBtq1WaIFtDr","data":[],"key":"YcbN5EFrTp"}],"key":"vz0qZID87z"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gW7xyZh5Bt"}],"key":"i16PKsdfrx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"npw60nrjjC"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"GsUQmpH0mV"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We’ve just learned how to use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mH5eLMaZRK"},{"type":"inlineMath","value":"\\omega radlib","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>l</mi><mi>i</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\omega radlib</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">ib</span></span></span></span>","key":"HUWyhPfbsJ"},{"type":"text","value":"’s Gabella clutter detection for single sweeps. We’ve looked into digital elevation maps and beam blockage calculations.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZyOwiceBoL"}],"key":"Ja7XZE3MFS"}],"key":"xKDMcGtjKA"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V0dhhU8vcs"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"emd6hZbuuO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://docs.xarray.dev","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"xarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VsC2QbfY7J"}],"urlSource":"https://docs.xarray.dev","key":"TL0lGWbbW2"}],"key":"tnZa4pMuH1"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://docs.dask.org/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"dask","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"h3Ac0MtY88"}],"urlSource":"https://docs.dask.org/","key":"a83XzFtPYu"}],"key":"tJtOzVYO8I"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/importers.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"xradar backends","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lLdXlahvKu"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/importers.html","key":"jMLWK2rct0"}],"key":"fnQIe8TN0Z"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://ncar.github.io/CfRadial/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"CfRadial1","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"V7Houjdh0d"}],"urlSource":"https://ncar.github.io/CfRadial/","key":"uHDAwE2tDK"}],"key":"ctSzv5Eapv"}],"key":"dsTNGp5rBj"}],"key":"h6b2loDoeo"}],"key":"dAO3BQ5yoP"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Py-ART Basics with Xradar","url":"/pyart-basics","group":"Py-ART and wradlib"},"next":{"title":"I/O model","url":"/baltrad-io","group":"BALTRAD"}}},"domain":"http://localhost:3000"}