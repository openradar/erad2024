{"kind":"Notebook","sha256":"6bd56a5157e8655fd5e9be7e6ea1e920eea0f8999d2e256dfc3f1aa52b9e6ff7","slug":"baltrad-compositing","location":"/notebooks/baltrad/baltrad_short_course/4_BALTRAD_Compositing.ipynb","dependencies":[],"frontmatter":{"title":"Compositing","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"4_BALTRAD_Compositing.ipynb","url":"/erad2024/_preview/84/build/4_BALTRAD_Compositin-c35ebda719dd2350f614adcd0460a3c7.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This exercise builds on output from the parallel processing exercise. It does not address how projections and navigation is dealt with in BALTRAD. This should be addressed in a separate exercise.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"akKSYBGE1d"}],"key":"nBI854p8EJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Cartesian product area used in this exercise is pre-configured and looked up from a registry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qnb2BqRhDr"}],"key":"P4CdS2YrpM"}],"key":"eweewyUNvG"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rudimentary composite","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rd8y7qJWhF"}],"identifier":"rudimentary-composite","label":"Rudimentary composite","html_id":"rudimentary-composite","implicit":true,"key":"U9EpWAko7K"}],"key":"obWXjOcJdA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:04:16.322150Z","iopub.status.busy":"2024-08-23T06:04:16.321660Z","iopub.status.idle":"2024-08-23T06:04:16.760134Z","shell.execute_reply":"2024-08-23T06:04:16.759442Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport glob, time\nimport matplotlib\nimport _raveio, _rave\nimport _pycomposite, compositing\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")  # Suppress SyntaxWarning from Python2 code\n\ngenerator = compositing.compositing()\ngenerator.filenames = glob.glob(\"data/se*.h5\")","key":"wZSQAYhkOP"},{"type":"output","id":"spzkw67IZ1LtX99IWfr6T","data":[],"key":"c2hwTy223u"}],"key":"lfp5kfLkW2"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:04:16.763198Z","iopub.status.busy":"2024-08-23T06:04:16.762882Z","iopub.status.idle":"2024-08-23T06:04:27.990160Z","shell.execute_reply":"2024-08-23T06:04:27.989536Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Run with all defaults to a pre-configured area that uses the Google Maps projection.\n# First two arguments are product date and time. These are taken from the last input file if not specified.\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\n\nrio = _raveio.new()\nrio.object = comp\nrio.save(\"data/comp_pcappi1000m.h5\")\n\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"k9DPDJlr8D"},{"type":"output","id":"e5bBiYmFNGWfBjXycSJ32","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 11.19 seconds\n"}],"key":"MV8lBSg1s7"}],"key":"xY1Dh8LGzv"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Tweak the plotter from earlier exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KYtup7S0VP"}],"identifier":"tweak-the-plotter-from-earlier-exercises","label":"Tweak the plotter from earlier exercises","html_id":"tweak-the-plotter-from-earlier-exercises","implicit":true,"key":"GuMzep2e2o"}],"key":"Ev4clRRIVe"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:04:27.993104Z","iopub.status.busy":"2024-08-23T06:04:27.992873Z","iopub.status.idle":"2024-08-23T06:04:27.999521Z","shell.execute_reply":"2024-08-23T06:04:27.999005Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Two color palettes, one used in GoogleMapsPlugin, and the other from RAVE\nfrom GmapColorMap import dbzh as dbzp\n\n\n# Convert a 768-list palette to a matplotlib colorlist\ndef make_colorlist(pal):\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i] / 255.0, pal[i + 1] / 255.0, pal[i + 2] / 255.0])\n    return colorlist\n\n\n# Convert lists to colormaps\ndbzcl = make_colorlist(dbzp)\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\n\nStringType = type(\"\")\n\n\ndef plot(data, colorlist=dbzcl, title=\"Composite\"):\n    mini, maxi = data.shape.index(min(data.shape)), data.shape.index(max(data.shape))\n    figsize = (20, 16)  # if mini == 0 else (12,8)\n    fig = plt.figure(figsize=figsize)\n    plt.title(title)\n    clist = (\n        colorlist\n        if type(colorlist) == StringType\n        else matplotlib.colors.ListedColormap(colorlist)\n    )\n    plt.imshow(data, cmap=clist, clim=(0, 255))\n    plt.colorbar(shrink=float(data.shape[mini]) / data.shape[maxi])","key":"uzzFaNlhQ6"},{"type":"output","id":"dlvuSGWqnb7CuEtJ3LYZN","data":[],"key":"GPiJXuvnEJ"}],"key":"nWPoNgktrG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:04:28.001487Z","iopub.status.busy":"2024-08-23T06:04:28.001311Z","iopub.status.idle":"2024-08-23T06:04:28.447788Z","shell.execute_reply":"2024-08-23T06:04:28.447184Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(\n    comp.getParameter(\"DBZH\").getData(),\n    title=\"Default composite: DBZH 1000 m Pseudo-CAPPI, nearest radar\",\n)","key":"BRQScddlTI"},{"type":"output","id":"tveL0k6YMfzop8VhGgX_s","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"14a1907a7fc7bbc7097bf4cad6bfe855","path":"/erad2024/_preview/84/build/14a1907a7fc7bbc7097bf4cad6bfe855.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"xjzLBSRGsM"}],"key":"ZWa8hK16Rb"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Maximum reflectivity, lowest pixel, add QC chain","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ulPeMCTfD9"}],"identifier":"maximum-reflectivity-lowest-pixel-add-qc-chain","label":"Maximum reflectivity, lowest pixel, add QC chain","html_id":"maximum-reflectivity-lowest-pixel-add-qc-chain","implicit":true,"key":"G15qWOJMkf"}],"key":"asTiJTeJqx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:04:28.450970Z","iopub.status.busy":"2024-08-23T06:04:28.450778Z","iopub.status.idle":"2024-08-23T06:04:50.861622Z","shell.execute_reply":"2024-08-23T06:04:50.861046Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.product = _rave.Rave_ProductType_MAX\ngenerator.selection_method = _pycomposite.SelectionMethod_HEIGHT\ngenerator.detectors = [\n    \"ropo\",\n    \"beamb\",\n    \"radvol-att\",\n    \"radvol-broad\",\n    \"rave-overshooting\",\n    \"qi-total\",\n]\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_max.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"nm5fDluZqq"},{"type":"output","id":"J--RH3SJR1wdx8dU9n_f-","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 22.20 seconds\n"}],"key":"V6OxZXhMKU"}],"key":"fPA7jgiw09"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:04:50.863779Z","iopub.status.busy":"2024-08-23T06:04:50.863586Z","iopub.status.idle":"2024-08-23T06:04:51.274123Z","shell.execute_reply":"2024-08-23T06:04:51.273411Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, lowest pixel\")","key":"PHzDfMwcE1"},{"type":"output","id":"3WV9w8i1Y1xmt2ikV3tBO","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"337297c6f237b9f37d6eac2a18b7518c","path":"/erad2024/_preview/84/build/337297c6f237b9f37d6eac2a18b7518c.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"RApWuCfbak"}],"key":"FspJyg5ouu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot correspondong total quality index","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RO67heVgbq"}],"identifier":"plot-correspondong-total-quality-index","label":"Plot correspondong total quality index","html_id":"plot-correspondong-total-quality-index","implicit":true,"key":"K7UkyI8Qzn"}],"key":"AcnrJ4s5VW"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:04:51.278063Z","iopub.status.busy":"2024-08-23T06:04:51.277527Z","iopub.status.idle":"2024-08-23T06:04:51.747902Z","shell.execute_reply":"2024-08-23T06:04:51.747285Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh = comp.getParameter(\"DBZH\")\nqitot = dbzh.getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\nplot(qitot.getData(), \"binary\", \"Total quality index\")","key":"NoSNYgM4dk"},{"type":"output","id":"S4fEdlYvWGeU0Ujnrrjfx","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4f509c7ba3cd5077ab620888a50a9ab1","path":"/erad2024/_preview/84/build/4f509c7ba3cd5077ab620888a50a9ab1.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"iscrDq64IX"}],"key":"FOnBc5pIRu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now use “total quality” as the compositing criterion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tvsZoYYZLR"}],"identifier":"now-use-total-quality-as-the-compositing-criterion","label":"Now use “total quality” as the compositing criterion","html_id":"now-use-total-quality-as-the-compositing-criterion","implicit":true,"key":"LSArFUmx2Q"}],"key":"ZsXWUS686c"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:04:51.750302Z","iopub.status.busy":"2024-08-23T06:04:51.750041Z","iopub.status.idle":"2024-08-23T06:05:15.567266Z","shell.execute_reply":"2024-08-23T06:05:15.566494Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.qitotal_field = \"pl.imgw.quality.qi_total\"\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_qitotal.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"l9FKao4208"},{"type":"output","id":"E-im9MGLEBqOPBMF3e22x","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 23.62 seconds\n"}],"key":"b8YxReyOnO"}],"key":"n3oZlPA6eq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:05:15.569277Z","iopub.status.busy":"2024-08-23T06:05:15.569105Z","iopub.status.idle":"2024-08-23T06:05:15.983620Z","shell.execute_reply":"2024-08-23T06:05:15.983028Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, quality-based\")","key":"mmMevZaZof"},{"type":"output","id":"0ytQgLldouobKXHGmdiNx","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fafe350621bc411674b9e0a8c22aca4d","path":"/erad2024/_preview/84/build/fafe350621bc411674b9e0a8c22aca4d.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"FJPWqFrQgC"}],"key":"rGnQHjoYQH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T06:05:15.986236Z","iopub.status.busy":"2024-08-23T06:05:15.986031Z","iopub.status.idle":"2024-08-23T06:05:16.406795Z","shell.execute_reply":"2024-08-23T06:05:16.406192Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(\n    comp.getParameter(\"DBZH\")\n    .getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\n    .getData(),\n    \"binary\",\n    \"Total quality index\",\n)","key":"dRqlG3Qbr3"},{"type":"output","id":"3HPOAxOW7r6KHyBbpsSnT","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"437ad37009173ae652c0851459915b1e","path":"/erad2024/_preview/84/build/437ad37009173ae652c0851459915b1e.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"l1n5OjYrzL"}],"key":"Ch6p37hAlG"}],"key":"mh05bTN1DG"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Parallel processing","url":"/baltrad-parallel-processing","group":"BALTRAD"},"next":{"title":"Rain Rate retrieval with Py-ART","url":"/baltrad-pyart-rain-rate-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}