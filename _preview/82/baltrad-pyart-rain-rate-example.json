{"kind":"Notebook","sha256":"675dedf5a3106b051d19c606f327e08d3384985e45dad87852f41fc3e7575c75","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/82/build/0_baltrad_pyart_rain-c795ddf10cd3f2a2cc2f72192efdbf0d.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"m9p10Jq9Ks"}],"key":"Z8PvAR83uk"}],"key":"OBbizcoW4a"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YKqNUlIROi"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"w8IFwu2krO"}],"key":"xJU5NcsKzD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:32.372357Z","iopub.status.busy":"2024-08-20T14:52:32.371748Z","iopub.status.idle":"2024-08-20T14:52:33.457677Z","shell.execute_reply":"2024-08-20T14:52:33.457034Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"TTvThtSq2a"},{"type":"output","id":"flKu4YiDrerxHLCDi3zU5","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"eYhXoFG9CK"}],"key":"JyMtJ48F5F"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:33.460545Z","iopub.status.busy":"2024-08-20T14:52:33.460328Z","iopub.status.idle":"2024-08-20T14:52:33.806975Z","shell.execute_reply":"2024-08-20T14:52:33.806383Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"UG9hyCwldh"},{"type":"output","id":"jlIP8daRArBAc9wL-isTg","data":[],"key":"D4mksUzmeD"}],"key":"mD1tLQlqI0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hcoH0NpLCB"}],"key":"QmKDkssh1R"}],"key":"diGMyiIhV5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:33.809884Z","iopub.status.busy":"2024-08-20T14:52:33.809249Z","iopub.status.idle":"2024-08-20T14:52:34.868390Z","shell.execute_reply":"2024-08-20T14:52:34.867889Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"lPZhpH4hgh"},{"type":"output","id":"h6S6IVfkFgdfPrCkVuPV4","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"CNmaX1cNfc"}],"key":"vNWUwmaJAQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZOZvjsDzfx"}],"key":"Qz3jVvGaJa"}],"key":"fel9lyUejN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y28XCkVnBD"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"gEUSRkBN1W"}],"key":"Zu57h6wdFU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:34.871516Z","iopub.status.busy":"2024-08-20T14:52:34.870659Z","iopub.status.idle":"2024-08-20T14:52:34.906353Z","shell.execute_reply":"2024-08-20T14:52:34.905663Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"MUvXIxSa64"},{"type":"output","id":"yh_1z7JzMCwDuSGIFgxHW","data":[],"key":"oyWp3yJFln"}],"key":"EUJRyGttCc"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SNnbWDdXsA"}],"key":"b3Xy2PeoGd"}],"key":"XLa8kseroC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:34.908948Z","iopub.status.busy":"2024-08-20T14:52:34.908429Z","iopub.status.idle":"2024-08-20T14:52:34.959017Z","shell.execute_reply":"2024-08-20T14:52:34.958414Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"xrgXptwao0"},{"type":"output","id":"Yovihg7Cy24adyZLP_iee","data":[],"key":"DTTSoOtSTU"}],"key":"brW2a9nRlj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vmbd2YBYwZ"}],"key":"ST28g4WmVF"}],"key":"HpQ1POpjYj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:34.962196Z","iopub.status.busy":"2024-08-20T14:52:34.961732Z","iopub.status.idle":"2024-08-20T14:52:34.964792Z","shell.execute_reply":"2024-08-20T14:52:34.964215Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"FTl75cV3di"},{"type":"output","id":"xFLTW55hg7SsH-cpEle1q","data":[],"key":"KTxiHaSvkt"}],"key":"k5OwnWrbFU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:34.966895Z","iopub.status.busy":"2024-08-20T14:52:34.966717Z","iopub.status.idle":"2024-08-20T14:52:35.437030Z","shell.execute_reply":"2024-08-20T14:52:35.436438Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"TS3i7PGMlG"},{"type":"output","id":"Y6SbxPRSDQ_tyBYxCJCmD","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"20786a78fa0a6ee63e09230ec6e2a793","path":"/erad2024/_preview/82/build/20786a78fa0a6ee63e09230ec6e2a793.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"sxS95ylZED"}],"key":"N1dztpBsRA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:35.439451Z","iopub.status.busy":"2024-08-20T14:52:35.439084Z","iopub.status.idle":"2024-08-20T14:52:35.900546Z","shell.execute_reply":"2024-08-20T14:52:35.900005Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"rP7DARxN5A"},{"type":"output","id":"o9b_pm3tMwD8tlzned8B5","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"64e065084d8f5ac385f231df448932c5","path":"/erad2024/_preview/82/build/64e065084d8f5ac385f231df448932c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"iDuf9x7Kva"}],"key":"VALC2czOCJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:35.902792Z","iopub.status.busy":"2024-08-20T14:52:35.902612Z","iopub.status.idle":"2024-08-20T14:52:36.363849Z","shell.execute_reply":"2024-08-20T14:52:36.363309Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"OvDfakXu45"},{"type":"output","id":"UN0co8VyC4eHBuXgVXwuq","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6880cc843901b4ab45db376a178dd343","path":"/erad2024/_preview/82/build/6880cc843901b4ab45db376a178dd343.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"ZLOfYY3AP7"}],"key":"MXQaVrLQXX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:36.366340Z","iopub.status.busy":"2024-08-20T14:52:36.365889Z","iopub.status.idle":"2024-08-20T14:52:36.822048Z","shell.execute_reply":"2024-08-20T14:52:36.821404Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"TxoaknZTsa"},{"type":"output","id":"FyqLPIFMa49pUIaxkcf5-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"33e445673dd6ecd05884cd9a6ef0485a","path":"/erad2024/_preview/82/build/33e445673dd6ecd05884cd9a6ef0485a.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"Ye9VZp2EGZ"}],"key":"mj8jHIqVtf"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JATOna8Fz4"}],"key":"NdcPbnZKe7"}],"key":"C17p4TNk3y"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:36.825326Z","iopub.status.busy":"2024-08-20T14:52:36.825100Z","iopub.status.idle":"2024-08-20T14:52:36.829813Z","shell.execute_reply":"2024-08-20T14:52:36.829283Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"MDkMXZ4Rzw"},{"type":"output","id":"j1rOUIh0PGkXNUJehcAZG","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"jtPGoq4DIJ"}],"key":"qjFQBpYNyp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:36.831843Z","iopub.status.busy":"2024-08-20T14:52:36.831647Z","iopub.status.idle":"2024-08-20T14:52:37.026450Z","shell.execute_reply":"2024-08-20T14:52:37.025763Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"dnKcJAIscs"},{"type":"output","id":"ypO8QvPS7g5uFPj-NUvlG","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"d2BCZhR91K"}],"key":"SCejOcwwrD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:37.028822Z","iopub.status.busy":"2024-08-20T14:52:37.028382Z","iopub.status.idle":"2024-08-20T14:52:37.033448Z","shell.execute_reply":"2024-08-20T14:52:37.032942Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"IvtppfNGOe"},{"type":"output","id":"V_QmyUX99UfpsuykP0dWI","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"dh30f994cV"}],"key":"ZqPhrlwpcj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:37.035647Z","iopub.status.busy":"2024-08-20T14:52:37.035259Z","iopub.status.idle":"2024-08-20T14:52:37.038329Z","shell.execute_reply":"2024-08-20T14:52:37.037808Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"G9ESmo05C9"},{"type":"output","id":"DDlvlFvKF14opn6JpjkKj","data":[],"key":"QuW3cfSbr5"}],"key":"p9XbXKXsih"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zrdypAx98i"}],"key":"nD1hvfoWvt"}],"key":"pzFhtBKZxa"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:37.040453Z","iopub.status.busy":"2024-08-20T14:52:37.040081Z","iopub.status.idle":"2024-08-20T14:52:37.580567Z","shell.execute_reply":"2024-08-20T14:52:37.580009Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"tVefujq3vu"},{"type":"output","id":"uFxg_e4EWBWagVlIcT72_","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"11417ad41bb26cd1532af626eb881158","path":"/erad2024/_preview/82/build/11417ad41bb26cd1532af626eb881158.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"DXVtnKMzhM"}],"key":"GDAwb5I23k"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:37.582671Z","iopub.status.busy":"2024-08-20T14:52:37.582484Z","iopub.status.idle":"2024-08-20T14:52:38.035775Z","shell.execute_reply":"2024-08-20T14:52:38.035215Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"If16v97p7r"},{"type":"output","id":"XPBUESAVipKTUkPXLgeBg","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"99ae3810d21492782cb00e8156a1f142","path":"/erad2024/_preview/82/build/99ae3810d21492782cb00e8156a1f142.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"iqMkAEC18Q"}],"key":"bQ6YuZgrTO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"Z5iY8wErb9"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"hBpFXcRTl5"}],"key":"vPYCzRowvQ"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"uQcjgpjN0j"}],"key":"AXIKz8AN78"}],"key":"mPZ6nFcfIt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:38.038044Z","iopub.status.busy":"2024-08-20T14:52:38.037653Z","iopub.status.idle":"2024-08-20T14:52:38.052352Z","shell.execute_reply":"2024-08-20T14:52:38.051841Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"EFgOJiwzOO"},{"type":"output","id":"jqrn4fn3W7OoeXS2w2_TP","data":[],"key":"z7zWtNn8LN"}],"key":"jqvwf9LZrS"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:38.054267Z","iopub.status.busy":"2024-08-20T14:52:38.054066Z","iopub.status.idle":"2024-08-20T14:52:38.056687Z","shell.execute_reply":"2024-08-20T14:52:38.056190Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"pprJzVRNfD"},{"type":"output","id":"CUlZNm9xpqRw_z9q6u2fa","data":[],"key":"QrwcL5ba8D"}],"key":"USgaNkq83l"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VwpP7vZQwv"}],"key":"v4M5o9VkZ4"}],"key":"ljXnqEhC3a"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:38.058708Z","iopub.status.busy":"2024-08-20T14:52:38.058499Z","iopub.status.idle":"2024-08-20T14:52:38.503154Z","shell.execute_reply":"2024-08-20T14:52:38.502544Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"akGVJYnIwA"},{"type":"output","id":"BK2SUH5h25O0_856U40Qs","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da8e469afeab4ceaf82135533fae0204","path":"/erad2024/_preview/82/build/da8e469afeab4ceaf82135533fae0204.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"eNear0eYua"}],"key":"g7xcDL2xwp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dF5xeaKtwa"}],"key":"kKverv65sT"}],"key":"Pomzp33vxj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:38.505425Z","iopub.status.busy":"2024-08-20T14:52:38.505226Z","iopub.status.idle":"2024-08-20T14:52:38.518935Z","shell.execute_reply":"2024-08-20T14:52:38.518390Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"If4fOoxb0X"},{"type":"output","id":"zGI5cu-7UWkqaQsfV3U9D","data":[],"key":"Ka3kKweabp"}],"key":"KvqJSNJCY1"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-20T14:52:38.521151Z","iopub.status.busy":"2024-08-20T14:52:38.520977Z","iopub.status.idle":"2024-08-20T14:52:39.318783Z","shell.execute_reply":"2024-08-20T14:52:39.318192Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"PmvY0RHxDB"},{"type":"output","id":"uy5sAa9c1aFmVFULaSuMg","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"gnwT0wP3OW"}],"key":"VNUpwI53UQ"}],"key":"kAiKeCZGOD"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}