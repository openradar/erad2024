{"kind":"Notebook","sha256":"ab8e4d151ac7078bb3c4200ec5ae6d06eeaa7c204709c449159b3d533c560be1","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/83/build/0_baltrad_pyart_rain-d5dec5109325a5177784e4cf3c435adb.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"shJXIvr3JT"}],"key":"ozkes4jwZs"}],"key":"C3MXzy6O7n"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S6tfmuPbvo"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"srDuMOJ46u"}],"key":"iyqZ0L2PZB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:36.043506Z","iopub.status.busy":"2024-08-22T05:44:36.043009Z","iopub.status.idle":"2024-08-22T05:44:36.700054Z","shell.execute_reply":"2024-08-22T05:44:36.699481Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"UCpMYFFsgu"},{"type":"output","id":"o7LCVTN6oE0d9vs-cixXg","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"vXLBLw3nzv"}],"key":"KS3r4uvNu6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:36.702925Z","iopub.status.busy":"2024-08-22T05:44:36.702496Z","iopub.status.idle":"2024-08-22T05:44:37.072419Z","shell.execute_reply":"2024-08-22T05:44:37.071871Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"XQheuRkKh9"},{"type":"output","id":"9g4ZGGUZuzYcip1Vfyv3B","data":[],"key":"IYvpicp393"}],"key":"Bc5zGAug9k"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MHBzQh71D4"}],"key":"qSwLfXsR9d"}],"key":"WaqLAzuF2Q"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:37.075693Z","iopub.status.busy":"2024-08-22T05:44:37.075418Z","iopub.status.idle":"2024-08-22T05:44:38.144441Z","shell.execute_reply":"2024-08-22T05:44:38.143857Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"wL7joez4Mb"},{"type":"output","id":"czY3lCb6iV9ajI_z2tQe9","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"sKZBZJdXYy"}],"key":"O8PwMo7L36"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Eni3ENSVHC"}],"key":"ejvDGoJt95"}],"key":"S4jUxEsRJr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aagyJ8No2V"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"ln2cWeoOMn"}],"key":"AsZXoVXzGf"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:38.147119Z","iopub.status.busy":"2024-08-22T05:44:38.146768Z","iopub.status.idle":"2024-08-22T05:44:38.184947Z","shell.execute_reply":"2024-08-22T05:44:38.184256Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"LVdcYeHGNl"},{"type":"output","id":"3s8jx-MF_bgxmJlBHiUDw","data":[],"key":"jeNl4Pya3m"}],"key":"uGpO8885MK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TLNX3PY39W"}],"key":"p5IcC1HEec"}],"key":"i9fPQ2H74T"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:38.187510Z","iopub.status.busy":"2024-08-22T05:44:38.187091Z","iopub.status.idle":"2024-08-22T05:44:38.246529Z","shell.execute_reply":"2024-08-22T05:44:38.245896Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"Qrw7iUtsML"},{"type":"output","id":"5HIVx3-C-wO_DlHg6fg1E","data":[],"key":"AGHAeilACP"}],"key":"Lwf5lQmvfr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ks7k9Ec8R7"}],"key":"ogZNmNtMz0"}],"key":"HKO3wAoUoG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:38.249121Z","iopub.status.busy":"2024-08-22T05:44:38.248737Z","iopub.status.idle":"2024-08-22T05:44:38.251696Z","shell.execute_reply":"2024-08-22T05:44:38.251109Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"QSMYzcRutB"},{"type":"output","id":"gpjtE_6wfu8iBwm9LGX-Z","data":[],"key":"uSju8AFZB1"}],"key":"thJnjCKSUK"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:38.254151Z","iopub.status.busy":"2024-08-22T05:44:38.253638Z","iopub.status.idle":"2024-08-22T05:44:38.717274Z","shell.execute_reply":"2024-08-22T05:44:38.716695Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"zDbsVCmkgt"},{"type":"output","id":"m0gyLyrjLST3h3mfmQ4T-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"20786a78fa0a6ee63e09230ec6e2a793","path":"/erad2024/_preview/83/build/20786a78fa0a6ee63e09230ec6e2a793.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"sDz2NlstA3"}],"key":"X8IkPV4AJB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:38.719333Z","iopub.status.busy":"2024-08-22T05:44:38.719151Z","iopub.status.idle":"2024-08-22T05:44:39.175076Z","shell.execute_reply":"2024-08-22T05:44:39.174508Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"GZRG7O4F8O"},{"type":"output","id":"k_evx0by3LWD8KQ515CTl","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"64e065084d8f5ac385f231df448932c5","path":"/erad2024/_preview/83/build/64e065084d8f5ac385f231df448932c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"Q4EEAr7Em6"}],"key":"PPHpmcHHxt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:39.177568Z","iopub.status.busy":"2024-08-22T05:44:39.177392Z","iopub.status.idle":"2024-08-22T05:44:39.611568Z","shell.execute_reply":"2024-08-22T05:44:39.610999Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"Tu6nN5Tlhd"},{"type":"output","id":"Ze3WPKC725aa4EDdK8z9Z","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6880cc843901b4ab45db376a178dd343","path":"/erad2024/_preview/83/build/6880cc843901b4ab45db376a178dd343.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"QOSz0LISPa"}],"key":"zWPmnnORIh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:39.613729Z","iopub.status.busy":"2024-08-22T05:44:39.613364Z","iopub.status.idle":"2024-08-22T05:44:40.089563Z","shell.execute_reply":"2024-08-22T05:44:40.089002Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"XB7DX4meZd"},{"type":"output","id":"Ve9ziLWA4Qt7mtZUaoxbi","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"33e445673dd6ecd05884cd9a6ef0485a","path":"/erad2024/_preview/83/build/33e445673dd6ecd05884cd9a6ef0485a.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"Y9MfgHp3Vl"}],"key":"Vonae1iXI9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Pig3lF3cRE"}],"key":"mb2tABH3id"}],"key":"OFyAah6ZDK"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:40.092344Z","iopub.status.busy":"2024-08-22T05:44:40.092166Z","iopub.status.idle":"2024-08-22T05:44:40.096372Z","shell.execute_reply":"2024-08-22T05:44:40.095690Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"ND9ZXkvsZM"},{"type":"output","id":"dRiYqQw2x-2tA7IHk1_Ca","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"XglzZaRRAx"}],"key":"TiBMbra2WZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:40.098598Z","iopub.status.busy":"2024-08-22T05:44:40.098426Z","iopub.status.idle":"2024-08-22T05:44:40.290865Z","shell.execute_reply":"2024-08-22T05:44:40.290275Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"mhwdDaJd1S"},{"type":"output","id":"aeeZqdR0XJL3RcWVMLU4N","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"YPHLtk9UPU"}],"key":"pSkXoAmL4P"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:40.293181Z","iopub.status.busy":"2024-08-22T05:44:40.292783Z","iopub.status.idle":"2024-08-22T05:44:40.296751Z","shell.execute_reply":"2024-08-22T05:44:40.296236Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"tjcSlx64Ik"},{"type":"output","id":"LmzImY8yPQev3l-sx29kF","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"fyFtzKHifh"}],"key":"fgOYmZJTbp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:40.298566Z","iopub.status.busy":"2024-08-22T05:44:40.298405Z","iopub.status.idle":"2024-08-22T05:44:40.300814Z","shell.execute_reply":"2024-08-22T05:44:40.300404Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"nHgte2CHsn"},{"type":"output","id":"J5U12KQnteR1lR5gfnLZD","data":[],"key":"bAEkbbaKfg"}],"key":"uagrD810se"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W4HWH6Isw6"}],"key":"xsQz6C95m7"}],"key":"ZYbx6ADB6Z"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:40.302725Z","iopub.status.busy":"2024-08-22T05:44:40.302429Z","iopub.status.idle":"2024-08-22T05:44:40.838179Z","shell.execute_reply":"2024-08-22T05:44:40.837632Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"XrHbDELknj"},{"type":"output","id":"hKaqPqm8NQRtRsJ2y98NL","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"11417ad41bb26cd1532af626eb881158","path":"/erad2024/_preview/83/build/11417ad41bb26cd1532af626eb881158.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"rtsKkm6aWg"}],"key":"PeWc8xnf4o"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:40.840239Z","iopub.status.busy":"2024-08-22T05:44:40.840054Z","iopub.status.idle":"2024-08-22T05:44:41.300361Z","shell.execute_reply":"2024-08-22T05:44:41.299815Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"bL1S53EmDC"},{"type":"output","id":"bKCPs0lINAEpkSQkdR5A5","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"99ae3810d21492782cb00e8156a1f142","path":"/erad2024/_preview/83/build/99ae3810d21492782cb00e8156a1f142.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"RRS5A0QOE4"}],"key":"FbTZNt1B4q"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"oex7N5MWuJ"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"EfSdG8iaWv"}],"key":"jVEA23Q9gv"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"ypFDSVkYxd"}],"key":"g9hD81UJlN"}],"key":"Id4mlOtXxw"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:41.303035Z","iopub.status.busy":"2024-08-22T05:44:41.302728Z","iopub.status.idle":"2024-08-22T05:44:41.317631Z","shell.execute_reply":"2024-08-22T05:44:41.317036Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"wtCVKMcYLh"},{"type":"output","id":"M_xtXMQXLZst8v9B3EbZd","data":[],"key":"n5GKI3yoL1"}],"key":"LViYWJJyu7"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:41.319881Z","iopub.status.busy":"2024-08-22T05:44:41.319694Z","iopub.status.idle":"2024-08-22T05:44:41.322415Z","shell.execute_reply":"2024-08-22T05:44:41.321894Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"C6ZJuLQeFN"},{"type":"output","id":"A3VkWeaQJYB4IIbNbpn09","data":[],"key":"Y08r8zk5sA"}],"key":"s5jFObhhrr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hPyDMjL93o"}],"key":"EvlfZpvczQ"}],"key":"noLpln6lLY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:41.324541Z","iopub.status.busy":"2024-08-22T05:44:41.324198Z","iopub.status.idle":"2024-08-22T05:44:41.740091Z","shell.execute_reply":"2024-08-22T05:44:41.739552Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"GTzSV0wCEF"},{"type":"output","id":"n-H_wljUCv6KnVJ2FX0Vr","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da8e469afeab4ceaf82135533fae0204","path":"/erad2024/_preview/83/build/da8e469afeab4ceaf82135533fae0204.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"lJhmj1ONz5"}],"key":"OBeAFhdyq1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CEGo5ZxFAN"}],"key":"WgFfBUlyBm"}],"key":"Xhwz3EEovi"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:41.742649Z","iopub.status.busy":"2024-08-22T05:44:41.742215Z","iopub.status.idle":"2024-08-22T05:44:41.756149Z","shell.execute_reply":"2024-08-22T05:44:41.755359Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"E18dlYOwfb"},{"type":"output","id":"86XSo3S35dFl_AD4_nypq","data":[],"key":"LKvkunXFPA"}],"key":"AAamiwB5PF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-22T05:44:41.758525Z","iopub.status.busy":"2024-08-22T05:44:41.758327Z","iopub.status.idle":"2024-08-22T05:44:42.557385Z","shell.execute_reply":"2024-08-22T05:44:42.556858Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"CCUTthEHcT"},{"type":"output","id":"mSrzcYLx8kAP4rJ3vrgXi","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"F6VtS7x636"}],"key":"uRQk1eAOya"}],"key":"g0IyWUSNNv"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}