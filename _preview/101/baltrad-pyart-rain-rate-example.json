{"kind":"Notebook","sha256":"d28f220bb6632e36dc855477821e4bd1a40c370020fe4e8d0a8a750de37db7be","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/101/build/0_baltrad_pyart_rain-c0c30de011526f9b7993f1f2c2a6e7dc.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PhuhCiykvU"}],"key":"y8XvnoM2WN"}],"key":"ASJ7hj0Cj2"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ykk8UP3Tr5"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"fDNbfDvnQA"}],"key":"PBkPFatFlk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:20.349349Z","iopub.status.busy":"2024-09-03T16:20:20.348892Z","iopub.status.idle":"2024-09-03T16:20:21.090655Z","shell.execute_reply":"2024-09-03T16:20:21.090105Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"GmcdihodsV"},{"type":"output","id":"pacGdPnU8qtd6QcIVc3EZ","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"Kzhxb3tw0p"}],"key":"QtKYo2cJ9c"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:21.093348Z","iopub.status.busy":"2024-09-03T16:20:21.092890Z","iopub.status.idle":"2024-09-03T16:20:21.460925Z","shell.execute_reply":"2024-09-03T16:20:21.460427Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"HVq2xWPwju"},{"type":"output","id":"IjN1j2ri65vEebs79WjiD","data":[],"key":"iFXADuhur7"}],"key":"GnfrhAG4vA"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vnIu8kFMJs"}],"key":"vtXd9Oqgn1"}],"key":"qmwngtqMzi"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:21.463264Z","iopub.status.busy":"2024-09-03T16:20:21.463038Z","iopub.status.idle":"2024-09-03T16:20:22.928491Z","shell.execute_reply":"2024-09-03T16:20:22.927799Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"F9n0So7lzx"},{"type":"output","id":"bWe-jjX42bXEjE_k6UQS-","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"m3USKfM4Ha"}],"key":"ZmTEWZEYEv"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wS7KhSOATc"}],"key":"LmS2WI6NIf"}],"key":"ENFzK0WsAa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IEsb3uLGQa"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"MGqyniOO3y"}],"key":"m1e5mx80ZT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:22.931332Z","iopub.status.busy":"2024-09-03T16:20:22.930899Z","iopub.status.idle":"2024-09-03T16:20:22.969137Z","shell.execute_reply":"2024-09-03T16:20:22.968534Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"qDHUUm47GH"},{"type":"output","id":"IaCccmoLN3rhsfqSLLt6f","data":[],"key":"VZKnz8uxyl"}],"key":"LaBSJhsKSk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gBpYNIaHls"}],"key":"a1IgUzmpqZ"}],"key":"fU7JFlmyZY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:22.972138Z","iopub.status.busy":"2024-09-03T16:20:22.971624Z","iopub.status.idle":"2024-09-03T16:20:23.021092Z","shell.execute_reply":"2024-09-03T16:20:23.020540Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"t8dfSH1oSM"},{"type":"output","id":"FR2rXMlDXCaQQK8dSorJP","data":[],"key":"qmY6nTsENQ"}],"key":"Yrcs5YzI2q"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FZNwgF99GX"}],"key":"Sd2NZskKxH"}],"key":"Bmbwd7tEnA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:23.023271Z","iopub.status.busy":"2024-09-03T16:20:23.023094Z","iopub.status.idle":"2024-09-03T16:20:23.025795Z","shell.execute_reply":"2024-09-03T16:20:23.025322Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"RFVB7NNTet"},{"type":"output","id":"TDzstsWGI5j0eRD-GFORF","data":[],"key":"rw1S0OJS0m"}],"key":"QUNU2gdGrg"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:23.027803Z","iopub.status.busy":"2024-09-03T16:20:23.027472Z","iopub.status.idle":"2024-09-03T16:20:23.509934Z","shell.execute_reply":"2024-09-03T16:20:23.509257Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"hDNGqzjAvz"},{"type":"output","id":"L9H3-RvBlo11H-2O7a_5P","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/_preview/101/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"J9CelFj2xL"}],"key":"zzoGtBsth4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:23.512643Z","iopub.status.busy":"2024-09-03T16:20:23.512403Z","iopub.status.idle":"2024-09-03T16:20:24.000996Z","shell.execute_reply":"2024-09-03T16:20:24.000424Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"XZ4LBucZle"},{"type":"output","id":"oVvgAe_SE2qXBsj7k7uMm","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/_preview/101/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"BpM6h3E8PO"}],"key":"VjSnKQqKqU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:24.002998Z","iopub.status.busy":"2024-09-03T16:20:24.002823Z","iopub.status.idle":"2024-09-03T16:20:24.445056Z","shell.execute_reply":"2024-09-03T16:20:24.444360Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"um2ZMim3wg"},{"type":"output","id":"mJKPJZAAetWGNkq6lN2RN","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/_preview/101/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"jfFLwwEHXZ"}],"key":"r1lRDSZSda"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:24.447149Z","iopub.status.busy":"2024-09-03T16:20:24.446966Z","iopub.status.idle":"2024-09-03T16:20:24.909642Z","shell.execute_reply":"2024-09-03T16:20:24.909111Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"QrJ4r3bjx2"},{"type":"output","id":"V_AoUtx_W4vYooR3JN--4","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/_preview/101/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"gah3jRHoHV"}],"key":"uCkUNci3hy"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QJluL9Onv6"}],"key":"OugD1NY7WT"}],"key":"E3SEofeiJp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:24.913310Z","iopub.status.busy":"2024-09-03T16:20:24.912760Z","iopub.status.idle":"2024-09-03T16:20:24.917702Z","shell.execute_reply":"2024-09-03T16:20:24.917228Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"AC0WHdesMe"},{"type":"output","id":"VoOo6hNt78CxWfSNi9yCt","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"V3mMv4Fidh"}],"key":"iGOqRKEatX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:24.919492Z","iopub.status.busy":"2024-09-03T16:20:24.919319Z","iopub.status.idle":"2024-09-03T16:20:25.108689Z","shell.execute_reply":"2024-09-03T16:20:25.108070Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"uczqONtyVp"},{"type":"output","id":"GnjbA5-WeU8qQY5E8bCr_","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"Qvmn7nnKc0"}],"key":"h2HpFFyZ9L"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:25.111163Z","iopub.status.busy":"2024-09-03T16:20:25.110956Z","iopub.status.idle":"2024-09-03T16:20:25.114919Z","shell.execute_reply":"2024-09-03T16:20:25.114426Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"MkZ2Ps07wv"},{"type":"output","id":"9spQirwr5zhUHQxhTtB8C","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"Mkle0CBius"}],"key":"RalsEiyEoX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:25.116887Z","iopub.status.busy":"2024-09-03T16:20:25.116734Z","iopub.status.idle":"2024-09-03T16:20:25.119189Z","shell.execute_reply":"2024-09-03T16:20:25.118768Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"XWKM8lNXBX"},{"type":"output","id":"IHh7K5esI-Ab56eywn28N","data":[],"key":"JbR40YO1vh"}],"key":"gp8nETmBCw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jvem1PQUAl"}],"key":"V3GacdYDGp"}],"key":"mqye4IZJ5q"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:25.121117Z","iopub.status.busy":"2024-09-03T16:20:25.120775Z","iopub.status.idle":"2024-09-03T16:20:25.565495Z","shell.execute_reply":"2024-09-03T16:20:25.564932Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"FULT7WS1t4"},{"type":"output","id":"zuuAsnoasxF4Y3Gxn9aiU","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/_preview/101/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"pcJ0eZyAgr"}],"key":"GItnaLHfEd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:25.567489Z","iopub.status.busy":"2024-09-03T16:20:25.567320Z","iopub.status.idle":"2024-09-03T16:20:26.030570Z","shell.execute_reply":"2024-09-03T16:20:26.030029Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"u4J96l7sD7"},{"type":"output","id":"R5BteSrI0p9PcQXO4KKTX","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/_preview/101/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"ovMWmNRJXd"}],"key":"oEHw2yDgvF"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"LRgBWe0bp5"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"afQ4vKcxyW"}],"key":"Lcmp8LtyPn"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"j7WOHOTMLC"}],"key":"y9ailLwlxx"}],"key":"HyDWYnSSjG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:26.033224Z","iopub.status.busy":"2024-09-03T16:20:26.032761Z","iopub.status.idle":"2024-09-03T16:20:26.043697Z","shell.execute_reply":"2024-09-03T16:20:26.043155Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"LBnGIDuD7s"},{"type":"output","id":"UZnmL78ojlu825RffKxiy","data":[],"key":"KzlxuhOJnI"}],"key":"tVhYtEKmaZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:26.045759Z","iopub.status.busy":"2024-09-03T16:20:26.045592Z","iopub.status.idle":"2024-09-03T16:20:26.048151Z","shell.execute_reply":"2024-09-03T16:20:26.047653Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"wpYssSfg8y"},{"type":"output","id":"3VjqgjY4K8v27ZoG25kC5","data":[],"key":"EVPtuqvQdq"}],"key":"w5weB3tyKR"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nLE8etxmkr"}],"key":"l8TpWSudcy"}],"key":"HbTClHCUNZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:26.050111Z","iopub.status.busy":"2024-09-03T16:20:26.049952Z","iopub.status.idle":"2024-09-03T16:20:26.470070Z","shell.execute_reply":"2024-09-03T16:20:26.469545Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"txaszvz7tk"},{"type":"output","id":"UIrPbTzUrZQZvBQXglsmZ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/_preview/101/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"cnK9rXhmWi"}],"key":"SjscYY68wr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RhOpERqYdk"}],"key":"qAtA16YtJz"}],"key":"uvtQ4CaPE6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:26.472113Z","iopub.status.busy":"2024-09-03T16:20:26.471943Z","iopub.status.idle":"2024-09-03T16:20:26.485292Z","shell.execute_reply":"2024-09-03T16:20:26.484778Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"ns0hR3JRQp"},{"type":"output","id":"9_BUsm2PXyN8BWhqZChEL","data":[],"key":"pqyl8EtDPu"}],"key":"D9n9U6c5BI"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-03T16:20:26.487482Z","iopub.status.busy":"2024-09-03T16:20:26.487306Z","iopub.status.idle":"2024-09-03T16:20:27.284293Z","shell.execute_reply":"2024-09-03T16:20:27.283708Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"DODa0HERVZ"},{"type":"output","id":"PyDabpql3Ndw0VCjtOOu4","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"wrL1hA1S58"}],"key":"mA60aWxgDJ"}],"key":"nm5pIoVtDz"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}