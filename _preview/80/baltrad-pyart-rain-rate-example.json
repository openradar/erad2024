{"kind":"Notebook","sha256":"26a1efcc7b2f672b53eb09513aea0a12079e9e8623e12c90bd1adc8918ae57c4","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/80/build/0_baltrad_pyart_rain-9406e0a97009b27641e44b300424ee12.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SADItuRPck"}],"key":"Fqd8A1Kwrc"}],"key":"xmFSAWfJuD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qlqlBukm76"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"vHrPYLO6sv"}],"key":"jVYXgbiT4W"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:32.442213Z","iopub.status.busy":"2024-08-19T16:53:32.441739Z","iopub.status.idle":"2024-08-19T16:53:33.518829Z","shell.execute_reply":"2024-08-19T16:53:33.518217Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"qruWbgWQil"},{"type":"output","id":"qnJhDoWYXWl3zzbGQZBXp","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"Ke4UtwYySR"}],"key":"rzPslk5sXd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:33.521380Z","iopub.status.busy":"2024-08-19T16:53:33.521202Z","iopub.status.idle":"2024-08-19T16:53:33.889211Z","shell.execute_reply":"2024-08-19T16:53:33.888706Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"agjQvHmwNM"},{"type":"output","id":"Hgo_kyLNHcwAyDbMHVZdf","data":[],"key":"ZDAlh1FECk"}],"key":"Ny2mPHMPoT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G2uX9rjOsu"}],"key":"BRN3K55CEA"}],"key":"vHftSZZ6wo"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:33.891859Z","iopub.status.busy":"2024-08-19T16:53:33.891399Z","iopub.status.idle":"2024-08-19T16:53:34.979497Z","shell.execute_reply":"2024-08-19T16:53:34.978915Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"QDUwfFgZWj"},{"type":"output","id":"_hvWJYywacRAy2DTL8h8v","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"hnBY23Umgw"}],"key":"dvpMAEEvJD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jzpBDletyG"}],"key":"GIi847OwJp"}],"key":"QvU0UrZNeT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PhPH5B2uzD"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"YTqqZLtQja"}],"key":"bi21j19RCR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:34.982592Z","iopub.status.busy":"2024-08-19T16:53:34.982163Z","iopub.status.idle":"2024-08-19T16:53:35.021290Z","shell.execute_reply":"2024-08-19T16:53:35.020714Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"VmTN8KlG1P"},{"type":"output","id":"Nuux3jPHE3EYEUI5CQIoP","data":[],"key":"uxC1LOvXJD"}],"key":"vOOhIhG79Y"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iwt3oXE58e"}],"key":"L8plqgAsxf"}],"key":"xObRYiBT0S"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:35.023499Z","iopub.status.busy":"2024-08-19T16:53:35.023286Z","iopub.status.idle":"2024-08-19T16:53:35.063717Z","shell.execute_reply":"2024-08-19T16:53:35.063124Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"tRCjwoIgdZ"},{"type":"output","id":"iwiNT2PMsOIFOwR_igXeF","data":[],"key":"GZod35ME1A"}],"key":"Cs14elHjoV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eGiWBY0jyO"}],"key":"pbARpykUPR"}],"key":"yXV6ydS38U"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:35.066539Z","iopub.status.busy":"2024-08-19T16:53:35.066337Z","iopub.status.idle":"2024-08-19T16:53:35.069165Z","shell.execute_reply":"2024-08-19T16:53:35.068679Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"G8ge5DeuVs"},{"type":"output","id":"jU_qIHRkEaGimLCBiGZ0e","data":[],"key":"dOfSBEQOyC"}],"key":"wBjopMWjb1"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:35.071405Z","iopub.status.busy":"2024-08-19T16:53:35.070894Z","iopub.status.idle":"2024-08-19T16:53:35.567667Z","shell.execute_reply":"2024-08-19T16:53:35.567070Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"dIBeOKdSR7"},{"type":"output","id":"85utNazsivBS9bRzP0BaQ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"20786a78fa0a6ee63e09230ec6e2a793","path":"/erad2024/_preview/80/build/20786a78fa0a6ee63e09230ec6e2a793.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"NWgUUPR1Tq"}],"key":"OThiegNNzO"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:35.570086Z","iopub.status.busy":"2024-08-19T16:53:35.569619Z","iopub.status.idle":"2024-08-19T16:53:36.027167Z","shell.execute_reply":"2024-08-19T16:53:36.026603Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"S9vabTvRUM"},{"type":"output","id":"71OhZ8gvghAIsXcd0lRUB","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"64e065084d8f5ac385f231df448932c5","path":"/erad2024/_preview/80/build/64e065084d8f5ac385f231df448932c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"p9Ok50fjY1"}],"key":"QiJDA4xdSQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:36.029476Z","iopub.status.busy":"2024-08-19T16:53:36.029109Z","iopub.status.idle":"2024-08-19T16:53:36.484594Z","shell.execute_reply":"2024-08-19T16:53:36.484014Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"Ie6RQSxo8P"},{"type":"output","id":"njVGBtQsqwvIyDAeOFdM-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6880cc843901b4ab45db376a178dd343","path":"/erad2024/_preview/80/build/6880cc843901b4ab45db376a178dd343.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"B5yrXX5TVC"}],"key":"zW7OFDSK7x"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:36.487040Z","iopub.status.busy":"2024-08-19T16:53:36.486520Z","iopub.status.idle":"2024-08-19T16:53:36.949773Z","shell.execute_reply":"2024-08-19T16:53:36.949183Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"hltWSebsrF"},{"type":"output","id":"2AxjODZUjt7RLkXjcAo-_","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"33e445673dd6ecd05884cd9a6ef0485a","path":"/erad2024/_preview/80/build/33e445673dd6ecd05884cd9a6ef0485a.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"MVNb2iExZc"}],"key":"qgkuTymb9w"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qDvCs4xbSe"}],"key":"v3zMH11K7E"}],"key":"EXlH3QUKrB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:36.952819Z","iopub.status.busy":"2024-08-19T16:53:36.952626Z","iopub.status.idle":"2024-08-19T16:53:36.956673Z","shell.execute_reply":"2024-08-19T16:53:36.956025Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"SgLVwmXTsC"},{"type":"output","id":"fzDBsnmLC7XRiiJ-4NReg","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"Y2YMasRQxa"}],"key":"GD2KhlkqFD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:36.959313Z","iopub.status.busy":"2024-08-19T16:53:36.958805Z","iopub.status.idle":"2024-08-19T16:53:37.153595Z","shell.execute_reply":"2024-08-19T16:53:37.153060Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"JkoyMa1Epq"},{"type":"output","id":"XyMgP_P2ZokJ1x3yQd8LR","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"HvSzZkhVFE"}],"key":"RVFYAK40rH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:37.155686Z","iopub.status.busy":"2024-08-19T16:53:37.155501Z","iopub.status.idle":"2024-08-19T16:53:37.159506Z","shell.execute_reply":"2024-08-19T16:53:37.158996Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"kVxUMQ4DA0"},{"type":"output","id":"9oL2OXTVxnwwus5wpLB8G","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"KNOwfuUzUg"}],"key":"ML8AYTilbD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:37.161424Z","iopub.status.busy":"2024-08-19T16:53:37.161236Z","iopub.status.idle":"2024-08-19T16:53:37.163887Z","shell.execute_reply":"2024-08-19T16:53:37.163434Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"mDFXJu0LH7"},{"type":"output","id":"FHOSGJ9uIkgmnbgpMaCM3","data":[],"key":"PXopMjnPRD"}],"key":"CW3vfvs0CN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cmtlv9ngUR"}],"key":"RS9u7qXIGS"}],"key":"JZxewcINqC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:37.165863Z","iopub.status.busy":"2024-08-19T16:53:37.165518Z","iopub.status.idle":"2024-08-19T16:53:37.705495Z","shell.execute_reply":"2024-08-19T16:53:37.704964Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"mdpPCEz0vu"},{"type":"output","id":"Xd5rpiGVoYbOS43W7tnS0","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"11417ad41bb26cd1532af626eb881158","path":"/erad2024/_preview/80/build/11417ad41bb26cd1532af626eb881158.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"YBcooBHNKg"}],"key":"WvPpsJeuC5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:37.707723Z","iopub.status.busy":"2024-08-19T16:53:37.707533Z","iopub.status.idle":"2024-08-19T16:53:38.174848Z","shell.execute_reply":"2024-08-19T16:53:38.174326Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"hKStVpLAK9"},{"type":"output","id":"mCzC5qLsQTLJXvb1yzqnF","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"99ae3810d21492782cb00e8156a1f142","path":"/erad2024/_preview/80/build/99ae3810d21492782cb00e8156a1f142.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"LtJQu3hHOG"}],"key":"x9UKCdU0DA"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"rmtAJsevhA"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"ITazHZhoZh"}],"key":"aYuX0TcDJu"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"sfOoG0JJ8w"}],"key":"m6QXaQC1kY"}],"key":"Ekkej9YwhR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:38.177094Z","iopub.status.busy":"2024-08-19T16:53:38.176862Z","iopub.status.idle":"2024-08-19T16:53:38.188876Z","shell.execute_reply":"2024-08-19T16:53:38.188252Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"j26XnRxgPx"},{"type":"output","id":"YDBfk169t86AKLPkxaIcR","data":[],"key":"iCn2FX7A6r"}],"key":"qxG0TBnki2"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:38.191163Z","iopub.status.busy":"2024-08-19T16:53:38.190942Z","iopub.status.idle":"2024-08-19T16:53:38.194292Z","shell.execute_reply":"2024-08-19T16:53:38.193369Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"GqTPDtZG92"},{"type":"output","id":"6TENqV-ZinZuspDj3Cede","data":[],"key":"fXRPhCI2Br"}],"key":"u5xkbLIObV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eJUcDc0kfI"}],"key":"kX0iU5N7md"}],"key":"HFTRZNoMUF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:38.197372Z","iopub.status.busy":"2024-08-19T16:53:38.196647Z","iopub.status.idle":"2024-08-19T16:53:38.636696Z","shell.execute_reply":"2024-08-19T16:53:38.636168Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"Uo7sEpWX52"},{"type":"output","id":"3VsGaGd8uRbRg0xsB8Zct","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da8e469afeab4ceaf82135533fae0204","path":"/erad2024/_preview/80/build/da8e469afeab4ceaf82135533fae0204.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"JuDJqu7uPH"}],"key":"Q21s4nCVMv"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fYldZ1FNof"}],"key":"SHCsHA2a1s"}],"key":"xL6Q9pdUK4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:38.639045Z","iopub.status.busy":"2024-08-19T16:53:38.638846Z","iopub.status.idle":"2024-08-19T16:53:38.652512Z","shell.execute_reply":"2024-08-19T16:53:38.651926Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"xQ3tzVI7mc"},{"type":"output","id":"WrkjJBpNpyBA8Rrp4artj","data":[],"key":"vuuJT6QDED"}],"key":"oJbZYmnm3E"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-19T16:53:38.654837Z","iopub.status.busy":"2024-08-19T16:53:38.654672Z","iopub.status.idle":"2024-08-19T16:53:39.460113Z","shell.execute_reply":"2024-08-19T16:53:39.459418Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"by5Ml76Cw1"},{"type":"output","id":"6ue6BVWWrlzls7FOsY18g","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"enK3bLi584"}],"key":"FjXqzkN4Vp"}],"key":"xOQkOpXCJN"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}