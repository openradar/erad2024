{"kind":"Notebook","sha256":"3422a923cddf5bc2518cff48541e5961266c0f36e8c2eed0da36853182d8ed99","slug":"baltrad2wradlib","location":"/notebooks/baltrad/baltrad2wradlib/baltrad2wradlib.ipynb","dependencies":[],"frontmatter":{"title":"Attenuation correction comparison with wradlib","content_includes_title":false,"kernelspec":{"name":"conda-env-xradar-py","language":"python","display_name":"Python [conda env:xradar]"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"baltrad2wradlib.ipynb","url":"/erad2024/_preview/65/build/baltrad2wradlib-21cb76009a27dd5f340825d9d4ee71f9.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Comparison between BALTRAD and wradlib attenuation correction","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WGmotTxkrK"}],"key":"xSpG4UlN0S"}],"key":"kRBemtfwe8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WF7yuHn1B5"}],"identifier":"retrieve-data-from-s3-bucket","label":"Retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"PD17G33SGF"}],"key":"yFXYjgadVO"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/baltrad2wradlib/\"\n!mkdir -p data\nfiles = [\n    \"201405190715_SUR.h5\",\n    \"europe_countries.dbf\",\n    \"europe_countries.prj\",\n    \"europe_countries.sbn\",\n    \"europe_countries.sbx\",\n    \"europe_countries.shp\",\n    \"europe_countries.shx\",\n]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(\n            f\"{URL}{file0}\", os.path.join(\"data\", Path(file).name)\n        )","key":"CURc7QmSXs"},{"type":"output","id":"1j6Apb9UttcuRnxxZZpCt","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/201405190715_SUR.h5\ndownloading, data/europe_countries.dbf\ndownloading, data/europe_countries.prj\ndownloading, data/europe_countries.sbn\ndownloading, data/europe_countries.sbx\ndownloading, data/europe_countries.shp\ndownloading, data/europe_countries.shx\n"}],"key":"thd2YWdqpQ"}],"key":"hhpcHvyaHi"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prepare your environment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MlxVRTn7bq"}],"identifier":"prepare-your-environment","label":"Prepare your environment","html_id":"prepare-your-environment","implicit":true,"key":"uZ5g221PCH"}],"key":"VvzICCWiKi"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"rnQ1mc2RGY"},{"type":"output","id":"m1pO0hXqahXCWk_74EJnp","data":[],"key":"ZEbP51namT"}],"key":"a0reOQBarT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import gc\n\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mticker\nimport numpy as np\nimport shapefile\nimport wradlib\nimport xradar as xd\nfrom matplotlib.collections import PatchCollection\nfrom matplotlib.patches import Polygon","key":"ZFXeQeE337"},{"type":"output","id":"JTYPqGlhyJ1-GUhEATRvJ","data":[],"key":"c6QS58TdS2"}],"key":"Li1Mt9zddB"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Run BALTRAD’s odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fKvGKilvH4"}],"identifier":"run-baltrads-odc-toolbox","label":"Run BALTRAD’s odc_toolbox","html_id":"run-baltrads-odc-toolbox","implicit":true,"key":"V0CrXUbUaZ"}],"key":"BdSUEfVt3z"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, you will process a scan from Suergavere (Estland) by using BALTRAD’s odc_toolbox.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zOizAReIgF"}],"key":"EOc48QgPbZ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"From your VM’s vagrant directory, navigate to the folder ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yzTLHy3EsD"},{"type":"inlineCode","value":"/baltrad2wradlib","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"U5nR4Sp40Q"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q4NKmHtMAx"}],"key":"suxAJp1GWh"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Execute the following command:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YTRcBvVob4"}],"key":"TvYeGGOx0i"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"$ odc_toolbox -i in -o out -q ropo,radvol-att","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zTGu8FgMnt"}],"key":"LPbvGog0KM"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Check whether a file was created in the folder ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"IVcjOi0oF9"},{"type":"inlineCode","value":"/out","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZemQkK6dj8"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"gOEfuAkxJs"}],"key":"iSPCOkYhiX"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"BALTRAD will not create output files if these already exist.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"FcYiDaKJx4"}],"key":"fCcG6geIPT"},{"type":"text","value":" You can check that via ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mIzA7zEwU5"},{"type":"inlineCode","value":"!ls out","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"JG3gIJVrAr"},{"type":"text","value":".","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"PlxKe9LyPn"}],"key":"TSD0NRf87h"}],"key":"Mt2ZsRhSve"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"!odc_toolbox --help","key":"TJ1FipjaTf"},{"type":"output","id":"h9FJK5izLe1frNzIGwy1g","data":[],"key":"LQyPp8ReMq"}],"key":"UtR6GzgQSJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"!odc_toolbox -i in -o out -q ropo,radvol-att","key":"DH5H1ZdHTl"},{"type":"output","id":"NgdQoz37bWGTvrF2ouoSJ","data":[],"key":"gGDweHreKl"}],"key":"seaKMjyx1v"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"!ls out","key":"yJ2mXZy6tu"},{"type":"output","id":"QR0n2lXtNwbH_Vku_wHuh","data":[],"key":"gMorXQJgwZ"}],"key":"PNztijnrv2"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read and inspect data from Suergavere (Estonia) before and after QC with odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RfQR2JY4l4"}],"identifier":"read-and-inspect-data-from-suergavere-estonia-before-and-after-qc-with-odc-toolbox","label":"Read and inspect data from Suergavere (Estonia) before and after QC with odc_toolbox","html_id":"read-and-inspect-data-from-suergavere-estonia-before-and-after-qc-with-odc-toolbox","implicit":true,"key":"kgIAKpNmdr"}],"key":"mhzgYeEm5J"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Before QC\ninp = xd.io.open_odim_datatree(\"in/201405190715_SUR.h5\")\n# After QC\nout = xd.io.open_odim_datatree(\"out/201405190715_SUR.h5\")","key":"g3J5vtIHts"},{"type":"output","id":"MxIy-n1OlUOHpEwc46WHv","data":[],"key":"cmEPdvggdN"}],"key":"gPSsgrWkjZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Georeference","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"F3pnmaILIT"}],"identifier":"georeference","label":"Georeference","html_id":"georeference","implicit":true,"key":"D1waJ6DkqR"}],"key":"EHTY2sqtwM"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"inp = inp.xradar.georeference()\nout = out.xradar.georeference()","key":"PY654zo9EY"},{"type":"output","id":"-Dfo7JvI9n1dL_rgUccDB","data":[],"key":"zIowTZ207d"}],"key":"ptZ83lLTEH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp_inp = inp[\"sweep_0\"].ds.set_coords(\"sweep_mode\")\nswp_out = out[\"sweep_0\"].ds.set_coords(\"sweep_mode\")\ndisplay(swp_inp)\ndisplay(swp_out)","key":"mmPXjYeGmA"},{"type":"output","id":"a02ig1OzoX9fo8RxOR-QV","data":[],"key":"UMTj4Sft3F"}],"key":"kfSC107h16"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a plot we will use for all PPIs in this exercise","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MfFtpFxYZQ"}],"identifier":"design-a-plot-we-will-use-for-all-ppis-in-this-exercise","label":"Design a plot we will use for all PPIs in this exercise","html_id":"design-a-plot-we-will-use-for-all-ppis-in-this-exercise","implicit":true,"key":"ibMwHXheJ6"}],"key":"iVxlzbeDDN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import cartopy.crs as ccrs\nimport wradlib as wrl\nfrom cartopy.io.shapereader import Reader\n\nmap_proj = ccrs.AzimuthalEquidistant(\n    central_latitude=swp_inp.latitude.values, central_longitude=swp_inp.longitude.values\n)\nosr_proj = wrl.georef.create_osr(\n    \"aeqd\", lat_0=swp_inp.latitude.values, lon_0=swp_inp.longitude.values\n)\n\n\ndef plot_ppi_to_ax(ppi, ax, title=\"\", reader=None, **kwargs):\n    pm = ppi.wrl.vis.plot(crs=map_proj, ax=ax, **kwargs)\n    ax.set_title(title)\n    if reader is not None:\n        ax.add_geometries(\n            reader.geometries(),\n            ccrs.PlateCarree(),\n            facecolor=\"lightgrey\",\n            edgecolor=\"k\",\n            linewidths=1,\n            zorder=-1,\n        )\n    wrl.vis.plot_ppi_crosshair(\n        site=(ppi.longitude.values, ppi.latitude.values, ppi.altitude.values),\n        ranges=[50000, 100000, 150000, 200000, ppi.range.max().values],\n        angles=[0, 90, 180, 270],\n        line=dict(color=\"white\"),\n        circle={\"edgecolor\": \"white\"},\n        ax=ax,\n        crs=osr_proj,\n    )\n    return pm","key":"oeJQvNaPrm"},{"type":"output","id":"6FjTXdYP07xIvBEESzXkH","data":[],"key":"WYPMjHW1ph"}],"key":"Ig65f4bQc0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the selected fields into one figure","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bCkIrODlD9"}],"identifier":"plot-the-selected-fields-into-one-figure","label":"Plot the selected fields into one figure","html_id":"plot-the-selected-fields-into-one-figure","implicit":true,"key":"op4AYZKyIe"}],"key":"UeMyP4pftq"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12, 10))\n\nax = plt.subplot(221, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_inp.DBZH.where(swp_inp.DBZH >= -10),\n    ax=ax,\n    reader=reader,\n    title=\"Before QC\",\n    add_colorbar=False,\n    vmin=-10,\n    vmax=65,\n)\n\nax = plt.subplot(222, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_out.DBZH.where(swp_out.DBZH >= -10),\n    ax=ax,\n    reader=reader,\n    title=\"After QC\",\n    add_colorbar=False,\n    vmin=-10,\n    vmax=65,\n)\n\nax = plt.subplot(223, projection=map_proj)\nqm = plot_ppi_to_ax(\n    swp_out.quality1, ax=ax, reader=reader, add_colorbar=False, title=\"Quality 1\"\n)\n\nax = plt.subplot(224, projection=map_proj)\nqm = plot_ppi_to_ax(\n    swp_out.QIND, ax=ax, reader=reader, add_colorbar=False, title=\"Quality 2\"\n)\n\nplt.tight_layout()\n\n# Add colorbars\nfig.subplots_adjust(right=0.9)\ncax = fig.add_axes((0.9, 0.6, 0.03, 0.3))\ncbar = plt.colorbar(pm, cax=cax)\ncbar.set_label(\"Horizontal reflectivity (dBZ)\", fontsize=\"large\")\n\ncax = fig.add_axes((0.9, 0.1, 0.03, 0.3))\ncbar = plt.colorbar(qm, cax=cax)\ncbar.set_label(\"Quality index\", fontsize=\"large\")","key":"nJCCALCFB2"},{"type":"output","id":"uGEq6kiZQkywtzSPaePMr","data":[],"key":"XnffrdvSKD"}],"key":"RAP1pkvoTd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Collect and plot the polarimetric moments from the original ODIM_H5 dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HMI664jgJ9"}],"identifier":"collect-and-plot-the-polarimetric-moments-from-the-original-odim-h5-dataset","label":"Collect and plot the polarimetric moments from the original ODIM_H5 dataset","html_id":"collect-and-plot-the-polarimetric-moments-from-the-original-odim-h5-dataset","implicit":true,"key":"HjKuTcZYT7"}],"key":"s3E892BqkV"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12, 12))\n\nax = plt.subplot(221, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.RHOHV, ax=ax, title=\"RhoHV\", reader=reader)\n\nax = plt.subplot(222, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.PHIDP, ax=ax, title=\"PhiDP\", reader=reader)\n\nax = plt.subplot(223, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_inp.ZDR, ax=ax, title=\"Differential reflectivity\", reader=reader\n)\n\nax = plt.subplot(224, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.VRAD, ax=ax, title=\"Doppler velocity\", reader=reader)\n\nplt.tight_layout()","key":"Ogbo6xkedY"},{"type":"output","id":"eekPnf99CIgW-opoEwyuA","data":[],"key":"FPzqv32sdG"}],"key":"yEAbE6Jfmb"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Try some filtering and attenuation correction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LtG95KdWyp"}],"identifier":"try-some-filtering-and-attenuation-correction","label":"Try some filtering and attenuation correction","html_id":"try-some-filtering-and-attenuation-correction","implicit":true,"key":"kcuZ3h0Smt"}],"key":"qiHsPpFBwm"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Set ZH to a very low value where we do not expect valid data\nzh = swp_inp.DBZH.fillna(-32.0)\n# Retrieve PIA by using some constraints (see https://docs.wradlib.org/en/latest/notebooks/attenuation/attenuation.html for help)\npia = zh.wrl.atten.correct_attenuation_constrained(\n    constraints=[wradlib.atten.constraint_dbz, wradlib.atten.constraint_pia],\n    constraint_args=[[64.0], [20.0]],\n)\n\n# Correct reflectivity by PIA\nzh_corrected = swp_inp.DBZH + pia","key":"RVG58V7OYr"},{"type":"output","id":"CisyM6IdAH1pBflZi6C55","data":[],"key":"kMwBPQcJHr"}],"key":"pTGK3uwC10"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare results against QC from odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Trxyhx1gkL"}],"identifier":"compare-results-against-qc-from-odc-toolbox","label":"Compare results against QC from odc_toolbox","html_id":"compare-results-against-qc-from-odc-toolbox","implicit":true,"key":"GAbNOFnYFS"}],"key":"LJ0RnHRdFF"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(18, 10))\n\nax = plt.subplot(131, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_inp.DBZH.where(swp_out.DBZH >= -10), ax=ax, reader=reader, title=\"Before QC\"\n)\n\nax = plt.subplot(132, projection=map_proj)\npm = plot_ppi_to_ax(\n    swp_out.DBZH.where(swp_out.DBZH >= -10),\n    ax=ax,\n    reader=reader,\n    title=\"After QC using BALTRAD Toolbox\",\n)\n\nax = plt.subplot(133, projection=map_proj)\npm = plot_ppi_to_ax(\n    zh_corrected.where(zh_corrected >= -10),\n    ax=ax,\n    reader=reader,\n    title=\"After QC using wradlib\",\n)","key":"sh2C03VXHS"},{"type":"output","id":"-fIXjzoKF7gFQYvt_IqVf","data":[],"key":"DvIDEcVQxl"}],"key":"qi3QtCRlcc"}],"key":"OsmPj0aAzu"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"},"next":{"title":"LROSE Echo and Wind Retrieval Tutorial","url":"/lrose-introduction","group":"LROSE"}}},"domain":"http://localhost:3000"}