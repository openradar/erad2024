{"kind":"Notebook","sha256":"386ec58e915a4a874788bc8931d1ea42ccc603cc706d19ae6b399656757f363d","slug":"baltrad2wradlib","location":"/notebooks/baltrad/baltrad2wradlib/baltrad2wradlib.ipynb","dependencies":[],"frontmatter":{"title":"Attenuation correction comparison with wradlib","content_includes_title":false,"kernelspec":{"name":"conda-env-xr_312_np2-py","language":"python","display_name":"Python [conda env:xr_312_np2]"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"baltrad2wradlib.ipynb","url":"/erad2024/_preview/65/build/baltrad2wradlib-71f205d3ca0bbc64dd0c708b6302a953.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Comparison between BALTRAD and wradlib attenuation correction","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"M7O1yUmPqj"}],"key":"KOzZB5DrTk"}],"key":"J2Ad8XLF65"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prepare your environment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PwvziXT5NN"}],"identifier":"prepare-your-environment","label":"Prepare your environment","html_id":"prepare-your-environment","implicit":true,"key":"c6exhMqjDM"}],"key":"Xg4yEnfvOX"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"m7mhcFPfox"},{"type":"output","id":"JreVELDrHnsavRmiARJ1j","data":[],"key":"HA0VlyWcCp"}],"key":"yOwwN2gAk2"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Polygon\nfrom matplotlib.collections import PatchCollection\nimport matplotlib.ticker as mticker\nimport wradlib\nimport shapefile\nimport gc\nimport xradar as xd","key":"O0JHQk3hfa"},{"type":"output","id":"T6g5HWRQBpipI1Z8owUhM","data":[],"key":"kTTDFBw79j"}],"key":"Vx3AUufiNx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Run BALTRAD’s odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"X2CQ1PKvRW"}],"identifier":"run-baltrads-odc-toolbox","label":"Run BALTRAD’s odc_toolbox","html_id":"run-baltrads-odc-toolbox","implicit":true,"key":"C7YefWRbdX"}],"key":"ru7Powxufy"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First, you will process a scan from Suergavere (Estland) by using BALTRAD’s odc_toolbox.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tWDPLed8gD"}],"key":"Dsq76i2aBF"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"From your VM’s vagrant directory, navigate to the folder ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Qh8bwkHsE3"},{"type":"inlineCode","value":"/baltrad2wradlib","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q3KYppHO68"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JHPdqD4hOU"}],"key":"Az7l02k3cV"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Execute the following command:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PEd7IulW4I"}],"key":"ca5ewcbyud"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"$ odc_toolbox -i in -o out -q ropo,radvol-att","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LD2RR3dDNe"}],"key":"i4rwWoful0"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Check whether a file was created in the folder ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"gH5TDTgtmq"},{"type":"inlineCode","value":"/out","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"D5Ribs7bbb"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"feIQSnPFgX"}],"key":"xDUnuheSl0"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"BALTRAD will not create output files if these already exist.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"VBvzMM0mZv"}],"key":"YSDZxrGLLg"},{"type":"text","value":" You can check that via ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"sgNeuhTghg"},{"type":"inlineCode","value":"!ls out","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"YeqXkMIYwT"},{"type":"text","value":".","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"JWPkMQpK7Y"}],"key":"VjeeEVxnn8"}],"key":"Q76MBnL3S5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"!odc_toolbox --help","key":"OW46MoICOa"},{"type":"output","id":"b8RjDAwYBbsRzfunBN4xP","data":[],"key":"S2C9BkpXHL"}],"key":"MMpyDz2hYX"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"!odc_toolbox -i in -o out -q ropo,radvol-att","key":"XzcDdPkRoT"},{"type":"output","id":"KBxGTwst4VSDFJkrDogZv","data":[],"key":"STV9lQY2KP"}],"key":"THvUsnPmsB"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"!ls out","key":"SildGpJm9U"},{"type":"output","id":"1E5QqLw_7R92foB6eyl_L","data":[],"key":"rtpgxyteuR"}],"key":"m2YSb4uQFS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read and inspect data from Suergavere (Estonia) before and after QC with odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OAdhR8pfGX"}],"identifier":"read-and-inspect-data-from-suergavere-estonia-before-and-after-qc-with-odc-toolbox","label":"Read and inspect data from Suergavere (Estonia) before and after QC with odc_toolbox","html_id":"read-and-inspect-data-from-suergavere-estonia-before-and-after-qc-with-odc-toolbox","implicit":true,"key":"t601pGxixc"}],"key":"emhxHJMFP8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Before QC\ninp = xd.io.open_odim_datatree(\"in/201405190715_SUR.h5\")\n# After QC\nout = xd.io.open_odim_datatree(\"out/201405190715_SUR.h5\")","key":"xm5DPvWAOp"},{"type":"output","id":"R72dtY6x3vG1hhYbQU4b7","data":[],"key":"ZcKHXyVh1K"}],"key":"U5GM40puvN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Georeference","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PPPIDfTe16"}],"identifier":"georeference","label":"Georeference","html_id":"georeference","implicit":true,"key":"Gdo4tFI1g5"}],"key":"uxYYBC9mgv"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"inp = inp.xradar.georeference()\nout = out.xradar.georeference()","key":"zBIiy6qEMG"},{"type":"output","id":"REJLxbv-lo5KzEMbNQjU4","data":[],"key":"T4nPZvgM4l"}],"key":"QsXnGzAzv3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"swp_inp = inp[\"sweep_0\"].ds.set_coords(\"sweep_mode\")\nswp_out = out[\"sweep_0\"].ds.set_coords(\"sweep_mode\")\ndisplay(swp_inp)\ndisplay(swp_out)","key":"Hc9sj1t5Vc"},{"type":"output","id":"ctGF3-mlFfdI_c5A0xh8B","data":[],"key":"Q6oljRyycF"}],"key":"b1jU7PUuQ7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a plot we will use for all PPIs in this exercise","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ix8PwlZY54"}],"identifier":"design-a-plot-we-will-use-for-all-ppis-in-this-exercise","label":"Design a plot we will use for all PPIs in this exercise","html_id":"design-a-plot-we-will-use-for-all-ppis-in-this-exercise","implicit":true,"key":"XYVUw7KV2S"}],"key":"eAMahxa6N3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import wradlib as wrl\nimport cartopy.crs as ccrs\nfrom cartopy.io.shapereader import Reader\n\nmap_proj = ccrs.AzimuthalEquidistant(central_latitude=swp_inp.latitude.values, central_longitude=swp_inp.longitude.values)\nosr_proj = wrl.georef.create_osr(\"aeqd\", lat_0=swp_inp.latitude.values, lon_0=swp_inp.longitude.values)\n\ndef plot_ppi_to_ax(ppi, ax, title=\"\", reader=None, **kwargs):\n    pm = ppi.wrl.vis.plot(crs=map_proj, ax=ax, **kwargs)\n    ax.set_title(title)\n    if reader is not None:\n        ax.add_geometries(reader.geometries(), ccrs.PlateCarree(), facecolor=\"lightgrey\", edgecolor='k', linewidths=1, zorder=-1)\n    wrl.vis.plot_ppi_crosshair(site=(ppi.longitude.values, ppi.latitude.values, ppi.altitude.values),\n                               ranges=[50000, 100000,150000, 200000, ppi.range.max().values], \n                               angles=[0, 90, 180, 270],\n                               line=dict(color=\"white\"),\n                               circle={\"edgecolor\": \"white\"},\n                               ax=ax,\n                               crs=osr_proj,\n                              )\n    return pm\n","key":"tvE4f8O2er"},{"type":"output","id":"13oS4oGBTAfKakixB0E4r","data":[],"key":"OOqgXfipgl"}],"key":"XQaOSI1fCd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the selected fields into one figure","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Vir2h6hwRt"}],"identifier":"plot-the-selected-fields-into-one-figure","label":"Plot the selected fields into one figure","html_id":"plot-the-selected-fields-into-one-figure","implicit":true,"key":"nm3vej8RHS"}],"key":"JZTq4OfoM5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12,10))\n\nax = plt.subplot(221, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.DBZH.where(swp_inp.DBZH>=-10), ax=ax, reader=reader, title=\"Before QC\", add_colorbar=False, vmin=-10, vmax=65)\n\nax = plt.subplot(222, projection=map_proj)\npm = plot_ppi_to_ax(swp_out.DBZH.where(swp_out.DBZH>=-10),  ax=ax, reader=reader, title=\"After QC\", add_colorbar=False, vmin=-10, vmax=65)\n\nax = plt.subplot(223, projection=map_proj)\nqm = plot_ppi_to_ax(swp_out.quality1,  ax=ax, reader=reader, add_colorbar=False, title=\"Quality 1\")\n\nax = plt.subplot(224, projection=map_proj)\nqm = plot_ppi_to_ax(swp_out.QIND,  ax=ax, reader=reader, add_colorbar=False, title=\"Quality 2\")\n\nplt.tight_layout()\n\n# Add colorbars\nfig.subplots_adjust(right=0.9)\ncax = fig.add_axes((0.9, 0.6, 0.03, 0.3))\ncbar = plt.colorbar(pm, cax=cax)\ncbar.set_label(\"Horizontal reflectivity (dBZ)\", fontsize=\"large\")\n\ncax = fig.add_axes((0.9, 0.1, 0.03, 0.3))\ncbar = plt.colorbar(qm, cax=cax)\ncbar.set_label(\"Quality index\", fontsize=\"large\")","key":"eZpwSHS7CS"},{"type":"output","id":"hBauHt3fo1rThraC1rTJF","data":[],"key":"dV1PhNoeFm"}],"key":"Es4u218hJP"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Collect and plot the polarimetric moments from the original ODIM_H5 dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZFDStm4zp9"}],"identifier":"collect-and-plot-the-polarimetric-moments-from-the-original-odim-h5-dataset","label":"Collect and plot the polarimetric moments from the original ODIM_H5 dataset","html_id":"collect-and-plot-the-polarimetric-moments-from-the-original-odim-h5-dataset","implicit":true,"key":"wOaLwdroOr"}],"key":"Xe6v9mf4w8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12,12))\n\nax = plt.subplot(221, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.RHOHV, ax=ax, title=\"RhoHV\", reader=reader)\n\nax = plt.subplot(222, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.PHIDP, ax=ax, title=\"PhiDP\", reader=reader)\n\nax = plt.subplot(223, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.ZDR, ax=ax, title=\"Differential reflectivity\", reader=reader)\n\nax = plt.subplot(224, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.VRAD, ax=ax, title=\"Doppler velocity\", reader=reader)\n\nplt.tight_layout()","key":"XvJu9HKvBC"},{"type":"output","id":"iqn6kxckT5A8KENFcFNgF","data":[],"key":"gOHsjRYNdm"}],"key":"iXiPuOmiax"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Try some filtering and attenuation correction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tl6Vb1lMyF"}],"identifier":"try-some-filtering-and-attenuation-correction","label":"Try some filtering and attenuation correction","html_id":"try-some-filtering-and-attenuation-correction","implicit":true,"key":"W2fMQcJicB"}],"key":"eUUHpQninz"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Set ZH to a very low value where we do not expect valid data\nzh = swp_inp.DBZH.fillna(-32.)\n# Retrieve PIA by using some constraints (see https://docs.wradlib.org/en/latest/notebooks/attenuation/attenuation.html for help)\npia = zh.wrl.atten.correct_attenuation_constrained(\n    constraints=[wradlib.atten.constraint_dbz,\n                 wradlib.atten.constraint_pia],\n    constraint_args=[[64.0],\n                     [20.0]])\n\n# Correct reflectivity by PIA\nzh_corrected = swp_inp.DBZH + pia","key":"u7oRwcnLek"},{"type":"output","id":"skcJINlwBTwuRUXhtrzXE","data":[],"key":"lkQ1nCWFrg"}],"key":"MyUizAqQHd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare results against QC from odc_toolbox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v8r9bpx4ul"}],"identifier":"compare-results-against-qc-from-odc-toolbox","label":"Compare results against QC from odc_toolbox","html_id":"compare-results-against-qc-from-odc-toolbox","implicit":true,"key":"Lq9VpdaXa5"}],"key":"PulPoJXBrT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(18,10))\n\nax = plt.subplot(131, projection=map_proj)\npm = plot_ppi_to_ax(swp_inp.DBZH.where(swp_out.DBZH>=-10), ax=ax, reader=reader, title=\"Before QC\")\n\nax = plt.subplot(132, projection=map_proj)\npm = plot_ppi_to_ax(swp_out.DBZH.where(swp_out.DBZH>=-10),  ax=ax, reader=reader, title=\"After QC using BALTRAD Toolbox\")\n\nax = plt.subplot(133, projection=map_proj)\npm = plot_ppi_to_ax(zh_corrected.where(zh_corrected>=-10), ax=ax, reader=reader, title=\"After QC using wradlib\")","key":"PQU8ZlONKE"},{"type":"output","id":"W0gel4689dVSvh2_S6u0B","data":[],"key":"QvZeVuesa4"}],"key":"AS5G9TtnTZ"}],"key":"XhcLsmrmz3"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"},"next":{"title":"LROSE Echo and Wind Retrieval Tutorial","url":"/lrose-introduction","group":"LROSE"}}},"domain":"http://localhost:3000"}