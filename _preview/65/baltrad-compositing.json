{"kind":"Notebook","sha256":"c9f9b957f00e1f168bd87fa9b3feaf14a18cd86ec8a3151c50e9c0f4099c5de7","slug":"baltrad-compositing","location":"/notebooks/baltrad/baltrad_short_course/4_BALTRAD_Compositing.ipynb","dependencies":[],"frontmatter":{"title":"Compositing","content_includes_title":false,"kernelspec":{"name":"conda-env-xradar-py","language":"python","display_name":"Python [conda env:xradar]"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"4_BALTRAD_Compositing.ipynb","url":"/erad2024/_preview/65/build/4_BALTRAD_Compositin-48e74478de4fb9507f55c95e1d9f92c6.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This exercise builds on output from the parallel processing exercise. It does not address how projections and navigation is dealt with in BALTRAD. This should be addressed in a separate exercise.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Hn8ieVXyIm"}],"key":"ckUc9mg9Q9"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Cartesian product area used in this exercise is pre-configured and looked up from a registry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Zu5en7TASb"}],"key":"nMvOp0uXdG"}],"key":"FGUGxW9szK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rudimentary composite","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oQYiUfXOHD"}],"identifier":"rudimentary-composite","label":"Rudimentary composite","html_id":"rudimentary-composite","implicit":true,"key":"k6rkzfdVJh"}],"key":"dXcyAKpyR7"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:37:22.231431Z","iopub.status.busy":"2024-08-14T09:37:22.231032Z","iopub.status.idle":"2024-08-14T09:37:22.662869Z","shell.execute_reply":"2024-08-14T09:37:22.662353Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport glob, time\nimport matplotlib\nimport _raveio, _rave\nimport _pycomposite, compositing\nimport warnings\nwarnings.filterwarnings('ignore')  # Suppress SyntaxWarning from Python2 code\n\ngenerator = compositing.compositing()\ngenerator.filenames = glob.glob(\"data/se*.h5\")","key":"YTHYrxcJAC"},{"type":"output","id":"bE8hLXOB9OEZTrY1XFi-Q","data":[],"key":"H9EI4CNQHp"}],"key":"uPav12ajvs"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:37:22.665269Z","iopub.status.busy":"2024-08-14T09:37:22.665021Z","iopub.status.idle":"2024-08-14T09:37:34.013372Z","shell.execute_reply":"2024-08-14T09:37:34.012730Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Run with all defaults to a pre-configured area that uses the Google Maps projection.\n# First two arguments are product date and time. These are taken from the last input file if not specified.\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\n\nrio = _raveio.new()\nrio.object = comp\nrio.save(\"data/comp_pcappi1000m.h5\")\n\nprint(\"Compositing took %3.2f seconds\" % (after-before))","key":"ZknVIEE5H1"},{"type":"output","id":"beGRaeGuFU7t7VVm4DrJe","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 11.31 seconds\n"}],"key":"Tee7DzYbzC"}],"key":"liO8iPry8C"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Tweak the plotter from earlier exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BvAEvOayWp"}],"identifier":"tweak-the-plotter-from-earlier-exercises","label":"Tweak the plotter from earlier exercises","html_id":"tweak-the-plotter-from-earlier-exercises","implicit":true,"key":"gH6G8O5Yl9"}],"key":"vczBk427zy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:37:34.016248Z","iopub.status.busy":"2024-08-14T09:37:34.015770Z","iopub.status.idle":"2024-08-14T09:37:34.024420Z","shell.execute_reply":"2024-08-14T09:37:34.023774Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Two color palettes, one used in GoogleMapsPlugin, and the other from RAVE\nfrom GmapColorMap import dbzh as dbzp\n\n# Convert a 768-list palette to a matplotlib colorlist\ndef make_colorlist(pal):\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i]/255.0, pal[i+1]/255.0, pal[i+2]/255.0])\n    return colorlist\n\n# Convert lists to colormaps\ndbzcl = make_colorlist(dbzp)\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\nStringType = type('')\ndef plot(data, colorlist=dbzcl, title=\"Composite\"):\n    mini, maxi = data.shape.index(min(data.shape)), data.shape.index(max(data.shape))\n    figsize=(20,16)# if mini == 0 else (12,8)\n    fig = plt.figure(figsize=figsize)\n    plt.title(title)\n    clist=colorlist if type(colorlist)==StringType else matplotlib.colors.ListedColormap(colorlist)\n    plt.imshow(data, cmap=clist, clim=(0,255))\n    plt.colorbar(shrink=float(data.shape[mini])/data.shape[maxi])","key":"DzskDoJvu0"},{"type":"output","id":"PAekbZuvMPVgwjmEiRfN8","data":[],"key":"DcyY2aSSxh"}],"key":"ZJsG4PuIK9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:37:34.026725Z","iopub.status.busy":"2024-08-14T09:37:34.026520Z","iopub.status.idle":"2024-08-14T09:37:34.453335Z","shell.execute_reply":"2024-08-14T09:37:34.452601Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Default composite: DBZH 1000 m Pseudo-CAPPI, nearest radar\")","key":"mCjxdK6yZM"},{"type":"output","id":"PcMpsEV-nN3kF9VxFnB2_","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"14a1907a7fc7bbc7097bf4cad6bfe855","path":"/erad2024/_preview/65/build/14a1907a7fc7bbc7097bf4cad6bfe855.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"AFrsifib4d"}],"key":"HXLZR6Uix6"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Maximum reflectivity, lowest pixel, add QC chain","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JoEdAqF8gk"}],"identifier":"maximum-reflectivity-lowest-pixel-add-qc-chain","label":"Maximum reflectivity, lowest pixel, add QC chain","html_id":"maximum-reflectivity-lowest-pixel-add-qc-chain","implicit":true,"key":"YzDlkQhDiL"}],"key":"JurfXUpJiK"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:37:34.456483Z","iopub.status.busy":"2024-08-14T09:37:34.456091Z","iopub.status.idle":"2024-08-14T09:37:56.790867Z","shell.execute_reply":"2024-08-14T09:37:56.790333Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.product = _rave.Rave_ProductType_MAX\ngenerator.selection_method = _pycomposite.SelectionMethod_HEIGHT\ngenerator.detectors = [\"ropo\", \"beamb\", \"radvol-att\", \"radvol-broad\", \"rave-overshooting\", \"qi-total\"]\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_max.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after-before))","key":"KnmFuJ2fOT"},{"type":"output","id":"T9sKon45GoX3E0g74s1bF","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 22.12 seconds\n"}],"key":"hwlvNNl4lw"}],"key":"mVEEuWNrgz"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:37:56.792974Z","iopub.status.busy":"2024-08-14T09:37:56.792795Z","iopub.status.idle":"2024-08-14T09:37:57.206209Z","shell.execute_reply":"2024-08-14T09:37:57.205590Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, lowest pixel\")","key":"Ibpni4Strk"},{"type":"output","id":"FG3B8SMHVqBptgICcAmAP","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"337297c6f237b9f37d6eac2a18b7518c","path":"/erad2024/_preview/65/build/337297c6f237b9f37d6eac2a18b7518c.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"AiYtaC5xbt"}],"key":"VAYewA4xg7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot correspondong total quality index","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dkBa05YbBr"}],"identifier":"plot-correspondong-total-quality-index","label":"Plot correspondong total quality index","html_id":"plot-correspondong-total-quality-index","implicit":true,"key":"d6AvhcypaR"}],"key":"ol9rYkI8v5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:37:57.209623Z","iopub.status.busy":"2024-08-14T09:37:57.209428Z","iopub.status.idle":"2024-08-14T09:37:57.637734Z","shell.execute_reply":"2024-08-14T09:37:57.637044Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh = comp.getParameter(\"DBZH\")\nqitot = dbzh.getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\nplot(qitot.getData(), \"binary\", \"Total quality index\")","key":"GnZObmiji9"},{"type":"output","id":"tclybrWje6uMDqGBiHBPC","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4f509c7ba3cd5077ab620888a50a9ab1","path":"/erad2024/_preview/65/build/4f509c7ba3cd5077ab620888a50a9ab1.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"FkNYxE08bh"}],"key":"tx3RYW0e8r"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now use “total quality” as the compositing criterion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"igPIoS4xTX"}],"identifier":"now-use-total-quality-as-the-compositing-criterion","label":"Now use “total quality” as the compositing criterion","html_id":"now-use-total-quality-as-the-compositing-criterion","implicit":true,"key":"E115gmGPKl"}],"key":"Obfp4gLhMG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:37:57.641656Z","iopub.status.busy":"2024-08-14T09:37:57.641246Z","iopub.status.idle":"2024-08-14T09:38:21.381474Z","shell.execute_reply":"2024-08-14T09:38:21.380913Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.qitotal_field = \"pl.imgw.quality.qi_total\"\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_qitotal.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after-before))","key":"nHsN0qgm9L"},{"type":"output","id":"KPjZC03NYcmL2FyKrjBgE","data":[{"name":"stdout","output_type":"stream","text":"Compositing took 23.54 seconds\n"}],"key":"CuYza6F8LT"}],"key":"B1At48nQ0R"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:38:21.384049Z","iopub.status.busy":"2024-08-14T09:38:21.383650Z","iopub.status.idle":"2024-08-14T09:38:21.800216Z","shell.execute_reply":"2024-08-14T09:38:21.799651Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, quality-based\")","key":"sIEsd4Dqi2"},{"type":"output","id":"SaAKjlULB1JCJ_caeSz44","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fafe350621bc411674b9e0a8c22aca4d","path":"/erad2024/_preview/65/build/fafe350621bc411674b9e0a8c22aca4d.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"ppe7RAUNuN"}],"key":"pv2ft1elyv"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-14T09:38:21.804522Z","iopub.status.busy":"2024-08-14T09:38:21.803909Z","iopub.status.idle":"2024-08-14T09:38:22.224458Z","shell.execute_reply":"2024-08-14T09:38:22.223730Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\").getData(), \"binary\", \"Total quality index\")","key":"F1nQxmFVYj"},{"type":"output","id":"nzQkUCHsJIqsBn5MzYIyV","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"437ad37009173ae652c0851459915b1e","path":"/erad2024/_preview/65/build/437ad37009173ae652c0851459915b1e.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"WmIGAOJr18"}],"key":"ljsIxUspgK"}],"key":"xgjciqDbED"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Parallel processing","url":"/baltrad-parallel-processing","group":"BALTRAD"},"next":{"title":"Rain Rate retrieval with Py-ART","url":"/baltrad-pyart-rain-rate-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}