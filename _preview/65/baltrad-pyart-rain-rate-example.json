{"kind":"Notebook","sha256":"780693465cff8f45e29127b7d77abf497b28743b24443e0e4475c112af8971d6","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"In this notebook, an ODIM_H5 file is read using BALTRAD.  Then the rain rate is determined from the calculated specific attenuation using Py-ART.","content_includes_title":false,"kernelspec":{"name":"python3","language":"python","display_name":"Python 3"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/65/build/baltrad_pyart_rain_r-8038c9807ec922ba91d7fea4a43cf1a2.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"This is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"GGGG4RFsLb"}],"identifier":"this-is-a-severe-flooding-case-from-july-8-2013-in-toronto-canada-with-radar-data-from-the-king-city-ontario-radar","label":"This is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","html_id":"this-is-a-severe-flooding-case-from-july-8-2013-in-toronto-canada-with-radar-data-from-the-king-city-ontario-radar","implicit":true,"key":"nDmstn8XIz"}],"visibility":"show","key":"qkSyO6wsG4"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"mJPEZgYmYk"},{"type":"output","id":"p49scca5K0WvncxQtoKax","data":[],"key":"EoY8IodyFo"}],"key":"lUZWa4mcB7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CETerECSIJ"}],"key":"Fwg1mHLTou"}],"key":"C8XUqGGpC8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio   # BALTRAD's input/output module\nimport cmweather","key":"cyTOxVjX5T"},{"type":"output","id":"Vg1mYwMyFUxdA6JQviAIA","data":[],"key":"iWScPdH3dZ"}],"key":"euWSV0Mivz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FInvSqYIR8"}],"key":"p6jUlPFNS8"}],"key":"K490SpW1j4"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"C7fFsP65IU"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"vmnuHe2iAH"}],"key":"pQBbJfIZV1"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open('data/WKR_201307082030.h5')","key":"X6hqL3IvOD"},{"type":"output","id":"JiHoJtrxx1EThK4J4cjt7","data":[],"key":"dlRKZMLNUs"}],"key":"BeWb0qRNWJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rH4xNwmHcO"}],"key":"FzcEc7mz2o"}],"key":"OyZaBIXus5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"aBPDc2ioe0"},{"type":"output","id":"qJfGPtCuRltm8Y0NnAdk1","data":[],"key":"duy3jE6JNG"}],"key":"sdGPRrxNLC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XcAdNIjMmy"}],"key":"D4MlC60Wpw"}],"key":"Q3TSyHenYR"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"futZvkKcpx"},{"type":"output","id":"yywSfBbg0ZAqNe5pfbI8Y","data":[],"key":"ViJMqhag77"}],"key":"zS9rBTPJ8i"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi('DBZH', 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"rGFI1qKIzg"},{"type":"output","id":"j_HQFQN8wxjuZJ0ZY4Zzj","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"18cd61e7649190ed66f19b5d4a5aa14e","path":"/erad2024/_preview/65/build/18cd61e7649190ed66f19b5d4a5aa14e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"JbzRTu9v9e"}],"key":"tCYJZsXEsl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi('PHIDP', 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"obYuThSJVk"},{"type":"output","id":"jKO_D507SjrwkaE9JB7hd","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"5125f813c0ef9ccac878bd4e2d65f76e","path":"/erad2024/_preview/65/build/5125f813c0ef9ccac878bd4e2d65f76e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"fSB1WbDzsc"}],"key":"k8eLa13fns"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi('RHOHV', 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"qErvVLDziV"},{"type":"output","id":"JlGA68PxLfXJ6eck0Rvb3","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"22b3d67d622dfaeaf1ec53ac522fe5c2","path":"/erad2024/_preview/65/build/22b3d67d622dfaeaf1ec53ac522fe5c2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"PpdyHLYMrE"}],"key":"h5DNpQBaWJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi('SQIH', 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"L9rlB1kyqB"},{"type":"output","id":"F43H8n3yTnITChBKA-4a-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"cd10816b21bc4f31bbd750cb6d22d0e9","path":"/erad2024/_preview/65/build/cd10816b21bc4f31bbd750cb6d22d0e9.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"YjdtaRyOcc"}],"key":"oGYbXKoUYf"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MU9ubDVABv"}],"key":"o9mlDmvAcS"}],"key":"X9DlVdo8pO"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar, 0, doc=0, refl_field='DBZH', ncp_field='SQIH', \n    rhv_field='RHOHV', phidp_field='PHIDP', \n    fzl=8000,)\n# use the parameter below for a more 'cleanup up' attenuation field\n#ncp_min=-1, rhv_min=-1)","key":"YP9mljivHb"},{"type":"output","id":"7mcZ1gT9QlIwPGzxYoiej","data":[],"key":"KqmrlMALCx"}],"key":"Nb5dOo3NLq"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field('specific_attenuation2', spec_at)\nradar.add_field('corrected_reflectivity2', cor_z)","key":"DNfdXjCfph"},{"type":"output","id":"oyav_uGtiDnAtsGM8hV-W","data":[{"ename":"ValueError","evalue":"A field with name: specific_attenuation2 already exists","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)\nCell \u001b[0;32mIn[25], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mradar\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43madd_field\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mspecific_attenuation2\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mspec_at\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m      2\u001b[0m radar\u001b[38;5;241m.\u001b[39madd_field(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcorrected_reflectivity2\u001b[39m\u001b[38;5;124m'\u001b[39m, cor_z)\n\nFile \u001b[0;32m/srv/conda/envs/notebook/lib/python3.11/site-packages/pyart/core/radar.py:796\u001b[0m, in \u001b[0;36mRadar.add_field\u001b[0;34m(self, field_name, dic, replace_existing)\u001b[0m\n\u001b[1;32m    794\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m field_name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfields \u001b[38;5;129;01mand\u001b[39;00m replace_existing \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m:\n\u001b[1;32m    795\u001b[0m     err \u001b[38;5;241m=\u001b[39m \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mA field with name: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfield_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m already exists\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m--> 796\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(err)\n\u001b[1;32m    797\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdata\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m dic:\n\u001b[1;32m    798\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdic must contain a \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdata\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m key\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\n\u001b[0;31mValueError\u001b[0m: A field with name: specific_attenuation2 already exists"}],"key":"FZJuHL9Bz6"}],"key":"o2Lgp3n59s"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BjZoaIRUIy"}],"key":"yA0Bf6rKaD"}],"key":"q8fkdF3JX7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi('specific_attenuation', 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"eo8dZqRN7i"},{"type":"output","id":"lmN4Hl1Gu8Fo3Qj8bwoQp","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"cc4a9447d80d17311aa0f154b26ac170","path":"/erad2024/_preview/65/build/cc4a9447d80d17311aa0f154b26ac170.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"Iys1CNwl0w"}],"key":"eanupbvSHW"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi('corrected_reflectivity', 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"J8ZnZaDmOu"},{"type":"output","id":"yX9SAQABjObu_AGkC0rAR","data":[],"key":"mFHZWFEnNL"}],"key":"IrbvGeDFHa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"od4dGyMmJh"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"SabvF63FoS"}],"key":"kX75jbDZSj"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"gqUFu8VElf"}],"key":"rgjJIRc9dR"}],"key":"ipKqbYKWl5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields['specific_attenuation']['data']) ** 0.89\nrain_rate_dic = pyart.config.get_metadata('rain_rate')\nrain_rate_dic['units'] = 'mm/hr'\nrate_not_valid = np.logical_or(\n    (radar.fields['SQIH']['data'] < 0.4),\n    (radar.fields['RHOHV']['data'] < 0.8))\nrain_rate_dic['data'] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic['data'] = np.ma.filled(rain_rate_dic['data'], 0)","key":"KhGqXrjc4t"},{"type":"output","id":"B-veZW8fz28HcaT5EVBus","data":[],"key":"FwYBpCASHk"}],"key":"nlBcYnNRKp"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field('RATE', rain_rate_dic)","key":"W25OtRiOfd"},{"type":"output","id":"R5h1UCxwF0lOytZC-j1KS","data":[],"key":"YqHXDrltcR"}],"key":"YN0IwcxkyL"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xHfHHekFsJ"}],"key":"XML977fqTJ"}],"key":"u85o61piJ2"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi('RATE', 0, vmin=0, vmax=50.0)","key":"xXbnTL51aS"},{"type":"output","id":"j3VHYoAdS2-yNPUUojTor","data":[],"key":"Um44GHYoth"}],"key":"HnaUsfbPtd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Njy55GprmO"}],"key":"AuwnRzOXFZ"}],"key":"KMLi1LYrKa"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"BOTJijxteE"},{"type":"output","id":"MOup-C5IIv6oKeUxpMKkQ","data":[],"key":"VZy5aUonmh"}],"key":"kWz8Lci94c"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\nprint(\"ODIM_H5 file is %i bytes large\" % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\"))","key":"fM7kQemIBC"},{"type":"output","id":"uxqmqraDq3OrvXf_AeC0K","data":[],"key":"Y1Ve1Xj4Ax"}],"key":"z288jTfrta"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Publish a time series of Cartesian products of corrected reflectivity to BALTRAD’s GoogleMapsPlugin","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kslejtddtD"}],"identifier":"publish-a-time-series-of-cartesian-products-of-corrected-reflectivity-to-baltrads-googlemapsplugin","label":"Publish a time series of Cartesian products of corrected reflectivity to BALTRAD’s GoogleMapsPlugin","html_id":"publish-a-time-series-of-cartesian-products-of-corrected-reflectivity-to-baltrads-googlemapsplugin","implicit":true,"key":"W80Cb7sptY"}],"key":"ObZj8GVfpx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Using your Browser, preferably anything except Microsoft Internet Explorer, view a pre-loaded product:  ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fZkxQgBowg"},{"type":"link","url":"http://localhost:8080","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"http://​localhost:8080","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sI3Y6ieb2E"}],"urlSource":"http://localhost:8080","key":"KUCveC1jvD"},{"type":"text","value":"  Use the small Calendar icon in the control panel to select 2013-07-08 20:30. The dropdown box under the date/time field should read “King City, ON”.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XKW9SDmIJj"}],"identifier":"using-your-browser-preferably-anything-except-microsoft-internet-explorer-view-a-pre-loaded-product-http-localhost-8080-use-the-small-calendar-icon-in-the-control-panel-to-select-2013-07-08-20-30-the-dropdown-box-under-the-date-time-field-should-read-king-city-on","label":"Using your Browser, preferably anything except Microsoft Internet Explorer, view a pre-loaded product:  http://localhost:8080  Use the small Calendar icon in the control panel to select 2013-07-08 20:30. The dropdown box under the date/time field should read “King City, ON”.","html_id":"using-your-browser-preferably-anything-except-microsoft-internet-explorer-view-a-pre-loaded-product-http-localhost-8080-use-the-small-calendar-icon-in-the-control-panel-to-select-2013-07-08-20-30-the-dropdown-box-under-the-date-time-field-should-read-king-city-on","implicit":true,"key":"MuOKbEPaSj"}],"key":"ltxsI2upKJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Fire up the RAVE Product Generation Framework’s server. This is normally done on the command line.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NDXdJ2pBMS"}],"identifier":"fire-up-the-rave-product-generation-frameworks-server-this-is-normally-done-on-the-command-line","label":"Fire up the RAVE Product Generation Framework’s server. This is normally done on the command line.","html_id":"fire-up-the-rave-product-generation-frameworks-server-this-is-normally-done-on-the-command-line","implicit":true,"key":"G2flFN3vEP"}],"key":"jukrU1OTsC"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nos.system(\"rave_pgf start\")","key":"FzManucyFN"},{"type":"output","id":"x1YGxvoE1YF2NH-gc3oPt","data":[],"key":"LtddNrC2Vh"}],"key":"NzvvTjRmp5"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Connect to this XML-RPC server and feed it file strings of pre-generated products","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w2rUyrwabO"}],"identifier":"connect-to-this-xml-rpc-server-and-feed-it-file-strings-of-pre-generated-products","label":"Connect to this XML-RPC server and feed it file strings of pre-generated products","html_id":"connect-to-this-xml-rpc-server-and-feed-it-file-strings-of-pre-generated-products","implicit":true,"key":"Jr24FGKzWA"}],"key":"mqwU2aWpvP"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import glob, xmlrpc.client\n\nipath = \"/home/vagrant/pyart2baltrad/data/cawkr\"\nopath = \"/home/vagrant/miniconda/envs/openradar/rave_gmap/web/data/cawkr_gmaps\"\n\nserver = xmlrpc.client.ServerProxy(\"http://localhost:8085/RAVE\")\n\nfstrs = glob.glob(ipath + \"/*.h5\")\n\nfor ifstr in fstrs:\n    # Output file name must only be date/time string with format: YYYYMMDDHHmm.png\n    dt = os.path.split(ifstr)[1].split('_')[2].split('.')[0]\n    \n    ofstr = opath + \"/%s/%s/%s/%s.png\" % (dt[:4], dt[4:6], dt[6:8], dt)\n    response = server.generate(\"se.smhi.rave.creategmapimage\", [ifstr], [\"outfile\",ofstr])\n\nprint(\"Generated %i PNG images for Google Maps\" % len(fstrs))","key":"PI4GWWd5RH"},{"type":"output","id":"4-A1fzOmpy-H1lz7Qp0Ss","data":[],"key":"xdbf21ubbQ"}],"key":"v2BTB5FFc2"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Go back to your browser and load a sequence of images. Stop the PGF server.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AAJDcHaBiH"}],"identifier":"go-back-to-your-browser-and-load-a-sequence-of-images-stop-the-pgf-server","label":"Go back to your browser and load a sequence of images. Stop the PGF server.","html_id":"go-back-to-your-browser-and-load-a-sequence-of-images-stop-the-pgf-server","implicit":true,"key":"TuMmVV5w7n"}],"key":"Vd50jGruMl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"os.system(\"rave_pgf stop\")","key":"NNqna45NUh"},{"type":"output","id":"3mDkwxUmCdmJv2q0V6bI8","data":[],"key":"M7twb4Xjb0"}],"key":"MZXIPIZ3GC"}],"key":"X41BBTbHoa"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"BALTRAD Quality Control","url":"/baltrad-qc","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART and BALTRAD","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}