{"kind":"Notebook","sha256":"288dd50e8035580351f19d28a4cbe07845bb5ee62ed83b6e86799de41b58ae7a","slug":"baltrad-qc","location":"/notebooks/baltrad/baltrad_short_course/BALTRAD_QC.ipynb","dependencies":[],"frontmatter":{"title":"BALTRAD Quality Control","content_includes_title":false,"kernelspec":{"name":"python3","language":"python","display_name":"Python 3"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"BALTRAD_QC.ipynb","url":"/erad2024/_preview/65/build/BALTRAD_QC-3976aa0c73bec8949f1592515cdcf10b.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the file I/O module along with the main RAVE module containing useful constants","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PkDlWOQJI3"}],"identifier":"import-the-file-i-o-module-along-with-the-main-rave-module-containing-useful-constants","label":"Import the file I/O module along with the main RAVE module containing useful constants","html_id":"import-the-file-i-o-module-along-with-the-main-rave-module-containing-useful-constants","implicit":true,"key":"glARPjcSZ7"}],"key":"v2gvpEX9BA"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport matplotlib\nimport _raveio, _rave","key":"moG0gVORke"},{"type":"output","id":"obfuh9msyljBHFCemWYxY","data":[],"key":"T6h8qTygm9"}],"key":"TYrXqqryFw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read an input ODIM_H5 file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VY9Xcr1TtF"}],"identifier":"read-an-input-odim-h5-file","label":"Read an input ODIM_H5 file","html_id":"read-an-input-odim-h5-file","implicit":true,"key":"wzQ5KfHxez"}],"key":"ls6mPMjjDx"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/201405190715_SUR.h5\")","key":"bBqbk3MDNt"},{"type":"output","id":"5mgHROL0npFnr-WkREVpv","data":[],"key":"MWHg58y2Z3"}],"key":"b5ySGrtmUY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a simple plotter for B-scans, elaborating the example from the I/O exercise","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FFoJqWa2FA"}],"identifier":"create-a-simple-plotter-for-b-scans-elaborating-the-example-from-the-i-o-exercise","label":"Create a simple plotter for B-scans, elaborating the example from the I/O exercise","html_id":"create-a-simple-plotter-for-b-scans-elaborating-the-example-from-the-i-o-exercise","implicit":true,"key":"gT8gx48aGQ"}],"key":"OeAWrPleq3"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"# Two color palettes, one used in GoogleMapsPlugin, and the other from RAVE\nfrom GmapColorMap import dbzh as dbzp\nfrom rave_win_colors import continuous_MS as vradp\n\n# Convert a 768-list palette to a matplotlib colorlist\ndef make_colorlist(pal):\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i]/255.0, pal[i+1]/255.0, pal[i+2]/255.0])\n    return colorlist\n\n# Convert lists to colormaps\ndbzcl = make_colorlist(dbzp)\nvradcl = make_colorlist(vradp)\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\n#from types import StringType\nStringType = type('')\ndef plot(data, colorlist=dbzcl, title=\"B-scan\"):\n    mini, maxi = data.shape.index(min(data.shape)), data.shape.index(max(data.shape))\n    figsize=(16,12) if mini == 0 else (12,8)\n    fig = plt.figure(figsize=figsize)\n    plt.title(title)\n    clist=colorlist if type(colorlist)==StringType else matplotlib.colors.ListedColormap(colorlist)\n    plt.imshow(data, cmap=clist, clim=(0,255))\n    plt.colorbar(shrink=float(data.shape[mini])/data.shape[maxi])","key":"A1KOPpZw4Q"},{"type":"output","id":"o3trY40MwjBRd-GYQfoH9","data":[],"key":"sbMMMbx6U9"}],"key":"xMMpRSBdC7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access the polar volume and plot VRAD data from the lowest scan","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GAeftKulGH"}],"identifier":"access-the-polar-volume-and-plot-vrad-data-from-the-lowest-scan","label":"Access the polar volume and plot VRAD data from the lowest scan","html_id":"access-the-polar-volume-and-plot-vrad-data-from-the-lowest-scan","implicit":true,"key":"xFLtsob0T5"}],"key":"EgFhVnIxDS"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"pvol = rio.object\nplot(pvol.getScan(0).getParameter(\"VRADH\").getData(), vradcl, \"Original VRAD\")","key":"DQAzfhSOKh"},{"type":"output","id":"I1gUzdwQdAApYJEGsLAYe","data":[],"key":"CiHfrR7IjD"}],"key":"vunOTKrgjd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dealias the volume","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fEFW2MxvN3"}],"identifier":"dealias-the-volume","label":"Dealias the volume","html_id":"dealias-the-volume","implicit":true,"key":"OY1E5cZ3hq"}],"key":"huYfeepPuC"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"import _dealias\nret = _dealias.dealias(pvol)","key":"LHxjEgDDo5"},{"type":"output","id":"5nLKGZVHkLhvv51XNahL_","data":[],"key":"qpeFj19thC"}],"key":"BO3HuAyuT9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Check whether the first scan’s been dealiased","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DpFDKZpO90"}],"identifier":"check-whether-the-first-scans-been-dealiased","label":"Check whether the first scan’s been dealiased","html_id":"check-whether-the-first-scans-been-dealiased","implicit":true,"key":"ax0Wbkp3yG"}],"key":"gcJ616TAEQ"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"print(\"This first scan is dealiased: %s\" % str(_dealias.dealiased(pvol.getScan(0))))","key":"d9QoSEYdoL"},{"type":"output","id":"AVPUdBa3JcaQI4g1nzut9","data":[],"key":"MjKpVkbsrX"}],"key":"MDpSRZkLEX"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Replot for comparison","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HOcybVmvsf"}],"identifier":"replot-for-comparison","label":"Replot for comparison","html_id":"replot-for-comparison","implicit":true,"key":"gDaqqnYev3"}],"key":"fguByjaZl1"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(pvol.getScan(0).getParameter(\"VRADH\").getData(), vradcl, \"Dealiased VRAD\")","key":"bdoD5UBfTG"},{"type":"output","id":"cm4_VMkWK885beTAkjh8m","data":[],"key":"wi9p2388Xx"}],"key":"b0E790Xu0X"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Shift gears - back to reflectivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PyM6tYKh0f"}],"identifier":"shift-gears-back-to-reflectivity","label":"Shift gears - back to reflectivity","html_id":"shift-gears-back-to-reflectivity","implicit":true,"key":"GbAJVP4CgJ"}],"key":"JGHtEfwHkF"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/plrze_pvol_20120205T0430Z.h5\")\npvol = rio.object\nplot(pvol.getScan(0).getParameter(\"DBZH\").getData(), title=\"Original DBZH\")","key":"isugXZxGr1"},{"type":"output","id":"G0hgN7wo_qL3rpNE0DuU7","data":[],"key":"vEbSZd6p5P"}],"key":"x7KToe6bM8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the bRopo package’s quality plugin to identify and remove non-precipitation echoes","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OWzXYlSzAz"}],"identifier":"use-the-bropo-packages-quality-plugin-to-identify-and-remove-non-precipitation-echoes","label":"Use the bRopo package’s quality plugin to identify and remove non-precipitation echoes","html_id":"use-the-bropo-packages-quality-plugin-to-identify-and-remove-non-precipitation-echoes","implicit":true,"key":"zTDxQ8VRZH"}],"key":"PTN3yTAy7l"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"import odc_polarQC\nimport warnings\nwarnings.filterwarnings('ignore')  # Suppress SyntaxWarning from Python2 code\n\nodc_polarQC.algorithm_ids = [\"ropo\"]\npvol = odc_polarQC.QC(pvol)","key":"CP8Jf8Qui5"},{"type":"output","id":"6GDCRdc6C9GfC6sUWgOGv","data":[],"key":"nuyYnEtw5S"}],"key":"WXw8qcIBiz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the resulting DBZH","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cjC9c67Dqv"}],"identifier":"plot-the-resulting-dbzh","label":"Plot the resulting DBZH","html_id":"plot-the-resulting-dbzh","implicit":true,"key":"f0KjoZX6Gi"}],"key":"FtkgEzLCF1"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(pvol.getScan(0).getParameter(\"DBZH\").getData(), title=\"DBZH after bRopo\")","key":"snWSiG5775"},{"type":"output","id":"_z_PvmwXJkb9czk8846N_","data":[],"key":"Mp4jINILuj"}],"key":"RTP9zhV4Sx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Topographical beam-blockage QC using the beamb package’s quality plugin","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TA9OUtzev4"}],"identifier":"topographical-beam-blockage-qc-using-the-beamb-packages-quality-plugin","label":"Topographical beam-blockage QC using the beamb package’s quality plugin","html_id":"topographical-beam-blockage-qc-using-the-beamb-packages-quality-plugin","implicit":true,"key":"H4l4XhB5r2"}],"key":"B9fMVFGhFX"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"import time\nodc_polarQC.algorithm_ids = [\"beamb\"]\nbefore = time.time()\npvol = odc_polarQC.QC(pvol)\nafter = time.time()\nprint(\"beamb runtime = %2.2f seconds\" % (after-before))","key":"vqYm1nABuZ"},{"type":"output","id":"iW-nmDZFIIzbqC3fRXT9T","data":[],"key":"qIkU9255Yq"}],"key":"FDqjLxWjGP"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Probability of overshooting","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sNkA5IUwrE"}],"identifier":"probability-of-overshooting","label":"Probability of overshooting","html_id":"probability-of-overshooting","implicit":true,"key":"odBqTwxwEt"}],"key":"r53Zo2YFRQ"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"odc_polarQC.algorithm_ids = [\"rave-overshooting\"]\npvol = odc_polarQC.QC(pvol)","key":"npejsDclhx"},{"type":"output","id":"ZhHHbjyDMtaeSUyVXSioX","data":[],"key":"TKGXzr3z9r"}],"key":"clJUTa8ZTT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Accessing and manging data quality fields","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZaGjZ6yIjT"}],"identifier":"accessing-and-manging-data-quality-fields","label":"Accessing and manging data quality fields","html_id":"accessing-and-manging-data-quality-fields","implicit":true,"key":"x3jcSpRhXn"}],"key":"IpqTLxgatk"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"scan = pvol.getScan(0)\nprint(\"Scan contains %i quality fields\" % scan.getNumberOfQualityFields())","key":"nDM8X3OqbJ"},{"type":"output","id":"QRJHsuyLvmdqnY5bERKWf","data":[],"key":"Cg7J7KhTfw"}],"key":"S04Qw9QzYO"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"for i in range(scan.getNumberOfQualityFields()):\n    qf = scan.getQualityField(i)\n    print(\"Quality field %i has identifier %s\" % (i, qf.getAttribute(\"how/task\")))","key":"mu2NVnqQZ1"},{"type":"output","id":"74z9NLzW7LDq4Lx2oer4W","data":[],"key":"VVEg4jN2Xj"}],"key":"t6JXhmc9yH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot quality fields","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fn8arN6Cr1"}],"identifier":"plot-quality-fields","label":"Plot quality fields","html_id":"plot-quality-fields","implicit":true,"key":"vzUrkF17Jp"}],"key":"h15fRdm3tz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Beam blockage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"X7WfzFqr66"}],"identifier":"beam-blockage","label":"Beam blockage","html_id":"beam-blockage","implicit":true,"key":"P4BZqkBSiE"}],"key":"lefInTjcWQ"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"bb = scan.getQualityFieldByHowTask(\"se.smhi.detector.beamblockage\")\nplot(bb.getData(), \"binary\", \"Quality indicator for beam blockage\")","key":"Rwlm9MS8S7"},{"type":"output","id":"FBQQXMvyXwBhhmU-IvkIu","data":[],"key":"RlicRmjD2e"}],"key":"uPohjZq44C"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Probability of non-precipitation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gka0NLKf1x"}],"identifier":"probability-of-non-precipitation","label":"Probability of non-precipitation","html_id":"probability-of-non-precipitation","implicit":true,"key":"FXS4iuN7jS"}],"key":"OabwmzsupX"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"bb = scan.getQualityFieldByHowTask(\"fi.fmi.ropo.detector.classification\")\nplot(bb.getData(), \"binary\", \"Quality indicator for ropo\")","key":"rKRWbChvGZ"},{"type":"output","id":"KEW_h7df_66V3ARlbukHT","data":[],"key":"GgVFxCEuMr"}],"key":"am9oRI4Nl7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Probability of overshooting","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GyE0ZWBqz1"}],"identifier":"probability-of-overshooting","label":"Probability of overshooting","html_id":"probability-of-overshooting-1","implicit":true,"key":"LAwxQ1gzdq"}],"key":"JrPgV4xTo2"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"bb = scan.getQualityFieldByHowTask(\"se.smhi.detector.poo\")\nplot(bb.getData(), \"binary\", \"Quality indicator for PoO\")","key":"wdi510RQY9"},{"type":"output","id":"_Cv3No7YWcSxWHAbq0W5E","data":[],"key":"W9rUITbnYK"}],"key":"IFYQogE7zv"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Chaining algorithms - new data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BpMuWfZIZY"}],"identifier":"chaining-algorithms-new-data","label":"Chaining algorithms - new data","html_id":"chaining-algorithms-new-data","implicit":true,"key":"YKH7m0Ii6I"}],"key":"wJJ1oPKimX"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/sekir.h5\")\npvol = rio.object\n\nodc_polarQC.algorithm_ids = [\"ropo\", \"beamb\", \"radvol-att\", \"radvol-broad\", \"rave-overshooting\"]\npvol = odc_polarQC.QC(pvol)","key":"eUtAlf0RbZ"},{"type":"output","id":"n9SpydxKeLBQlR_EtYtBL","data":[],"key":"XCv3ZMaOiw"}],"key":"tS0yWNVhwi"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"scan = pvol.getScan(0)\natt = scan.getQualityField(2)\nplot(att.getData(), \"binary\", \"Attenuation\")","key":"RhJ7CSmIFC"},{"type":"output","id":"2-E3xud55lGYz8EWHnOER","data":[],"key":"JK6NBCWOil"}],"key":"etd3BjxQHV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"“Total Quality”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O1hU2yXvvH"}],"identifier":"total-quality","label":"“Total Quality”","html_id":"total-quality","implicit":true,"key":"pBdqTJcic6"}],"key":"OS9CQaXwYq"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"odc_polarQC.algorithm_ids = [\"qi-total\"]\npvol = odc_polarQC.QC(pvol)","key":"mvOUDpGw83"},{"type":"output","id":"umfCBDLMLkX0K8n99rZCS","data":[],"key":"uYATu1tRWx"}],"key":"lWEQSk1W2a"},{"type":"block","kind":"notebook-code","data":{"trusted":true},"children":[{"type":"code","lang":"python","executable":true,"value":"qitot = scan.getQualityField(5)\nplot(qitot.getData(), \"binary\", \"Total quality index\")","key":"XeHhnyYYI4"},{"type":"output","id":"uk_CNKN-2oaKH-DVWixkq","data":[],"key":"QOMHi44FWS"}],"key":"mdlpzJXJDN"}],"key":"Oy0zJvJzyT"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"BALTRAD parallel processing","url":"/baltrad-parallel-processing","group":"BALTRAD"},"next":{"title":"In this notebook, an ODIM_H5 file is read using BALTRAD.  Then the rain rate is determined from the calculated specific attenuation using Py-ART.","url":"/baltrad-pyart-rain-rate-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}