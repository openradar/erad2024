{"kind":"Notebook","sha256":"c67a390a0a3647eedeae0ffc4edf70b799824d7d95d91e7a8b698ff20cdfb92a","slug":"baltrad-io","location":"/notebooks/baltrad/baltrad_short_course/0_BALTRAD_IO.ipynb","dependencies":[],"frontmatter":{"title":"I/O model","content_includes_title":false,"kernelspec":{"name":"conda-env-baltrad-py","language":"python","display_name":"Python [conda env:baltrad]"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_BALTRAD_IO.ipynb","url":"/erad2024/_preview/65/build/0_BALTRAD_IO-c1200e5f8afa9418477810dc1f4d3e08.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"making sense out of data and metadata","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NyRjsexI4o"}],"key":"VQiFhvOKsX"}],"key":"R1MeN4aCe0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the file I/O module along with the main RAVE module containing useful constants","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RFsgQ8QjXb"}],"identifier":"import-the-file-i-o-module-along-with-the-main-rave-module-containing-useful-constants","label":"Import the file I/O module along with the main RAVE module containing useful constants","html_id":"import-the-file-i-o-module-along-with-the-main-rave-module-containing-useful-constants","implicit":true,"key":"ZgQSs1qBJI"}],"key":"UBkKwZpoTh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport _raveio, _rave","key":"GJHRCywz4n"},{"type":"output","id":"oC9LevVty_sAKLx7PDJnC","data":[],"key":"fXtefgRoQW"}],"key":"A7grRtZRlm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read an input ODIM_H5 file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qHtiReQBqs"}],"identifier":"read-an-input-odim-h5-file","label":"Read an input ODIM_H5 file","html_id":"read-an-input-odim-h5-file","implicit":true,"key":"EWKrWq7p75"}],"key":"HMvBdJ9sc7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/201405190715_SUR.h5\")","key":"F2b5quj7P3"},{"type":"output","id":"MgeEpzJ-roCiwzr83Zd4U","data":[],"key":"dYWEzFRYb7"}],"key":"ohzPIkZTLD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What is the payload in the I/O container?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JD5QxpT5wf"}],"identifier":"what-is-the-payload-in-the-i-o-container","label":"What is the payload in the I/O container?","html_id":"what-is-the-payload-in-the-i-o-container","implicit":true,"key":"KMLol2SuU8"}],"key":"JmeyGjmgpZ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rio.objectType is _rave.Rave_ObjectType_PVOL","key":"onsiwUZKLm"},{"type":"output","id":"wkCgUJBP3EjLEU4lm0qVu","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"True","content_type":"text/plain"}}}],"key":"C6hIotD13m"}],"key":"HZeXgnRWY1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"How many scans does this volume contain?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jdiMbwORHV"}],"identifier":"how-many-scans-does-this-volume-contain","label":"How many scans does this volume contain?","html_id":"how-many-scans-does-this-volume-contain","implicit":true,"key":"Os3mEgt7Vx"}],"key":"el07gXkEHg"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"pvol = rio.object\nprint(\"%i scans in polar volume\" % pvol.getNumberOfScans())","key":"Qb8slfsgU6"},{"type":"output","id":"qYi4td_SBvqTGWyIZTEkr","data":[{"name":"stdout","output_type":"stream","text":"8 scans in polar volume\n"}],"key":"ZFyaF4oPMI"}],"key":"dreKC3DHbN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ascending or descending scan strategy?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zPqG8jXS2T"}],"identifier":"ascending-or-descending-scan-strategy","label":"Ascending or descending scan strategy?","html_id":"ascending-or-descending-scan-strategy","implicit":true,"key":"JVxHtMY9WG"}],"key":"lsGo63p1Lo"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"pvol.isAscendingScans()","key":"L58HcxameL"},{"type":"output","id":"L9YAo5f9j1KmOwodvKZ4E","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"True","content_type":"text/plain"}}}],"key":"IPLBQ29Fis"}],"key":"ivbufJwWpm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Where is this site?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wN3qsX0vO1"}],"identifier":"where-is-this-site","label":"Where is this site?","html_id":"where-is-this-site","implicit":true,"key":"CJa7rCqVTG"}],"key":"BPV0hDiP48"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Note that all angles are represented internally in radians","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iSIGJmG3EH"}],"identifier":"note-that-all-angles-are-represented-internally-in-radians","label":"Note that all angles are represented internally in radians","html_id":"note-that-all-angles-are-represented-internally-in-radians","implicit":true,"key":"m7rGxc2xMa"}],"key":"VoF6n1gxWY"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from Proj import rd\nprint(\"Site is located at %2.3f° lon, %2.3f° lat and %3.1f masl\" % (pvol.longitude*rd, pvol.latitude*rd, pvol.height))\nprint(\"Site's ODIM source identifiers are: %s\" % pvol.source)","key":"iP2RajLTFU"},{"type":"output","id":"VKCo2Wi-qIKc9lE67oxLZ","data":[{"name":"stdout","output_type":"stream","text":"Site is located at 25.519° lon, 58.482° lat and 157.0 masl\nSite's ODIM source identifiers are: WMO:26232,RAD:EE41,PLC:SÃ¼rgavere,NOD:eesur\n"}],"key":"lS9TFIAsi5"}],"key":"w4z8DgEih7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access lowest scan and query some characteristics","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vaKqw5vB2a"}],"identifier":"access-lowest-scan-and-query-some-characteristics","label":"Access lowest scan and query some characteristics","html_id":"access-lowest-scan-and-query-some-characteristics","implicit":true,"key":"Gyv4iZgvv1"}],"key":"AFefXRZnMd"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"scan = pvol.getScan(0)\nnrays, nbins = scan.nrays, scan.nbins\nprint(\"Elevation angle %2.1f°\" % (scan.elangle*rd))\nprint(\"%i rays per sweep\" % nrays)\nprint(\"%i bins per ray\" % nbins)\nprint(\"%3.1f meter range bins\" % scan.rscale)\nprint(\"First ray scanned is ray %i (indexing starts at 0)\" % scan.a1gate)\nprint(\"Data acquisition started on %s:%sZ\" % (scan.startdate, scan.starttime))\nprint(\"Data acquisition ended on %s:%sZ\" % (scan.enddate, scan.endtime))\nprint(\"Scan contains %i quantities: %s\" % (len(scan.getParameterNames()), scan.getParameterNames()))","key":"FaNVPnQ5e0"},{"type":"output","id":"23HVnXlPkX14oEq3SnjwF","data":[{"name":"stdout","output_type":"stream","text":"Elevation angle 0.5°\n360 rays per sweep\n831 bins per ray\n300.0 meter range bins\nFirst ray scanned is ray 189 (indexing starts at 0)\nData acquisition started on 20140519:071509Z\nData acquisition ended on 20140519:071537Z\nScan contains 10 quantities: ['DBZH', 'RHOHV', 'HCLASS', 'WRADH', 'PHIDP', 'ZDR', 'SQIH', 'KDP', 'VRADH', 'TH']\n"}],"key":"Uy0V6VFxmh"}],"key":"zaTZK9TWNm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access horizontal reflectivity and query some characteristics","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OWCBYJ0BZr"}],"identifier":"access-horizontal-reflectivity-and-query-some-characteristics","label":"Access horizontal reflectivity and query some characteristics","html_id":"access-horizontal-reflectivity-and-query-some-characteristics","implicit":true,"key":"aJDM2zo9SH"}],"key":"sWTsC8aAqF"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh = scan.getParameter(\"DBZH\")\nprint(\"Quantity is %s\" % dbzh.quantity)\nprint(\"8-bit unsigned byte data? %s\" % str(dbzh.datatype is _rave.RaveDataType_UCHAR))\nprint(\"Linear scaling coefficients from 0-255 to dBZ: gain=%2.1f, offset=%2.1f\" % (dbzh.gain, dbzh.offset))\nprint(\"Unradiated areas = %2.1f, radiated areas with no echo = %2.1f\" % (dbzh.nodata, dbzh.undetect))\n\ndbzh_data = dbzh.getData()  # Accesses the NumPy array containing the reflectivities\nprint(\"NumPy array's dimensions = %s and type = %s\" % (str(dbzh_data.shape), dbzh_data.dtype))","key":"JdByNLBLYY"},{"type":"output","id":"ii9aCWzSjD_J6mcvxt4yQ","data":[{"name":"stdout","output_type":"stream","text":"Quantity is DBZH\n8-bit unsigned byte data? True\nLinear scaling coefficients from 0-255 to dBZ: gain=0.5, offset=-32.0\nUnradiated areas = 255.0, radiated areas with no echo = 0.0\nNumPy array's dimensions = (360, 831) and type = uint8\n"}],"key":"SQx4T1SDBJ"}],"key":"JcDZNN2NTT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"A primitive visualizer for plotting B-scans","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oDZmcQLMZM"}],"identifier":"a-primitive-visualizer-for-plotting-b-scans","label":"A primitive visualizer for plotting B-scans","html_id":"a-primitive-visualizer-for-plotting-b-scans","implicit":true,"key":"AbDe6NgTuQ"}],"key":"EDMAaBPFji"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Convenience functionality. First convert a palette from GoogleMapsPlugin for use with matplotlib\nimport matplotlib\nfrom GmapColorMap import dbzh as pal\ncolorlist = []\nfor i in range(0, len(pal), 3):\n    colorlist.append([pal[i]/255.0, pal[i+1]/255.0, pal[i+2]/255.0])\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\ndef plot(data):\n    fig = plt.figure(figsize=(16,12))\n    plt.title(\"B-scan\")\n    plt.imshow(data, cmap=matplotlib.colors.ListedColormap(colorlist), clim=(0,255))\n    plt.colorbar(shrink=float(nrays)/nbins)","key":"DWYHQOKtcD"},{"type":"output","id":"ptDTS9pQmBC3o5UGwAaAc","data":[],"key":"QlhO71V7Af"}],"key":"b9jqjQBMhg"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(dbzh_data)","key":"CjS7yzDQRx"},{"type":"output","id":"WzSXmVBAH3vW0dIRHBdfs","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"0c62ee8ef274ad079107fd76a17a49bb","path":"/erad2024/_preview/65/build/0c62ee8ef274ad079107fd76a17a49bb.png"},"text/plain":{"content":"<Figure size 1600x1200 with 2 Axes>","content_type":"text/plain"}}}],"key":"QNe6Er8ZSf"}],"key":"omSjvUHzVp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Management of optional metadata","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZZJRrsDhKr"}],"identifier":"management-of-optional-metadata","label":"Management of optional metadata","html_id":"management-of-optional-metadata","implicit":true,"key":"j8w86rPooR"}],"key":"RKlJT6uXDi"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"While manadatory metadata are represented as object attributes in Python, optional metadata are not!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AZSiFPI8KP"}],"identifier":"while-manadatory-metadata-are-represented-as-object-attributes-in-python-optional-metadata-are-not","label":"While manadatory metadata are represented as object attributes in Python, optional metadata are not!","html_id":"while-manadatory-metadata-are-represented-as-object-attributes-in-python-optional-metadata-are-not","implicit":true,"key":"d9iwPdgtbP"}],"key":"MBGbZZSQPk"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"print(\"Polar volume has %i optional attributes\" % len(pvol.getAttributeNames()))\nprint(\"Polar scan has %i optional attributes\" % len(scan.getAttributeNames()))\nprint(\"Quantity %s has %i optional attributes\" % (dbzh.quantity, len(dbzh.getAttributeNames())))\n\nprint(\"Mandatory attribute: beamwidth is %2.1f°\" % (pvol.beamwidth*rd))\nprint(\"Optional attributes: Radar is a %s running %s\" % (pvol.getAttribute(\"how/system\"), pvol.getAttribute(\"how/software\")))","key":"tQMuUEWFJj"},{"type":"output","id":"jVIouds4uCJbVomZguHnK","data":[{"name":"stdout","output_type":"stream","text":"Polar volume has 14 optional attributes\nPolar scan has 36 optional attributes\nQuantity DBZH has 3 optional attributes\nMandatory attribute: beamwidth is 1.0°\nOptional attributes: Radar is a VAISWRM200 running IRIS\n"}],"key":"TtZHs3NRU2"}],"key":"YFndKhUNuk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add a bogus attribute","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rJOgjcpEaz"}],"identifier":"add-a-bogus-attribute","label":"Add a bogus attribute","html_id":"add-a-bogus-attribute","implicit":true,"key":"uroZ1OtE7M"}],"key":"UNn1KOfP3z"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh.foo = \"bar\"","key":"b9LrPpzn21"},{"type":"output","id":"WoElKpVc6EXELDVojth9w","data":[{"ename":"AttributeError","evalue":"foo","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)\nCell \u001b[0;32mIn[12], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mdbzh\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfoo\u001b[49m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mbar\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\n\u001b[0;31mAttributeError\u001b[0m: foo"}],"key":"oQZRUqnBVN"}],"key":"OIPL7hYGKP"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh.addAttribute(\"how/foo\", \"bar\")\nprint(\"Quantity %s now has %i optional attributes\" % (dbzh.quantity, len(dbzh.getAttributeNames())))","key":"zjXXjynCY6"},{"type":"output","id":"I9l4gUCTNqzkIu69WUxjv","data":[{"name":"stdout","output_type":"stream","text":"Quantity DBZH now has 4 optional attributes\n"}],"key":"woKHlFRIUF"}],"key":"VnCwjaBXYz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create an empty parameter and populate it","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T5fwUCZRn6"}],"identifier":"create-an-empty-parameter-and-populate-it","label":"Create an empty parameter and populate it","html_id":"create-an-empty-parameter-and-populate-it","implicit":true,"key":"f0VTuN1KuJ"}],"key":"sD08nybZKV"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import _polarscanparam\nparam = _polarscanparam.new()\nparam.quantity = \"DBZH\"\nparam.nodata, param.undetect = 255.0, 0.0\nparam.gain, param.offset = 0.4, -30.0\n\nimport numpy\ndata = numpy.zeros((420,500), numpy.uint8)\nparam.setData(data)","key":"iwroD9857d"},{"type":"output","id":"ay9e7PuGMxSZiOVr1srdU","data":[],"key":"NayjEZP4xG"}],"key":"Obl1nACndf"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create an empty scan and add the parameter to it","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ApVP1UG0eP"}],"identifier":"create-an-empty-scan-and-add-the-parameter-to-it","label":"Create an empty scan and add the parameter to it","html_id":"create-an-empty-scan-and-add-the-parameter-to-it","implicit":true,"key":"QrJNc6RFTa"}],"key":"VWNaj1NRO7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import _polarscan\nfrom Proj import dr\nnewscan = _polarscan.new()\nnewscan.elangle = 25.0*dr\nnewscan.addAttribute(\"how/simulated\", \"True\")\n\nnewscan.addParameter(param)\nprint(\"%i rays per sweep\" % newscan.nrays)\nprint(\"%i bins per ray\" % newscan.nbins)","key":"HyAVEX3mvR"},{"type":"output","id":"zHdg_EzBrOFWSL74KXPUj","data":[{"name":"stdout","output_type":"stream","text":"420 rays per sweep\n500 bins per ray\n"}],"key":"fzosOcyuBv"}],"key":"dmcKFjcBiP"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"See how the parameter’s dimensions were passed along to the scan, so they don’t have to be set explicitly. Nevertheless, plenty of metadata must be handled explicitly or ODIM_H5 files risk being incomplete.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I6FjPXZCHN"}],"identifier":"see-how-the-parameters-dimensions-were-passed-along-to-the-scan-so-they-dont-have-to-be-set-explicitly-nevertheless-plenty-of-metadata-must-be-handled-explicitly-or-odim-h5-files-risk-being-incomplete","label":"See how the parameter’s dimensions were passed along to the scan, so they don’t have to be set explicitly. Nevertheless, plenty of metadata must be handled explicitly or ODIM_H5 files risk being incomplete.","html_id":"see-how-the-parameters-dimensions-were-passed-along-to-the-scan-so-they-dont-have-to-be-set-explicitly-nevertheless-plenty-of-metadata-must-be-handled-explicitly-or-odim-h5-files-risk-being-incomplete","implicit":true,"key":"h2tL5SMg6f"}],"key":"Rk3Io4fFZ5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"newscan.a1gate = 0\nnewscan.beamwidth = 1.0*dr\nnewscan.rscale = 500.0\nnewscan.rstart = 0.0  # Distance in meters to the start of the first range bin, unknown=0.0\nnewscan.startdate = \"20140831\"\nnewscan.starttime = \"145005\"\nnewscan.enddate = \"20140831\"\nnewscan.endtime = \"145020\"\n\n# Top-level attributes\nnewscan.date = \"20140831\"\nnewscan.time = \"145000\"\nnewscan.source = \"WMO:26232,RAD:EE41,PLC:Sürgavere,NOD:eesur\"\nnewscan.longitude = 25.519*dr\nnewscan.latitude = 58.482*dr\nnewscan.height = 157.0","key":"ybA2GXZPPS"},{"type":"output","id":"IlKpBG5OoZunEjMdi3AoV","data":[],"key":"Oq052DsUCG"}],"key":"cm0c6GN9d8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now create a new I/O container and write the scan to ODIM_H5 file.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"agF1DBW5Aa"}],"identifier":"now-create-a-new-i-o-container-and-write-the-scan-to-odim-h5-file","label":"Now create a new I/O container and write the scan to ODIM_H5 file.","html_id":"now-create-a-new-i-o-container-and-write-the-scan-to-odim-h5-file","implicit":true,"key":"qj1kL9urue"}],"key":"dTJXygNkCu"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = newscan\ncontainer.save(\"data/myscan.h5\")\n\nimport os\nprint(\"ODIM_H5 file is %i bytes large\" % os.path.getsize(\"data/myscan.h5\"))","key":"QTJq0aftdE"},{"type":"output","id":"8Xfe9v1BUhL5P7LWIqUte","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 4721 bytes large\n"}],"key":"qTI6imeMgz"}],"key":"ynp0lMA72x"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Remove compression. It makes file I/O faster. You can also tune HDF5 file-creation properties through the I/O container object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K8MICNePyq"}],"identifier":"remove-compression-it-makes-file-i-o-faster-you-can-also-tune-hdf5-file-creation-properties-through-the-i-o-container-object","label":"Remove compression. It makes file I/O faster. You can also tune HDF5 file-creation properties through the I/O container object.","html_id":"remove-compression-it-makes-file-i-o-faster-you-can-also-tune-hdf5-file-creation-properties-through-the-i-o-container-object","implicit":true,"key":"XCENJuAbhl"}],"key":"HGfywMhvLr"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"container.compression_level = 0  # ZLIB compression levels 0-9\ncontainer.save(\"data/myscan.h5\")\nprint(\"ODIM_H5 file is now %i bytes large\" % os.path.getsize(\"data/myscan.h5\"))","key":"kEou0tkpB1"},{"type":"output","id":"Ygw-LBo1Ot8t7cIR-Im_h","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is now 214320 bytes large\n"}],"key":"nntXBWPM5o"}],"key":"x4euHXaeXm"}],"key":"U6okDLx2ID"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Py-ART Basics with Xradar","url":"/pyart-basics","group":"Py-ART and wradlib"},"next":{"title":"Quality Control","url":"/baltrad-qc","group":"BALTRAD"}}},"domain":"http://localhost:3000"}