{"kind":"Notebook","sha256":"94f2375813c4a09070667eccc11968620ca0e900ae5585f4db6ffc10f373d8b4","slug":"baltrad-drqc","location":"/notebooks/baltrad/baltrad_short_course/BALTRAD_DRQC.ipynb","dependencies":[],"frontmatter":{"title":"In this notebook, we will use the depolarization ratio to quality control a volume of data from the new radar at Radisson, Saskatchewan","content_includes_title":false,"kernelspec":{"name":"conda-env-erad2024-py","language":"python","display_name":"Python [conda env:erad2024]"},"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"BALTRAD_DRQC.ipynb","url":"/erad2024/_preview/65/build/BALTRAD_DRQC-3cf78536e9417c569b71aa6b69dbc763.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will also visualize the data using some openly-available colour tables.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"DTfiwOMNO9"}],"identifier":"we-will-also-visualize-the-data-using-some-openly-available-colour-tables","label":"We will also visualize the data using some openly-available colour tables.","html_id":"we-will-also-visualize-the-data-using-some-openly-available-colour-tables","implicit":true,"key":"W54Sc64bbO"},{"type":"heading","depth":2,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook was originally prepared using material subsequently published in ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cbTv1f33oo"},{"type":"cite","url":"https://doi.org/10.1002/met.1929","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Michelson ","key":"rAgJBc3cNg"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"fA05HO8Ttk"}],"key":"QNhWLLRkIv"},{"type":"text","value":" (2020)","key":"SYBBZ2NuQB"}],"kind":"narrative","label":"Michelson_2020","identifier":"https://doi.org/10.1002/met.1929","enumerator":"1","key":"sk1qyFRleX"}],"identifier":"this-notebook-was-originally-prepared-using-material-subsequently-published-in-https-doi-org-10-1002-met-1929","label":"This notebook was originally prepared using material subsequently published in https://doi.org/10.1002/met.1929","html_id":"this-notebook-was-originally-prepared-using-material-subsequently-published-in-https-doi-org-10-1002-met-1929","implicit":true,"key":"P4cL15688k"}],"key":"eXqiiemgtK"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport _raveio\nimport ropo_realtime, ec_drqc\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport GmapColorMap","key":"Bh6ocTGnJ3"},{"type":"output","id":"vbRoSthFlvkKF-uRIg0eA","data":[],"key":"NAAeCSKto7"}],"key":"ItFfFlJkU9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Block of look-ups for display","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dFWP1lEvcO"}],"identifier":"block-of-look-ups-for-display","label":"Block of look-ups for display","html_id":"block-of-look-ups-for-display","implicit":true,"key":"VfB1g2xFGC"}],"key":"J6CWob1cTy"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"PALETTE = {} # To be populated\n\nUNDETECT = {\"TH\":GmapColorMap.PUREWHITE,\n            \"DBZH\":GmapColorMap.PUREWHITE,\n            \"DR\":GmapColorMap.PUREWHITE,\n            \"VRADH\":GmapColorMap.GREY5,\n            \"RHOHV\":GmapColorMap.PUREWHITE,\n            \"ZDR\":GmapColorMap.PUREWHITE}\n\nNODATA = {\"TH\":GmapColorMap.WEBSAFEGREY,\n          \"DBZH\":GmapColorMap.WEBSAFEGREY,\n          \"DR\":GmapColorMap.WEBSAFEGREY,\n          \"VRADH\":GmapColorMap.GREY8,\n          \"RHOHV\":GmapColorMap.WEBSAFEGREY,\n          \"ZDR\":GmapColorMap.WEBSAFEGREY}\n\nLEGEND = {\"TH\":'Radar reflectivity factor (dBZ)',\n          \"DBZH\":'Radar reflectivity factor (dBZ)',\n          \"DR\":'Depolarization ratio (dB)',\n          \"VRADH\":'Radial wind velocity away from radar (m/s)',\n          \"RHOHV\":'Cross-polar correlation coefficient',\n          \"ZDR\":\"Differential reflectivity (dB)\"}\n\nTICKS = {\"TH\":range(-30,80,10),\n         \"DBZH\":range(-30,80,10),\n         \"ZDR\":range(-8,9,2),\n         \"RHOHV\":np.arange(0,11,1)/10.,\n         \"VRADH\":range(-48,56,8),\n         \"DR\":range(-36,3,3)}","key":"XRCg6kBFuG"},{"type":"output","id":"u8gJqzub1dmixCKTgtYpX","data":[],"key":"BwquTeBMj1"}],"key":"c75EFTfDoo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Colormap loader and loads","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fm1ePBAG5f"}],"identifier":"colormap-loader-and-loads","label":"Colormap loader and loads","html_id":"colormap-loader-and-loads","implicit":true,"key":"n66sSv6u4f"}],"key":"SbSC0UCL7s"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def loadPal(fstr, reverse=True):\n    fd = open(fstr)\n    LINES = fd.readlines()\n    fd.close()\n    pal = []\n    for line in LINES:\n        s = line.split()\n        if reverse: s.reverse()\n        for val in s:\n            pal.append(int(float(val)*255))\n    if reverse: pal.reverse()\n    return pal\n\n# Colour maps by Fabio Crameri, http://www.fabiocrameri.ch/colourmaps.php, a couple of them modified\n# Todo: maybe use new cmweather colormaps\nPALETTE[\"DBZH\"] = loadPal(\"data/hawaii.txt\")\nPALETTE[\"DR\"] = loadPal(\"data/moleron.txt\", False)  # Modified oleron\nPALETTE[\"ZDR\"] = loadPal(\"data/oleron.txt\", False)\nPALETTE[\"RHOHV\"] = loadPal(\"data/mroma.txt\")        # Modified roma\nPALETTE[\"VRADH\"] = loadPal(\"data/vik.txt\", False)","key":"BgOkXr1AJw"},{"type":"output","id":"l63NdYjporscK4gdgg5Gy","data":[],"key":"T6X6k9cOMU"}],"key":"NKj8SqimwY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Set up the display","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YSVYmwgNjV"}],"identifier":"set-up-the-display","label":"Set up the display","html_id":"set-up-the-display","implicit":true,"key":"bGjjp1tDRT"}],"key":"d3wOv0VDbQ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def plot(obj):\n    fig = plt.figure()\n    default_size = fig.get_size_inches()\n    fig.set_size_inches((default_size[0]*2, default_size[1]*2))\n\n    paramname = obj.getParameterNames()[0]\n    pal = PALETTE[paramname]\n    pal[0], pal[1], pal[2] = UNDETECT[paramname]     # Special value - areas radiated but void of echo\n    pal[767], pal[766], pal[765] = NODATA[paramname] # Special value - areas unradiated\n    if paramname == \"VRADH\":\n        pal[379], pal[380], pal[381] = GmapColorMap.PUREWHITE  # VRADH isodop\n        pal[382], pal[383], pal[384] = GmapColorMap.PUREWHITE  # VRADH isodop\n        pal[385], pal[386], pal[387] = GmapColorMap.PUREWHITE  # VRADH isodop\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i]/255.0, pal[i+1]/255.0, pal[i+2]/255.0])\n\n    param = obj.getParameter(paramname)\n    data = param.getData()\n    data = data*param.gain + param.offset\n        \n    im = plt.imshow(data,cmap=matplotlib.colors.ListedColormap(colorlist))\n    cax = plt.gca()\n    cax.axes.get_xaxis().set_visible(False)\n    cax.axes.get_yaxis().set_visible(False)\n\n    cb = plt.colorbar(ticks=TICKS[paramname])\n    cb.set_label(LEGEND[paramname])\n \n    plt.show()","key":"Hs0ze49fvJ"},{"type":"output","id":"cpwSToAtce3LukDiejvsj","data":[],"key":"dSGu5jEfRe"}],"key":"zDnz6hTfiJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Do the science","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I6qWx6aerY"}],"identifier":"do-the-science","label":"Do the science","html_id":"do-the-science","implicit":true,"key":"wAdLSJtjRi"},{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Read the polar volume, QC the reflectivity using legacy ROPO, and then save the QC:ed result","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jJGo5WeVaJ"}],"identifier":"read-the-polar-volume-qc-the-reflectivity-using-legacy-ropo-and-then-save-the-qc-ed-result","label":"Read the polar volume, QC the reflectivity using legacy ROPO, and then save the QC:ed result","html_id":"read-the-polar-volume-qc-the-reflectivity-using-legacy-ropo-and-then-save-the-qc-ed-result","implicit":true,"key":"dDc9IKb1Kd"}],"key":"SchMqVcbsF"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open('data/2019051509_00_ODIMH5_PVOL6S_VOL_casra.16.h5')\nrio.object = ropo_realtime.generate(rio.object)\nrio.save('data/2019051509_00_ODIMH5_PVOL6S_VOL_casra.ropo.h5')","key":"hvVQwk10X3"},{"type":"output","id":"gQMwU_Bff2CHnYBENgA11","data":[],"key":"BuIIX5hSG8"}],"key":"SQRCr8zDpd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Re-read the polar volume, QC it using depolarization ratio, and then save the QC:ed result","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XBGwaIWd0d"}],"identifier":"re-read-the-polar-volume-qc-it-using-depolarization-ratio-and-then-save-the-qc-ed-result","label":"Re-read the polar volume, QC it using depolarization ratio, and then save the QC:ed result","html_id":"re-read-the-polar-volume-qc-it-using-depolarization-ratio-and-then-save-the-qc-ed-result","implicit":true,"key":"jJRcc8BCe6"}],"key":"QK1FEgDxx5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open('data/2019051509_00_ODIMH5_PVOL6S_VOL_casra.16.h5')\npvol = rio.object\nec_drqc.drQC(pvol)\nrio.object = pvol\nrio.save('data/2019051509_00_ODIMH5_PVOL6S_VOL_casra.drqc.h5')","key":"ni6tZMnqm1"},{"type":"output","id":"ra4-O9ALfUgSIOOZqOjEb","data":[],"key":"hFjJrzCsmC"}],"key":"nBvEClEWdj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"NOW LEAVE THIS NOTEBOOK AND GO TO A TERMINAL to generate CAPPIs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v7f2yTOsHE"}],"identifier":"now-leave-this-notebook-and-go-to-a-terminal-to-generate-cappis","label":"NOW LEAVE THIS NOTEBOOK AND GO TO A TERMINAL to generate CAPPIs","html_id":"now-leave-this-notebook-and-go-to-a-terminal-to-generate-cappis","implicit":true,"key":"kb18vleMB0"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"or just do it inline","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hNn8RMorvi"}],"key":"wVYPu6pHuc"}],"key":"mDiyWKCCFE"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create, read and display CAPPIs, starting with Doppler-corrected reflectivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EGnGSbldgS"}],"identifier":"create-read-and-display-cappis-starting-with-doppler-corrected-reflectivity","label":"Create, read and display CAPPIs, starting with Doppler-corrected reflectivity","html_id":"create-read-and-display-cappis-starting-with-doppler-corrected-reflectivity","implicit":true,"key":"vDdQlapmMD"}],"key":"ORi1qp022A"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"!radarcomp -i data/2019051509_00_ODIMH5_PVOL6S_VOL_casra.drqc.h5 -o data/cappi_DBZH.h5 -q DBZH","key":"XrqU9CXrqn"},{"type":"output","id":"K3EdJmkEeFx7wm32aeAf-","data":[],"key":"lcUk3j5ZAG"}],"key":"uWwwoqLMX3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cappi = _raveio.open('data/cappi_DBZH.h5').object.getImage(0)\nplot(cappi)","key":"uyidgdI8rs"},{"type":"output","id":"NWAGbk2RfSq4ZfMClEMBW","data":[],"key":"UXbcWuUbGX"}],"key":"ZIQ3WJQWj8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Differential reflectivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TJSJ1U91W1"}],"identifier":"differential-reflectivity","label":"Differential reflectivity","html_id":"differential-reflectivity","implicit":true,"key":"B0DqUYe4uu"}],"key":"xWPRUtLNW9"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cappi = _raveio.open('data/cappi_ZDR.h5').object\ndisplay(cappi)","key":"xL5kmVBSGc"},{"type":"output","id":"P3Tlj6AK8m_76wJKBH24L","data":[],"key":"V8WgXu0FR8"}],"key":"z3hPFeeZ3s"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cross-polar correlation coefficient","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IDPmblO6Mh"}],"identifier":"cross-polar-correlation-coefficient","label":"Cross-polar correlation coefficient","html_id":"cross-polar-correlation-coefficient","implicit":true,"key":"Xv094aw0MS"}],"key":"CcFmhPytQs"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cappi = _raveio.open('data/cappi_RHOHV.h5').object\ndisplay(cappi)","key":"rHp5iFSA0i"},{"type":"output","id":"vv5pxqZ2VfPRIFsewimvt","data":[],"key":"fU7RptbuSw"}],"key":"cKZfUwScGx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Radial wind velocity, lowest PPI","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NuPA38DapX"}],"identifier":"radial-wind-velocity-lowest-ppi","label":"Radial wind velocity, lowest PPI","html_id":"radial-wind-velocity-lowest-ppi","implicit":true,"key":"hUfeNHkYqI"}],"key":"R01Q1D5VPw"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"ppi = _raveio.open('data/ppi_VRADH.h5').object\ndisplay(ppi)","key":"GlwmjmVhZ0"},{"type":"output","id":"8GP6erZeUoMpCeAUR7tBR","data":[],"key":"LUTaUioDJs"}],"key":"BI8TgUztBp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Depolarization ratio","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aNhlSU0yuR"}],"identifier":"depolarization-ratio","label":"Depolarization ratio","html_id":"depolarization-ratio","implicit":true,"key":"vtQU5rBaPk"}],"key":"k58ySEPpXA"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cappi = _raveio.open('data/cappi_DR.h5').object\ndisplay(cappi)","key":"hnWHASspZN"},{"type":"output","id":"S0mvY2D8-Qaty0oll0t_I","data":[],"key":"XzyJMyEHoj"}],"key":"szMlrw6hIe"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"ROPO:ed reflectivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kEp9uPC6eA"}],"identifier":"ropo-ed-reflectivity","label":"ROPO:ed reflectivity","html_id":"ropo-ed-reflectivity","implicit":true,"key":"hU91SmAibP"}],"key":"tCedbWGGuk"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cappi = _raveio.open('data/cappi_DBZH_ropo.h5').object\ndisplay(cappi)","key":"LXLTJ72sev"},{"type":"output","id":"8bFYYzxm15nk2axDg2aOu","data":[],"key":"uEyBCKm38m"}],"key":"VVjx3G4bQ6"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"DRQC:ed reflectivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hO0xLcVptH"}],"identifier":"drqc-ed-reflectivity","label":"DRQC:ed reflectivity","html_id":"drqc-ed-reflectivity","implicit":true,"key":"HmuJfzhoi9"}],"key":"GgelrxF4Hh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"cappi = _raveio.open('data/cappi_DBZH_drqc.h5').object\ndisplay(cappi)","key":"ZMJbPIgJv2"},{"type":"output","id":"yxfEXO0r1DYEJ33DVQ9bo","data":[],"key":"UBiVzduFyN"}],"key":"OT5Be5loHH"}],"key":"lRXwTlJXFy"},"references":{"cite":{"order":["Michelson_2020"],"data":{"Michelson_2020":{"label":"Michelson_2020","enumerator":"1","doi":"10.1002/met.1929","html":"Michelson, D., Hansen, B., Jacques, D., Lemay, F., & Rodriguez, P. (2020). Monitoring the impacts of weather radar data quality control for quantitative application at the continental scale. <i>Meteorological Applications</i>, <i>27</i>(4). <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.1002/met.1929\">10.1002/met.1929</a>","url":"https://doi.org/10.1002/met.1929"}}}},"footer":{"navigation":{"prev":{"title":"Compositing with BALTRAD","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"BALTRAD I/O model - making sense out of data and metadata","url":"/baltrad-io","group":"BALTRAD"}}},"domain":"http://localhost:3000"}