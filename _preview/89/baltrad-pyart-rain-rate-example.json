{"kind":"Notebook","sha256":"29dfb3f7e4e56c3e2d5dc0533b518b3ef076ae208a772153ca6fcd1584410db5","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/89/build/0_baltrad_pyart_rain-431b4417d2d610f5c5ae882c182ab0d6.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KtEtwvSs7q"}],"key":"Svavxfsahd"}],"key":"IYhiy9Wg4q"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZPaPffe3Dd"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"z4FXQb1VbI"}],"key":"nq63Nuibxb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:40.624431Z","iopub.status.busy":"2024-08-23T12:02:40.623992Z","iopub.status.idle":"2024-08-23T12:02:41.552787Z","shell.execute_reply":"2024-08-23T12:02:41.552137Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"U1PVOYEbBi"},{"type":"output","id":"HNjnY1kfBhV3qE_tlrPiK","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"cbie1phutv"}],"key":"Jx5VTE2eD6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:41.555300Z","iopub.status.busy":"2024-08-23T12:02:41.555124Z","iopub.status.idle":"2024-08-23T12:02:41.919809Z","shell.execute_reply":"2024-08-23T12:02:41.919281Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"syzGN4Dbxf"},{"type":"output","id":"oMfrDtjqruLaVb0ObqOFb","data":[],"key":"gPa72dDgtp"}],"key":"BhdBhRi7wd"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oeSCQe4xRj"}],"key":"MvHG2NdTpo"}],"key":"rWQ6ifWBMl"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:41.922485Z","iopub.status.busy":"2024-08-23T12:02:41.922016Z","iopub.status.idle":"2024-08-23T12:02:42.966294Z","shell.execute_reply":"2024-08-23T12:02:42.965765Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"Nx3Drz9EGX"},{"type":"output","id":"eMnk5RHemNmIYHCdTvShA","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"lRiHZnjvJ3"}],"key":"MtbBTIFcD8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tmrHh5eBqR"}],"key":"XQZ4Y25rw0"}],"key":"LhklILHJq3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a5S2AvQgiZ"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"Enqy07p6jS"}],"key":"A0Ab0rHegg"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:42.969135Z","iopub.status.busy":"2024-08-23T12:02:42.968672Z","iopub.status.idle":"2024-08-23T12:02:43.005171Z","shell.execute_reply":"2024-08-23T12:02:43.004427Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"eP22uz6Qiu"},{"type":"output","id":"Rczo9t2ZdEeehMfxNgMBC","data":[],"key":"NveE8J10ed"}],"key":"FmDpcCsXbu"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mKxUn4iPer"}],"key":"i9jFqESVU0"}],"key":"zhe8RISDtG"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:43.008368Z","iopub.status.busy":"2024-08-23T12:02:43.008054Z","iopub.status.idle":"2024-08-23T12:02:43.050841Z","shell.execute_reply":"2024-08-23T12:02:43.050236Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"SHdkFMWti5"},{"type":"output","id":"csvp7cEi68Ub_yd5fp3NC","data":[],"key":"THrehaxfzW"}],"key":"OljZ3Eoh0G"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P9PWiFBTIJ"}],"key":"IDlVQfOYjB"}],"key":"jvSHkQF5RW"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:43.053401Z","iopub.status.busy":"2024-08-23T12:02:43.052960Z","iopub.status.idle":"2024-08-23T12:02:43.055940Z","shell.execute_reply":"2024-08-23T12:02:43.055416Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"wf9Ope4ss0"},{"type":"output","id":"P68NqQMSldNhh2APM85cA","data":[],"key":"I5Hy92rNz2"}],"key":"azh4eTxWTX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:43.058720Z","iopub.status.busy":"2024-08-23T12:02:43.058351Z","iopub.status.idle":"2024-08-23T12:02:43.523610Z","shell.execute_reply":"2024-08-23T12:02:43.522908Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"TAHvLQs3zz"},{"type":"output","id":"SScGzYgN4rtnqDxXcH4cg","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/_preview/89/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"TQbWjIp7Kx"}],"key":"S5crKemyMR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:43.526249Z","iopub.status.busy":"2024-08-23T12:02:43.525776Z","iopub.status.idle":"2024-08-23T12:02:44.001549Z","shell.execute_reply":"2024-08-23T12:02:44.001033Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"U6nqZJ2pJu"},{"type":"output","id":"qchYO2j5uEnAsE3ao9IT4","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/_preview/89/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"GoJX3RJWa3"}],"key":"FnFQjp9P0r"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:44.003650Z","iopub.status.busy":"2024-08-23T12:02:44.003487Z","iopub.status.idle":"2024-08-23T12:02:44.440606Z","shell.execute_reply":"2024-08-23T12:02:44.439919Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"SplcNwdq1S"},{"type":"output","id":"wGKJO4ajjoFdEvTeudRI9","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/_preview/89/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"DPaxYKtJvf"}],"key":"tTDyInEmIU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:44.442871Z","iopub.status.busy":"2024-08-23T12:02:44.442660Z","iopub.status.idle":"2024-08-23T12:02:44.898238Z","shell.execute_reply":"2024-08-23T12:02:44.897644Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"GRCEJ7iRFL"},{"type":"output","id":"GkPKvaB3Tkcq0m9lnsnp-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/_preview/89/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"B1xN7UMeAv"}],"key":"ahfPGx661P"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MK5vRZxnAG"}],"key":"fqodxAvNuK"}],"key":"LH74iG5PCn"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:44.901287Z","iopub.status.busy":"2024-08-23T12:02:44.901086Z","iopub.status.idle":"2024-08-23T12:02:44.905638Z","shell.execute_reply":"2024-08-23T12:02:44.904991Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"edRKeIo27j"},{"type":"output","id":"5DXJe_k95sRhCmHOBlXqE","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"aMsnNrviL2"}],"key":"wZ45QF1xoV"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:44.907739Z","iopub.status.busy":"2024-08-23T12:02:44.907540Z","iopub.status.idle":"2024-08-23T12:02:45.086304Z","shell.execute_reply":"2024-08-23T12:02:45.085726Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"zkgwptKqlE"},{"type":"output","id":"zIN3YMpbuXaGcIM0zKNZ4","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"hAuUcZNwaU"}],"key":"oru6F5PL9k"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:45.088390Z","iopub.status.busy":"2024-08-23T12:02:45.088199Z","iopub.status.idle":"2024-08-23T12:02:45.092378Z","shell.execute_reply":"2024-08-23T12:02:45.091721Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"LsizgWgiQd"},{"type":"output","id":"RDBOSRILyw6MNVI_wFrOX","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"bFBdVc5iva"}],"key":"oCB1GGqADF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:45.094875Z","iopub.status.busy":"2024-08-23T12:02:45.094470Z","iopub.status.idle":"2024-08-23T12:02:45.097411Z","shell.execute_reply":"2024-08-23T12:02:45.096947Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"gWpsXQaMFL"},{"type":"output","id":"o1UDnSNQ586Kys6oL87f-","data":[],"key":"oom2JMvTeY"}],"key":"oIzBcOgylm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fbOzPItY6Q"}],"key":"HHTFSHa9FF"}],"key":"j7xGDTWYXl"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:45.099277Z","iopub.status.busy":"2024-08-23T12:02:45.099110Z","iopub.status.idle":"2024-08-23T12:02:45.626273Z","shell.execute_reply":"2024-08-23T12:02:45.625459Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"pJ7nhftCYJ"},{"type":"output","id":"52PGl_CfEsdN377QLaz43","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/_preview/89/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"rNlyh5owgj"}],"key":"q3Bjhqbm3P"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:45.629061Z","iopub.status.busy":"2024-08-23T12:02:45.628813Z","iopub.status.idle":"2024-08-23T12:02:46.098069Z","shell.execute_reply":"2024-08-23T12:02:46.097495Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"RM1mcExNGA"},{"type":"output","id":"f8o0yhgKW2vj79RuJTrnl","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/_preview/89/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"CCVSzr75Ik"}],"key":"WdD3P7mC1d"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"HqMOYMiwqj"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"N88GavduH4"}],"key":"T7fEa9kC8g"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"smFg2Xedmy"}],"key":"qK5jmnqW0m"}],"key":"isLELHTIGD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:46.100252Z","iopub.status.busy":"2024-08-23T12:02:46.099878Z","iopub.status.idle":"2024-08-23T12:02:46.116015Z","shell.execute_reply":"2024-08-23T12:02:46.115468Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"OilpiNNV5j"},{"type":"output","id":"UTHEnn9TWQqca63tQvcto","data":[],"key":"t3lpY29GCL"}],"key":"KHq9KQgrND"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:46.118414Z","iopub.status.busy":"2024-08-23T12:02:46.118043Z","iopub.status.idle":"2024-08-23T12:02:46.120858Z","shell.execute_reply":"2024-08-23T12:02:46.120382Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"ZvurAXCeAL"},{"type":"output","id":"d9gnePUcypbJirScYa-Vz","data":[],"key":"oGY9wCgRTp"}],"key":"SnedvYZM4G"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tBzptVg9Jc"}],"key":"cUYJBmqJdH"}],"key":"gVJKbnhkZH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:46.122656Z","iopub.status.busy":"2024-08-23T12:02:46.122491Z","iopub.status.idle":"2024-08-23T12:02:46.548180Z","shell.execute_reply":"2024-08-23T12:02:46.547419Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"m9fVzsKX21"},{"type":"output","id":"k3JjXXQhylPTgfYJXy7aM","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/_preview/89/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"qU0vJBccWD"}],"key":"RLJanFB7Rm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ztUQmC0rnR"}],"key":"Yn1IgJHava"}],"key":"JMvN0WHfLY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:46.551558Z","iopub.status.busy":"2024-08-23T12:02:46.551091Z","iopub.status.idle":"2024-08-23T12:02:46.565025Z","shell.execute_reply":"2024-08-23T12:02:46.564427Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"cx7irl6ZN9"},{"type":"output","id":"aCI7b1J7uf-e5x_8XZTKE","data":[],"key":"de7rHlYbAW"}],"key":"JIrTlkn7no"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-08-23T12:02:46.567852Z","iopub.status.busy":"2024-08-23T12:02:46.567639Z","iopub.status.idle":"2024-08-23T12:02:47.363281Z","shell.execute_reply":"2024-08-23T12:02:47.362789Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"vkdUg46fMa"},{"type":"output","id":"bGfvIX6_9ZxqRgKI_qtno","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"T2PwpDAXvO"}],"key":"AqHK2dWMbL"}],"key":"mvsIMsX7oP"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}