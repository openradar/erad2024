{"kind":"Notebook","sha256":"98f0b97959f767af900f4276fb1ccc7751dccb241cd13f514983ebeec160ce82","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/100/build/0_baltrad_pyart_rain-e8f65e8cb5993bddf2d5f681d2d5d4c8.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oe4LXzVaGl"}],"key":"EIgimFbPaN"}],"key":"mbJYlOYv2Q"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZcjulBk2dS"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"Ux0lFJovO5"}],"key":"j6JlYuVPJ5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:02.476417Z","iopub.status.busy":"2024-09-04T07:58:02.475850Z","iopub.status.idle":"2024-09-04T07:58:03.233103Z","shell.execute_reply":"2024-09-04T07:58:03.232552Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"vJTlTj1EW0"},{"type":"output","id":"TXG3XVyLX-gIPp3w5-JnE","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"NEn2Xc8WEX"}],"key":"GP2GdBv43R"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:03.235555Z","iopub.status.busy":"2024-09-04T07:58:03.235375Z","iopub.status.idle":"2024-09-04T07:58:03.602877Z","shell.execute_reply":"2024-09-04T07:58:03.602216Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"CSmjXB488Z"},{"type":"output","id":"lSyXdgNse_Wqesa6NxCse","data":[],"key":"VDWecO6fUU"}],"key":"OR9HvOWnbo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HrE2UIFevX"}],"key":"sJ8u5e9Vdr"}],"key":"AnJ0NgNQQZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:03.605459Z","iopub.status.busy":"2024-09-04T07:58:03.605189Z","iopub.status.idle":"2024-09-04T07:58:04.847139Z","shell.execute_reply":"2024-09-04T07:58:04.846574Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"BbQbc5waBQ"},{"type":"output","id":"yBD6RYC7qACJLkQ_503vi","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"dzZ1stgG2X"}],"key":"ctDewSI9bY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YbYGwoFmv0"}],"key":"UYospjmE9u"}],"key":"cHDE6RcuKk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hyUsWePnTO"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"ZyAcsS9iKQ"}],"key":"kKCXPOVxkf"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:04.849548Z","iopub.status.busy":"2024-09-04T07:58:04.849132Z","iopub.status.idle":"2024-09-04T07:58:04.891407Z","shell.execute_reply":"2024-09-04T07:58:04.890858Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"hCnl4asmXc"},{"type":"output","id":"2w_NvDzkhsLaDtOxspWwr","data":[],"key":"noRDz5o5Ju"}],"key":"SZZmbNGgrS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qXcFoyiyPA"}],"key":"lfVoL8MCsg"}],"key":"xevNzwGLew"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:04.893731Z","iopub.status.busy":"2024-09-04T07:58:04.893268Z","iopub.status.idle":"2024-09-04T07:58:04.934334Z","shell.execute_reply":"2024-09-04T07:58:04.933714Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"sl8o2oHlpW"},{"type":"output","id":"TjMzGjpQ9Bea0uBNEnyYx","data":[],"key":"wie8tNA0Ff"}],"key":"QSTwdgMQKV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TqyEJOEDnI"}],"key":"C6zrHe2B3z"}],"key":"xHF20CnN9f"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:04.936781Z","iopub.status.busy":"2024-09-04T07:58:04.936610Z","iopub.status.idle":"2024-09-04T07:58:04.939381Z","shell.execute_reply":"2024-09-04T07:58:04.938887Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"ZqKD2wXWWW"},{"type":"output","id":"shwslyGYvXpTop-gSCTGD","data":[],"key":"MD8XpRfRhO"}],"key":"Gs1H4wi50q"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:04.941302Z","iopub.status.busy":"2024-09-04T07:58:04.940906Z","iopub.status.idle":"2024-09-04T07:58:05.412315Z","shell.execute_reply":"2024-09-04T07:58:05.411727Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"A39m8ypAqo"},{"type":"output","id":"tO76svVnFksyZwMcWTXO0","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"878dcf640f08e93e2742eebe7989483f","path":"/erad2024/_preview/100/build/878dcf640f08e93e2742eebe7989483f.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"XoC7m7awyj"}],"key":"V4BaOJoK5L"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:05.414816Z","iopub.status.busy":"2024-09-04T07:58:05.414397Z","iopub.status.idle":"2024-09-04T07:58:05.887427Z","shell.execute_reply":"2024-09-04T07:58:05.886835Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"GYDMcXwp4P"},{"type":"output","id":"P6DiPUSpXRZpyk7oyp8mT","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"0be2edba40411724fbc0ddcbd1faa0db","path":"/erad2024/_preview/100/build/0be2edba40411724fbc0ddcbd1faa0db.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"NEJKeneFFT"}],"key":"Ezw5imq5CQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:05.889752Z","iopub.status.busy":"2024-09-04T07:58:05.889564Z","iopub.status.idle":"2024-09-04T07:58:06.334608Z","shell.execute_reply":"2024-09-04T07:58:06.334022Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"QC7IeELofH"},{"type":"output","id":"PdWAo7OAL1flZQI3MXhuq","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"dc0e781259e477361627a044eeb0b05e","path":"/erad2024/_preview/100/build/dc0e781259e477361627a044eeb0b05e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"mRUrRvADut"}],"key":"TJnXdXHO3k"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:06.337329Z","iopub.status.busy":"2024-09-04T07:58:06.337122Z","iopub.status.idle":"2024-09-04T07:58:06.808911Z","shell.execute_reply":"2024-09-04T07:58:06.808329Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"pX6qn47aZy"},{"type":"output","id":"ppwxTP4AVqYyD1VY4qA-Z","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"5172e123362f767d6d30c82e7a1bab3d","path":"/erad2024/_preview/100/build/5172e123362f767d6d30c82e7a1bab3d.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"DQf71hxQTG"}],"key":"rfR7BT9Fm5"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wZZX7HXEkQ"}],"key":"U9WmD1g7rh"}],"key":"UX7QBTTpiS"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:06.812615Z","iopub.status.busy":"2024-09-04T07:58:06.812417Z","iopub.status.idle":"2024-09-04T07:58:06.816648Z","shell.execute_reply":"2024-09-04T07:58:06.816124Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"s31Q7FDtRE"},{"type":"output","id":"FKMJUdostmT-V2jLhp8RU","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"O3ZrE9yuYc"}],"key":"WKndRUFAl4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:06.818527Z","iopub.status.busy":"2024-09-04T07:58:06.818335Z","iopub.status.idle":"2024-09-04T07:58:07.001274Z","shell.execute_reply":"2024-09-04T07:58:07.000692Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"BqTUtQCKrg"},{"type":"output","id":"OK4QO6s4-HRADBKgUtOJH","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"DLgztCulK8"}],"key":"duWGisoGDz"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:07.003523Z","iopub.status.busy":"2024-09-04T07:58:07.003335Z","iopub.status.idle":"2024-09-04T07:58:07.007297Z","shell.execute_reply":"2024-09-04T07:58:07.006776Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"d19Ll7CGcs"},{"type":"output","id":"CJsx5t1frUtCVYmjlYzlM","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"uHMrYKvSK2"}],"key":"RIbuQsnyl2"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:07.009169Z","iopub.status.busy":"2024-09-04T07:58:07.009011Z","iopub.status.idle":"2024-09-04T07:58:07.011473Z","shell.execute_reply":"2024-09-04T07:58:07.011021Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"k0Nkaej9yR"},{"type":"output","id":"5yzsl85KFXJehOg51gXYg","data":[],"key":"yWowri73SW"}],"key":"r2dRZzSlXT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lhRRYyE1FV"}],"key":"WDUXLbeuhD"}],"key":"KN1jcwV84r"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:07.013440Z","iopub.status.busy":"2024-09-04T07:58:07.013093Z","iopub.status.idle":"2024-09-04T07:58:07.456564Z","shell.execute_reply":"2024-09-04T07:58:07.456009Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"lCXFPPGfdS"},{"type":"output","id":"8CemBUGgn7GYmYZv2orWC","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"63147b74fe3ac94dfbdaa9af6b21ef11","path":"/erad2024/_preview/100/build/63147b74fe3ac94dfbdaa9af6b21ef11.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"gSqmvNpzSt"}],"key":"edQch9O0yW"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:07.458670Z","iopub.status.busy":"2024-09-04T07:58:07.458485Z","iopub.status.idle":"2024-09-04T07:58:07.915666Z","shell.execute_reply":"2024-09-04T07:58:07.915132Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"Ct8TXgoLSk"},{"type":"output","id":"U0kgViQhTulqMe8nBeBBY","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4fce6ee0b7bc984a8c8af7835891389f","path":"/erad2024/_preview/100/build/4fce6ee0b7bc984a8c8af7835891389f.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"E8EJ8Y3HMt"}],"key":"KTjhynw212"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"aLBMaan1Dj"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"PjSaTP4810"}],"key":"h1SCea7iec"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"ct8IvIO07O"}],"key":"X31skIYnOl"}],"key":"pjkh5kj647"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:07.917719Z","iopub.status.busy":"2024-09-04T07:58:07.917545Z","iopub.status.idle":"2024-09-04T07:58:07.928584Z","shell.execute_reply":"2024-09-04T07:58:07.927903Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"BtJAY4x9nS"},{"type":"output","id":"P1rBpf2mhBVmA_JOpTvpT","data":[],"key":"U25JRGoFTo"}],"key":"vZ43DN84N8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:07.930935Z","iopub.status.busy":"2024-09-04T07:58:07.930751Z","iopub.status.idle":"2024-09-04T07:58:07.933583Z","shell.execute_reply":"2024-09-04T07:58:07.933116Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"HYU4IeGF9M"},{"type":"output","id":"AlszQbXD3joX_QUkuz3o6","data":[],"key":"opSXbFZJhq"}],"key":"XcP2dGYYiW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VNxvS0NofH"}],"key":"TKIgmkhHtN"}],"key":"bIz9KZ6Ebk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:07.935573Z","iopub.status.busy":"2024-09-04T07:58:07.935409Z","iopub.status.idle":"2024-09-04T07:58:08.361428Z","shell.execute_reply":"2024-09-04T07:58:08.360762Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"KmGqhgxS0K"},{"type":"output","id":"Fgv_uGb8oFkpmBOZoeFU6","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fcf4661f9324a6cda50379e4ef98121c","path":"/erad2024/_preview/100/build/fcf4661f9324a6cda50379e4ef98121c.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"DFOJEkEtPr"}],"key":"fhKpcUdce0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oXLNuQEjKy"}],"key":"kVu6IhbRL4"}],"key":"fXetmrl8UE"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:08.364308Z","iopub.status.busy":"2024-09-04T07:58:08.363886Z","iopub.status.idle":"2024-09-04T07:58:08.378451Z","shell.execute_reply":"2024-09-04T07:58:08.377842Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"NEkjxe7bwH"},{"type":"output","id":"k8AnkHogvO8fRdy9cuzpQ","data":[],"key":"UK7skDrLLC"}],"key":"GDoHWTZZGd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T07:58:08.380832Z","iopub.status.busy":"2024-09-04T07:58:08.380475Z","iopub.status.idle":"2024-09-04T07:58:09.182303Z","shell.execute_reply":"2024-09-04T07:58:09.181708Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"ok6sErTlXF"},{"type":"output","id":"DPavEoZ7JZavYAguzqsfW","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"WLDPS4vl9q"}],"key":"A6ZKi5n5CR"}],"key":"qFoLFMlkmo"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}