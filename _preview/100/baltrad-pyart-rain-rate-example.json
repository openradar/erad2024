{"kind":"Notebook","sha256":"781526f8a9012464423aa109caa5d711fd96196d2d6cd98e791a806dab997bf3","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/100/build/0_baltrad_pyart_rain-92edc2c016c12136954d1e1e9ef5144c.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IFHitzP390"}],"key":"N0PgHBxez9"}],"key":"ejtB5Pavd2"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zBbR9GPnJ2"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"PVnBYR0PkO"}],"key":"YmKEhdYdW9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:06.243457Z","iopub.status.busy":"2024-09-04T14:27:06.243120Z","iopub.status.idle":"2024-09-04T14:27:07.073753Z","shell.execute_reply":"2024-09-04T14:27:07.072963Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"XxkWaxJse9"},{"type":"output","id":"Vi5O8iodiFXgPLW4rfBmD","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"DVQ5CcXdZ5"}],"key":"YbdtwSi4sh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:07.077128Z","iopub.status.busy":"2024-09-04T14:27:07.076860Z","iopub.status.idle":"2024-09-04T14:27:07.458880Z","shell.execute_reply":"2024-09-04T14:27:07.458146Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"tta3wLD64b"},{"type":"output","id":"NnyZO4Q80RPe1V04mpR96","data":[],"key":"yekdpRFra5"}],"key":"DFrAq4JaTQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wQfRClushD"}],"key":"MN80NJFGn3"}],"key":"aKyum4MnbK"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:07.462146Z","iopub.status.busy":"2024-09-04T14:27:07.461428Z","iopub.status.idle":"2024-09-04T14:27:08.798769Z","shell.execute_reply":"2024-09-04T14:27:08.798119Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"mZETrVgrYf"},{"type":"output","id":"Z_jCwaJKecWKnxcCGE2kq","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"Ilpkwj4JTl"}],"key":"N0WUNnSfr0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BjsbBQ5xWo"}],"key":"zUrzD7Vijm"}],"key":"jLIxx6jXmV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YMnVkNGdEQ"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"LuMspvzeJd"}],"key":"jfiDB31jbU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:08.801553Z","iopub.status.busy":"2024-09-04T14:27:08.800905Z","iopub.status.idle":"2024-09-04T14:27:08.844804Z","shell.execute_reply":"2024-09-04T14:27:08.844188Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"yYzEMXGgP7"},{"type":"output","id":"3xONlcEp5zxSZWv6OIv8S","data":[],"key":"q3YlHPIEDS"}],"key":"Fkueiad9qx"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OQ6fp9QG4v"}],"key":"f2dc5WIFw9"}],"key":"VNrZXZatcx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:08.847348Z","iopub.status.busy":"2024-09-04T14:27:08.847078Z","iopub.status.idle":"2024-09-04T14:27:08.891306Z","shell.execute_reply":"2024-09-04T14:27:08.890781Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"QvAtCsDLNB"},{"type":"output","id":"7NbH17XPt9isr79ar80tE","data":[],"key":"lOfPfPBJy0"}],"key":"QMOSvSGSAA"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cytTqV6qH5"}],"key":"guT4jd8v4g"}],"key":"s03m1wrqh2"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:08.893915Z","iopub.status.busy":"2024-09-04T14:27:08.893531Z","iopub.status.idle":"2024-09-04T14:27:08.896430Z","shell.execute_reply":"2024-09-04T14:27:08.895983Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"pAwaZvrl5w"},{"type":"output","id":"bfIEedLyYHJotOUqR6bDt","data":[],"key":"ldQGok6szF"}],"key":"EEYztuJrKx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:08.898346Z","iopub.status.busy":"2024-09-04T14:27:08.897995Z","iopub.status.idle":"2024-09-04T14:27:09.385628Z","shell.execute_reply":"2024-09-04T14:27:09.385014Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"yPj81CTypY"},{"type":"output","id":"-HQHDixlVcBbKauFnotWH","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"878dcf640f08e93e2742eebe7989483f","path":"/erad2024/_preview/100/build/878dcf640f08e93e2742eebe7989483f.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"urSBYV2y7O"}],"key":"EdgR6GizKS"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:09.388182Z","iopub.status.busy":"2024-09-04T14:27:09.387942Z","iopub.status.idle":"2024-09-04T14:27:09.849267Z","shell.execute_reply":"2024-09-04T14:27:09.848705Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"jMNjk51DFM"},{"type":"output","id":"idhcFo96X6JoG176lFvK3","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"0be2edba40411724fbc0ddcbd1faa0db","path":"/erad2024/_preview/100/build/0be2edba40411724fbc0ddcbd1faa0db.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"KPqMUmwG3W"}],"key":"b8IKg65skL"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:09.853360Z","iopub.status.busy":"2024-09-04T14:27:09.852609Z","iopub.status.idle":"2024-09-04T14:27:10.324383Z","shell.execute_reply":"2024-09-04T14:27:10.323775Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"cPTGYSCl46"},{"type":"output","id":"bS9FLTIAEmse7-xXFAodD","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"dc0e781259e477361627a044eeb0b05e","path":"/erad2024/_preview/100/build/dc0e781259e477361627a044eeb0b05e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"SiyGFNiCd3"}],"key":"TL3gVPEoLc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:10.326884Z","iopub.status.busy":"2024-09-04T14:27:10.326387Z","iopub.status.idle":"2024-09-04T14:27:10.822989Z","shell.execute_reply":"2024-09-04T14:27:10.822383Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"tJQooVRGDz"},{"type":"output","id":"k11fpy7RL2ScXRgfyt9Ye","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"5172e123362f767d6d30c82e7a1bab3d","path":"/erad2024/_preview/100/build/5172e123362f767d6d30c82e7a1bab3d.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"d8cm1hkiIf"}],"key":"hbrlbFmT2r"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"i0IaV06DS8"}],"key":"pocv2Vt0tL"}],"key":"DTf2Xv4AVt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:10.826749Z","iopub.status.busy":"2024-09-04T14:27:10.826519Z","iopub.status.idle":"2024-09-04T14:27:10.831361Z","shell.execute_reply":"2024-09-04T14:27:10.830773Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"mZbgq4qwWL"},{"type":"output","id":"RbCEAKzesq5QCorBc28-6","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"IPTcFhtCH7"}],"key":"UzkEID6fFX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:10.833453Z","iopub.status.busy":"2024-09-04T14:27:10.833276Z","iopub.status.idle":"2024-09-04T14:27:11.018797Z","shell.execute_reply":"2024-09-04T14:27:11.018233Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"jGkFXg3Gpj"},{"type":"output","id":"SDpC46CjTdKrPncY-2pKi","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"Jxt78qmvDB"}],"key":"Xp4cEta5Ig"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:11.021444Z","iopub.status.busy":"2024-09-04T14:27:11.021277Z","iopub.status.idle":"2024-09-04T14:27:11.025004Z","shell.execute_reply":"2024-09-04T14:27:11.024462Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"pcd56Gz95X"},{"type":"output","id":"hZq99EaMYO8W4G2jVmIZi","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"LG0MsNlzzr"}],"key":"WgymxDkNLI"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:11.027024Z","iopub.status.busy":"2024-09-04T14:27:11.026594Z","iopub.status.idle":"2024-09-04T14:27:11.029364Z","shell.execute_reply":"2024-09-04T14:27:11.028942Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"mIEf9pDAaM"},{"type":"output","id":"uZBJpxO92Et9pgUjH5v65","data":[],"key":"IZ0zLPYGT9"}],"key":"FvuyaGyWR0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TQFsEiXG8q"}],"key":"q5gKzLkXv7"}],"key":"QhXkz5bCTF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:11.031136Z","iopub.status.busy":"2024-09-04T14:27:11.030972Z","iopub.status.idle":"2024-09-04T14:27:11.481852Z","shell.execute_reply":"2024-09-04T14:27:11.481193Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"ZNQm0HtbfH"},{"type":"output","id":"wAOHsKFpRfUyfyybIdGyl","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"63147b74fe3ac94dfbdaa9af6b21ef11","path":"/erad2024/_preview/100/build/63147b74fe3ac94dfbdaa9af6b21ef11.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"St1QaOH9Z9"}],"key":"bvImrOFnZ6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:11.484389Z","iopub.status.busy":"2024-09-04T14:27:11.484169Z","iopub.status.idle":"2024-09-04T14:27:11.980074Z","shell.execute_reply":"2024-09-04T14:27:11.979239Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"WsUFaqVtXY"},{"type":"output","id":"3MLk1gP5OLNSR9FzdVPdq","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4fce6ee0b7bc984a8c8af7835891389f","path":"/erad2024/_preview/100/build/4fce6ee0b7bc984a8c8af7835891389f.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"zaeY8aN7dD"}],"key":"zUEurXoNDC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"xBUpkkeEx6"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"Yk4hr9erHg"}],"key":"T4nYfOwgVC"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"KXgxUTZtu7"}],"key":"eNnSlzY209"}],"key":"zftmpdBL6f"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:11.983463Z","iopub.status.busy":"2024-09-04T14:27:11.982787Z","iopub.status.idle":"2024-09-04T14:27:11.999946Z","shell.execute_reply":"2024-09-04T14:27:11.999259Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"EjvN8O3Hsy"},{"type":"output","id":"gidITy9jgk5j0DgEXwrkc","data":[],"key":"cUNZwKfFoS"}],"key":"LCkNjJxkwN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:12.002772Z","iopub.status.busy":"2024-09-04T14:27:12.002532Z","iopub.status.idle":"2024-09-04T14:27:12.005667Z","shell.execute_reply":"2024-09-04T14:27:12.005059Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"FLmjGmOnIZ"},{"type":"output","id":"vTMMs02i4FgusEgdGZdgW","data":[],"key":"aOIDjlEHyS"}],"key":"aN568GgcQa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ygbe1jcfiG"}],"key":"MCLbqRdZSQ"}],"key":"xgsdo603Ib"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:12.007924Z","iopub.status.busy":"2024-09-04T14:27:12.007699Z","iopub.status.idle":"2024-09-04T14:27:12.463076Z","shell.execute_reply":"2024-09-04T14:27:12.462439Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"VQlmVuwED2"},{"type":"output","id":"P9J-l8Nce5uK7Lj0St4nB","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fcf4661f9324a6cda50379e4ef98121c","path":"/erad2024/_preview/100/build/fcf4661f9324a6cda50379e4ef98121c.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"oAlFWaFmMg"}],"key":"Hg41sv2Hvv"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CWysiOzFqT"}],"key":"Er4Z9LpqCd"}],"key":"mTeknxSJrP"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:12.465561Z","iopub.status.busy":"2024-09-04T14:27:12.465179Z","iopub.status.idle":"2024-09-04T14:27:12.481008Z","shell.execute_reply":"2024-09-04T14:27:12.480324Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"cGMG8J3CI1"},{"type":"output","id":"7JvHsK4vYO3ra8_xpq937","data":[],"key":"ipOfKnWkOS"}],"key":"LWp8szMyTJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-04T14:27:12.483695Z","iopub.status.busy":"2024-09-04T14:27:12.483302Z","iopub.status.idle":"2024-09-04T14:27:13.289324Z","shell.execute_reply":"2024-09-04T14:27:13.288756Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"w5SHqrieSP"},{"type":"output","id":"MKJU4NLCnNnMxJM08JucT","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"i9pwuLIYWq"}],"key":"Foyh3lNCNE"}],"key":"BpWjk6HaNr"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}