{"kind":"Notebook","sha256":"1b01754b35fe19a61b3b66f85ba90028d8627925f6643591cc6a5939eba906d8","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/_preview/100/build/0_baltrad_pyart_rain-8688603a1345dabf072623b1bb1eaa16.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YohriipLrU"}],"key":"jlKfWcBLDR"}],"key":"VOGlR5Ze8A"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YX6IcNifMu"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"GYKx5ecOI2"}],"key":"CJKKuHb6OA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:54:58.322407Z","iopub.status.busy":"2024-09-02T06:54:58.322210Z","iopub.status.idle":"2024-09-02T06:54:59.312463Z","shell.execute_reply":"2024-09-02T06:54:59.311680Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"VAcVhZTdRY"},{"type":"output","id":"d28HCgQVPQnL0gZ18yMfa","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"uf766ayMMe"}],"key":"FNya7vlvEc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:54:59.315113Z","iopub.status.busy":"2024-09-02T06:54:59.314890Z","iopub.status.idle":"2024-09-02T06:54:59.675232Z","shell.execute_reply":"2024-09-02T06:54:59.674752Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"x9uJjFOy83"},{"type":"output","id":"Etda-_bRHFbOfbzaQX-sP","data":[],"key":"U2sIEuSDlF"}],"key":"OxPEmZ3mgm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uPLCUG13Ss"}],"key":"ZtYtLrF2cM"}],"key":"M97EZoSJCe"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:54:59.677704Z","iopub.status.busy":"2024-09-02T06:54:59.677478Z","iopub.status.idle":"2024-09-02T06:55:00.976448Z","shell.execute_reply":"2024-09-02T06:55:00.975837Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"l16Jm1dN8y"},{"type":"output","id":"frzPH6o0OMwwVxlUedu6-","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"kvhUcGT794"}],"key":"vd15STU04O"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KkjJTee1Ts"}],"key":"A84sIZCHiV"}],"key":"nD8duTk4vo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q4NSW1l5Eb"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"xl3GAD59uz"}],"key":"qmxWfzUCOl"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:00.978951Z","iopub.status.busy":"2024-09-02T06:55:00.978353Z","iopub.status.idle":"2024-09-02T06:55:01.021257Z","shell.execute_reply":"2024-09-02T06:55:01.020712Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"ofnlBueIK0"},{"type":"output","id":"h0yDxBI-lZ0O_NyYTkPZw","data":[],"key":"RTxMZeKKMH"}],"key":"b01RJEHxHH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wZUDCOHhXH"}],"key":"EWv0XpETLw"}],"key":"clZgC3kjeC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:01.023242Z","iopub.status.busy":"2024-09-02T06:55:01.023058Z","iopub.status.idle":"2024-09-02T06:55:01.065366Z","shell.execute_reply":"2024-09-02T06:55:01.064855Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"a7PUKymeuL"},{"type":"output","id":"5rQ_feT7JEtZkfHmXbdYh","data":[],"key":"nS8gyBm7SK"}],"key":"yuGHJQ5t25"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pN1YyKuVwB"}],"key":"PXASMPQpBF"}],"key":"FqRRQnnZCe"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:01.067749Z","iopub.status.busy":"2024-09-02T06:55:01.067565Z","iopub.status.idle":"2024-09-02T06:55:01.070198Z","shell.execute_reply":"2024-09-02T06:55:01.069766Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"fwmiu9K9IV"},{"type":"output","id":"NPx_oSr50Y_zNc14kT_RM","data":[],"key":"KQk3FS52eH"}],"key":"c8UcLagLRK"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:01.071968Z","iopub.status.busy":"2024-09-02T06:55:01.071805Z","iopub.status.idle":"2024-09-02T06:55:01.567508Z","shell.execute_reply":"2024-09-02T06:55:01.566929Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"O1kT92QWPD"},{"type":"output","id":"vh7RL28mRulPzluZkSvyv","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"878dcf640f08e93e2742eebe7989483f","path":"/erad2024/_preview/100/build/878dcf640f08e93e2742eebe7989483f.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"Xw1H2PiKPF"}],"key":"No8NMGScFR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:01.570731Z","iopub.status.busy":"2024-09-02T06:55:01.570309Z","iopub.status.idle":"2024-09-02T06:55:02.059963Z","shell.execute_reply":"2024-09-02T06:55:02.059414Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"ipsR22UyTJ"},{"type":"output","id":"knQTIB0w2tyS8qdJPQFZo","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"0be2edba40411724fbc0ddcbd1faa0db","path":"/erad2024/_preview/100/build/0be2edba40411724fbc0ddcbd1faa0db.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"J5pbfGH6cu"}],"key":"J9nBpziiaT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:02.062587Z","iopub.status.busy":"2024-09-02T06:55:02.062155Z","iopub.status.idle":"2024-09-02T06:55:02.516589Z","shell.execute_reply":"2024-09-02T06:55:02.515937Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"mFcmyT4Eur"},{"type":"output","id":"IKvPjtlshxfYM2Ip_WhT7","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"dc0e781259e477361627a044eeb0b05e","path":"/erad2024/_preview/100/build/dc0e781259e477361627a044eeb0b05e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"OYaHwvP52H"}],"key":"p8I0V9oTw0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:02.518999Z","iopub.status.busy":"2024-09-02T06:55:02.518567Z","iopub.status.idle":"2024-09-02T06:55:03.013193Z","shell.execute_reply":"2024-09-02T06:55:03.012626Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"jqpVzNcFQp"},{"type":"output","id":"xlTjhZo9wA_U6q1njqeg-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"5172e123362f767d6d30c82e7a1bab3d","path":"/erad2024/_preview/100/build/5172e123362f767d6d30c82e7a1bab3d.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"BLToIJ8TUs"}],"key":"OdrFFnJ1Vh"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dWNxWR0Twi"}],"key":"DbhCd4m1bh"}],"key":"HZdoxCfAaw"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:03.016786Z","iopub.status.busy":"2024-09-02T06:55:03.016105Z","iopub.status.idle":"2024-09-02T06:55:03.022601Z","shell.execute_reply":"2024-09-02T06:55:03.021989Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"muA12GlSTn"},{"type":"output","id":"8yItZbsIEEuS8oMuaVCk1","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"KyJn7wieuO"}],"key":"ATtqMgwDeN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:03.025459Z","iopub.status.busy":"2024-09-02T06:55:03.025227Z","iopub.status.idle":"2024-09-02T06:55:03.208529Z","shell.execute_reply":"2024-09-02T06:55:03.207903Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"Uk7O5mxQFt"},{"type":"output","id":"ghTN94vNCLVMsv-46Jvmw","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"x0daoyB5Q2"}],"key":"PPksF6gmg6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:03.210838Z","iopub.status.busy":"2024-09-02T06:55:03.210441Z","iopub.status.idle":"2024-09-02T06:55:03.215100Z","shell.execute_reply":"2024-09-02T06:55:03.214624Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"MHqOxqvGNP"},{"type":"output","id":"6VhgNk8D6IcMyNJY0Dln-","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"WdXGBBFbZt"}],"key":"sYQ2JuV7Ib"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:03.217265Z","iopub.status.busy":"2024-09-02T06:55:03.216796Z","iopub.status.idle":"2024-09-02T06:55:03.219632Z","shell.execute_reply":"2024-09-02T06:55:03.219121Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"xrI3ZH4f1y"},{"type":"output","id":"BNBigPyNTqhvPjX-SiQNa","data":[],"key":"RvllnHBLwE"}],"key":"ZLrPWC2XZS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a1MWMYFCKy"}],"key":"gEfheVtC7o"}],"key":"ucpIjl3ycH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:03.221608Z","iopub.status.busy":"2024-09-02T06:55:03.221429Z","iopub.status.idle":"2024-09-02T06:55:03.671937Z","shell.execute_reply":"2024-09-02T06:55:03.671410Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"RI7C7vW9gB"},{"type":"output","id":"N0zujbWMnnENLFmNDFJXO","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"63147b74fe3ac94dfbdaa9af6b21ef11","path":"/erad2024/_preview/100/build/63147b74fe3ac94dfbdaa9af6b21ef11.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"C3y7olT5Qq"}],"key":"eaGJdecxlT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:03.674274Z","iopub.status.busy":"2024-09-02T06:55:03.674068Z","iopub.status.idle":"2024-09-02T06:55:04.158311Z","shell.execute_reply":"2024-09-02T06:55:04.157432Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"kXzaR0kIf1"},{"type":"output","id":"xRyXhI-Wncs4Evaiezeec","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4fce6ee0b7bc984a8c8af7835891389f","path":"/erad2024/_preview/100/build/4fce6ee0b7bc984a8c8af7835891389f.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"ET5NJN7k0C"}],"key":"Y4vsqpS9JO"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"WNO7MOZK33"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"YXyApdGU7a"}],"key":"t1DyPCrcd5"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"f4Ws8CKP66"}],"key":"hwJaJaSxdE"}],"key":"cMBVWBE7dJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:04.161791Z","iopub.status.busy":"2024-09-02T06:55:04.161145Z","iopub.status.idle":"2024-09-02T06:55:04.177978Z","shell.execute_reply":"2024-09-02T06:55:04.177361Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"osE0zu7MFB"},{"type":"output","id":"P7MDlYWGdQPtFLLFOkeYT","data":[],"key":"pKmc11iREH"}],"key":"nkdPeBGNtO"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:04.180894Z","iopub.status.busy":"2024-09-02T06:55:04.180336Z","iopub.status.idle":"2024-09-02T06:55:04.183694Z","shell.execute_reply":"2024-09-02T06:55:04.183139Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"XNESuzgfq0"},{"type":"output","id":"qwvfKJ4Z5TjqjEmqBWluc","data":[],"key":"cCUapfLJa7"}],"key":"BPU0MCe5LF"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xHaX7Bcx6R"}],"key":"dnJtlwzVRu"}],"key":"AW8Eb5SHNq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:04.185840Z","iopub.status.busy":"2024-09-02T06:55:04.185648Z","iopub.status.idle":"2024-09-02T06:55:04.619157Z","shell.execute_reply":"2024-09-02T06:55:04.618530Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"jNx9oR2dTc"},{"type":"output","id":"F94aH7XVtHgn69Gkv6lOI","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fcf4661f9324a6cda50379e4ef98121c","path":"/erad2024/_preview/100/build/fcf4661f9324a6cda50379e4ef98121c.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"D6T2iuuKlH"}],"key":"XKHrpU0H5W"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZulFF69bTz"}],"key":"V8Whorq1BR"}],"key":"vuWXwoWrTp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:04.621705Z","iopub.status.busy":"2024-09-02T06:55:04.621274Z","iopub.status.idle":"2024-09-02T06:55:04.637915Z","shell.execute_reply":"2024-09-02T06:55:04.637374Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"yfqKOBYMLg"},{"type":"output","id":"AocbtCHNxCgkMDfTciGzP","data":[],"key":"ZRsqSUrq92"}],"key":"dPnF5ssWBy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-02T06:55:04.640534Z","iopub.status.busy":"2024-09-02T06:55:04.640010Z","iopub.status.idle":"2024-09-02T06:55:05.436817Z","shell.execute_reply":"2024-09-02T06:55:05.436294Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"QfHt0oMnNT"},{"type":"output","id":"iR7m8DP3PyW50BThzC6sF","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"TKVfEB9QgC"}],"key":"kwWsSkww0c"}],"key":"y5lBZ51JhX"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}