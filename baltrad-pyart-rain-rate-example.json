{"kind":"Notebook","sha256":"07e0e2cd999e3fe1a2869ae7faef7aea03c2c4be55de7be859825d84c0bf243e","slug":"baltrad-pyart-rain-rate-example","location":"/notebooks/baltrad/pyart2baltrad/0_baltrad_pyart_rain_rate_example.ipynb","dependencies":[],"frontmatter":{"title":"Rain Rate retrieval with Py-ART","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","name":"Apache License 2.0","osi":true,"free":true,"url":"https://opensource.org/licenses/Apache-2.0"},"code":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"settings":{"output_matplotlib_strings":"remove"},"exports":[{"format":"ipynb","filename":"0_baltrad_pyart_rain_rate_example.ipynb","url":"/erad2024/build/0_baltrad_pyart_rain-bda1f01f244f04891bc5b608d5e5c383.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this notebook, an ODIM_H5 file is read using BALTRAD. Then the rain rate is determined from the calculated specific attenuation using Py-ART.\nThis is a severe flooding case from July 8, 2013 in Toronto, Canada, with radar data from the King City, Ontario, radar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ovgY8gCYMx"}],"key":"OvNtCKuNSg"}],"key":"glvAc0uGXH"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rxlMY4REK7"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"KLeECcWDkW"}],"key":"ONDN3uMguh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:23.818326Z","iopub.status.busy":"2024-09-05T16:34:23.817838Z","iopub.status.idle":"2024-09-05T16:34:24.521193Z","shell.execute_reply":"2024-09-05T16:34:24.520594Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/pyart2baltrad\"\n!mkdir -p data\nfiles = [\"WKR_201307082030.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file0}\", name)","key":"WcFUhy0Zgt"},{"type":"output","id":"Noiu5KP6no0z6YZqiO8Bd","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/WKR_201307082030.h5\n"}],"key":"ajGtSZiazV"}],"key":"exAKIj4Udp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:24.523587Z","iopub.status.busy":"2024-09-05T16:34:24.523404Z","iopub.status.idle":"2024-09-05T16:34:24.887861Z","shell.execute_reply":"2024-09-05T16:34:24.887302Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"UHymFSYPQI"},{"type":"output","id":"xJbIAdmzWPMo2qUhghXcO","data":[],"key":"tEPUTTl2yn"}],"key":"vLq5A1y7d3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the necessary modules.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nVcjZUiRKC"}],"key":"PnYUa0bsl6"}],"key":"wV9TvGcyXu"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:24.890638Z","iopub.status.busy":"2024-09-05T16:34:24.890232Z","iopub.status.idle":"2024-09-05T16:34:26.383989Z","shell.execute_reply":"2024-09-05T16:34:26.383372Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pyart\nimport baltrad_pyart_bridge as bridge  # routines to pass data from Py-ART and BALTRAD\nimport _raveio  # BALTRAD's input/output module\nimport cmweather","key":"XhiQWJQidv"},{"type":"output","id":"FHfEO5V7p12Vg1bCLydou","data":[{"name":"stdout","output_type":"stream","text":"\n## You are using the Python ARM Radar Toolkit (Py-ART), an open source\n## library for working with weather radar data. Py-ART is partly\n## supported by the U.S. Department of Energy as part of the Atmospheric\n## Radiation Measurement (ARM) Climate Research Facility, an Office of\n## Science user facility.\n##\n## If you use this software to prepare a publication, please cite:\n##\n##     JJ Helmus and SM Collis, JORS 2016, doi: 10.5334/jors.119\n\n"}],"key":"tApRxaWoyu"}],"key":"eYiq3nMYnJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read in the data using RAVE (a component of BALTRAD)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TBZuyLJGgb"}],"key":"kMVknhmed4"}],"key":"gdO9IXWaY6"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"z7fv2SCRN7"}],"identifier":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","label":"Rain rate retrieval using specific attenuation using BALTRAD and Py-ART","html_id":"rain-rate-retrieval-using-specific-attenuation-using-baltrad-and-py-art","implicit":true,"key":"rXKe0ZOqRd"}],"key":"bxUuuvbbij"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:26.386568Z","iopub.status.busy":"2024-09-05T16:34:26.386153Z","iopub.status.idle":"2024-09-05T16:34:26.421007Z","shell.execute_reply":"2024-09-05T16:34:26.420481Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/WKR_201307082030.h5\")","key":"dGJ76pqzbS"},{"type":"output","id":"_kKkNecA95t9gN3H0hYVO","data":[],"key":"cSkd25ue97"}],"key":"g2d7FWTNBD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert the data to a Py-ART Radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VIQ3nTyeTD"}],"key":"fvhoaUTo74"}],"key":"rDKqFsfIpZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:26.423364Z","iopub.status.busy":"2024-09-05T16:34:26.422912Z","iopub.status.idle":"2024-09-05T16:34:26.471372Z","shell.execute_reply":"2024-09-05T16:34:26.470763Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar = bridge.raveio2radar(rio)","key":"fSGXcQXAtC"},{"type":"output","id":"uq3NLNKU3hkipJn8MHksz","data":[],"key":"YY9U7olBdL"}],"key":"w9uLzQqe1y"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine some of the radar moments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nPk4wyMeTr"}],"key":"zl8scKO16f"}],"key":"eVB3gHYc7m"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:26.474041Z","iopub.status.busy":"2024-09-05T16:34:26.473667Z","iopub.status.idle":"2024-09-05T16:34:26.476495Z","shell.execute_reply":"2024-09-05T16:34:26.475989Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display = pyart.graph.RadarDisplay(radar)","key":"wC1uM8BLS3"},{"type":"output","id":"tp6FbUGRgW8jIk_snYQOW","data":[],"key":"zUcJN2p6dn"}],"key":"qs6l1TueBd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:26.478361Z","iopub.status.busy":"2024-09-05T16:34:26.478205Z","iopub.status.idle":"2024-09-05T16:34:26.948806Z","shell.execute_reply":"2024-09-05T16:34:26.948192Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"DBZH\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"eTeUJw561X"},{"type":"output","id":"5Zjy4Y129A0W7bCABp10A","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8b39e6927a01ff0c184d16979b4963d6","path":"/erad2024/build/8b39e6927a01ff0c184d16979b4963d6.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"F7jAeIIGvL"}],"key":"lQEve157sI"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:26.951594Z","iopub.status.busy":"2024-09-05T16:34:26.951352Z","iopub.status.idle":"2024-09-05T16:34:27.424687Z","shell.execute_reply":"2024-09-05T16:34:27.424116Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"PHIDP\", 0, vmin=0, vmax=180, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"MUOLgu6lmj"},{"type":"output","id":"LTalX-eYUQc5nATgiqstx","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d0d3de6aa22b9e1ab84d02cccd7a63e2","path":"/erad2024/build/d0d3de6aa22b9e1ab84d02cccd7a63e2.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"podJrN6hK8"}],"key":"lB6XMHX46I"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:27.426785Z","iopub.status.busy":"2024-09-05T16:34:27.426608Z","iopub.status.idle":"2024-09-05T16:34:27.867027Z","shell.execute_reply":"2024-09-05T16:34:27.866337Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RHOHV\", 0, vmin=0, vmax=1.0, mask_outside=False, cmap=\"CM_rhohv\")\ndisplay.plot_range_rings([50, 100, 150])","key":"DQ4XFutEWv"},{"type":"output","id":"LHznuA66QZWkqn_Gr9pcI","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"76d547e993b9243118119290bce0c8fe","path":"/erad2024/build/76d547e993b9243118119290bce0c8fe.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"EzsDLEYqTP"}],"key":"pcYqSwlA9y"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:27.869404Z","iopub.status.busy":"2024-09-05T16:34:27.869187Z","iopub.status.idle":"2024-09-05T16:34:28.328483Z","shell.execute_reply":"2024-09-05T16:34:28.327857Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"SQIH\", 0, vmin=0, vmax=1, mask_outside=False, cmap=\"ChaseSpectral\")\ndisplay.plot_range_rings([50, 100, 150])","key":"HCtyg9hhFL"},{"type":"output","id":"i0eF3mAl_cj-DCOR9M9l0","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"31a800e839c8e96341161962d6780786","path":"/erad2024/build/31a800e839c8e96341161962d6780786.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"uqa9jhNCeh"}],"key":"HnCft8VHIF"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the specific attenuation and attenuation corrected reflectivity using Py-ART, add these field to the radar object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WUyRxmSsl7"}],"key":"FWYminUwxK"}],"key":"MhJUKvZIYy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:28.331784Z","iopub.status.busy":"2024-09-05T16:34:28.331559Z","iopub.status.idle":"2024-09-05T16:34:28.335605Z","shell.execute_reply":"2024-09-05T16:34:28.335095Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"FTXybV3l2A"},{"type":"output","id":"dBi_uPZo02lmhVfQDGlGn","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"VnhXhPW4B3"}],"key":"C8SiFonxkL"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:28.337397Z","iopub.status.busy":"2024-09-05T16:34:28.337228Z","iopub.status.idle":"2024-09-05T16:34:28.517697Z","shell.execute_reply":"2024-09-05T16:34:28.517101Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"spec_at, cor_z = pyart.correct.calculate_attenuation(\n    radar,\n    0,\n    doc=0,\n    refl_field=\"DBZH\",\n    ncp_field=\"SQIH\",\n    rhv_field=\"RHOHV\",\n    phidp_field=\"PHIDP\",\n    fzl=8000,\n)\n# use the parameter below for a more 'cleanup up' attenuation field\n# ncp_min=-1, rhv_min=-1)","key":"B6EvXyqLDI"},{"type":"output","id":"0kG4hqrmE81EkvzxMvC89","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/numpy/core/fromnumeric.py:771: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  a.partition(kth, axis=axis, kind=kind, order=order)\n"}],"key":"fstYYU8VMP"}],"key":"AwknF2t7EJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:28.519810Z","iopub.status.busy":"2024-09-05T16:34:28.519628Z","iopub.status.idle":"2024-09-05T16:34:28.523438Z","shell.execute_reply":"2024-09-05T16:34:28.522912Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.info()","key":"aMvZRlCz7o"},{"type":"output","id":"8NJWBl2IQWMMn3OdIWfL9","data":[{"name":"stdout","output_type":"stream","text":"altitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Altitude\n\tstandard_name: Altitude\n\tunits: meters\n\tpositive: up\naltitude_agl: None\nantenna_transition: None\nazimuth:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_azimuth_angle\n\tlong_name: azimuth_angle_from_true_north\n\taxis: radial_azimuth_coordinate\n\tcomment: Azimuth of antenna relative to true north\nelevation:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: degrees\n\tstandard_name: beam_elevation_angle\n\tlong_name: elevation_angle_from_horizontal_plane\n\taxis: radial_elevation_coordinate\n\tcomment: Elevation of antenna relative to the horizontal plane\nfields:\n\tDBZH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tRHOHV:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tWRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tPHIDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tZDR:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tSQIH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tVRADH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tKDP:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\n\tTH:\n\t\tdata: <ndarray of type: float32 and shape: (720, 600)>\nfixed_angle:\n\tdata: <ndarray of type: float32 and shape: (1,)>\n\tlong_name: Target angle for sweep\n\tunits: degrees\n\tstandard_name: target_fixed_angle\ninstrument_parameters:\n\tradar_beam_width_h:\n\t\tdata: <ndarray of type: float32 and shape: (1,)>\n\t\tunits: degrees\n\t\tmeta_group: radar_parameters\n\t\tlong_name: Antenna beam width H polarization\nlatitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Latitude\n\tstandard_name: Latitude\n\tunits: degrees_north\nlongitude:\n\tdata: <ndarray of type: float64 and shape: (1,)>\n\tlong_name: Longitude\n\tstandard_name: Longitude\n\tunits: degrees_east\nnsweeps: 1\nngates: 600\nnrays: 720\nradar_calibration: None\nrange:\n\tdata: <ndarray of type: float32 and shape: (600,)>\n\tunits: meters\n\tstandard_name: projection_range_coordinate\n\tlong_name: range_to_measurement_volume\n\taxis: radial_range_coordinate\n\tspacing_is_constant: true\n\tcomment: Coordinate variable for range. Range to center of each bin.\n\tmeters_to_center_of_first_gate: 0.0\n\tmeters_between_gates: 250.0\nscan_rate: None\nscan_type: ppi\nsweep_end_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of last ray in sweep, 0-based\n\tunits: count\nsweep_mode:\n\tdata: <ndarray of type: <U20 and shape: (1,)>\n\tunits: unitless\n\tstandard_name: sweep_mode\n\tlong_name: Sweep mode\n\tcomment: Options are: \"sector\", \"coplane\", \"rhi\", \"vertical_pointing\", \"idle\", \"azimuth_surveillance\", \"elevation_surveillance\", \"sunscan\", \"pointing\", \"manual_ppi\", \"manual_rhi\"\nsweep_number:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tunits: count\n\tstandard_name: sweep_number\n\tlong_name: Sweep number\nsweep_start_ray_index:\n\tdata: <ndarray of type: int32 and shape: (1,)>\n\tlong_name: Index of first ray in sweep, 0-based\n\tunits: count\ntarget_scan_rate: None\ntime:\n\tdata: <ndarray of type: float32 and shape: (720,)>\n\tunits: seconds since 2013-07-08T20:33:35Z\n\tstandard_name: time\n\tlong_name: time_in_seconds_since_volume_start\n\tcalendar: gregorian\n\tcomment: Coordinate variable for time. Time at the center of each ray, in fractional seconds since the global variable time_coverage_start\nmetadata:\n\tConventions: CF/Radial instrument_parameters\n\tversion: 1.3\n\ttitle: \n\tinstitution: \n\treferences: \n\tsource: NOD:cawkr,PLC:King ON\n\thistory: \n\tcomment: \n\tinstrument_name: \n\toriginal_container: odim_h5\n"}],"key":"u8avrmQeOb"}],"key":"gMLZwUlz8C"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:28.525409Z","iopub.status.busy":"2024-09-05T16:34:28.525061Z","iopub.status.idle":"2024-09-05T16:34:28.527806Z","shell.execute_reply":"2024-09-05T16:34:28.527306Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"specific_attenuation\", spec_at)\nradar.add_field(\"corrected_reflectivity\", cor_z)","key":"DpMleVsErx"},{"type":"output","id":"R404UijIvem39cbez3j4z","data":[],"key":"DvThSQZEHq"}],"key":"Ls9PYDAoZj"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine these two new fields.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tT3pFtlerZ"}],"key":"b5hOzWhBQB"}],"key":"q0R8yya2Wp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:28.529677Z","iopub.status.busy":"2024-09-05T16:34:28.529502Z","iopub.status.idle":"2024-09-05T16:34:28.979887Z","shell.execute_reply":"2024-09-05T16:34:28.979265Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"specific_attenuation\", 0, vmin=0, vmax=0.1)\ndisplay.plot_range_rings([50, 100, 150])","key":"E2xOXq3UCh"},{"type":"output","id":"n291FScaaUOsBrPooMCO6","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3141f5bacba2deb7895514cb6566e7c5","path":"/erad2024/build/3141f5bacba2deb7895514cb6566e7c5.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"QELa0kY4df"}],"key":"iblQoMtuCu"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:28.982497Z","iopub.status.busy":"2024-09-05T16:34:28.981956Z","iopub.status.idle":"2024-09-05T16:34:29.449824Z","shell.execute_reply":"2024-09-05T16:34:29.449247Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"corrected_reflectivity\", 0, vmin=-15, vmax=60)\ndisplay.plot_range_rings([50, 100, 150])","key":"pvVin71bi3"},{"type":"output","id":"n5FxiO1rPwF51_QHeT8h3","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"afede5cc14eca444ea79e4b2ceebdf9e","path":"/erad2024/build/afede5cc14eca444ea79e4b2ceebdf9e.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"x78Y0Kl94T"}],"key":"KpcW2SaNzT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the rain rate from the specific attenuation using a power law determined from the ","key":"On8bLxarxC"},{"type":"abbreviation","title":"Atmospheric Radiation Measurement","children":[{"type":"text","value":"ARM","key":"vE3xvxEwYZ"}],"key":"TGdwAdw6Vs"},{"type":"text","value":" Southern Great Plains site.  Mask values where the attenuation is not valid (when the cross correlation ratio or signal quality is low). Add this field to the radar object.","key":"U4Nt0NXGMs"}],"key":"HpECEkngbe"}],"key":"QK0iNLOXSc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:29.452227Z","iopub.status.busy":"2024-09-05T16:34:29.452001Z","iopub.status.idle":"2024-09-05T16:34:29.463158Z","shell.execute_reply":"2024-09-05T16:34:29.462605Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"R = 300.0 * (radar.fields[\"specific_attenuation\"][\"data\"]) ** 0.89\nrain_rate_dic = pyart.config.get_metadata(\"rain_rate\")\nrain_rate_dic[\"units\"] = \"mm/hr\"\nrate_not_valid = np.logical_or(\n    (radar.fields[\"SQIH\"][\"data\"] < 0.4), (radar.fields[\"RHOHV\"][\"data\"] < 0.8)\n)\nrain_rate_dic[\"data\"] = np.ma.masked_where(rate_not_valid, R)\n# fill the missing values with 0 for a nicer plot\nrain_rate_dic[\"data\"] = np.ma.filled(rain_rate_dic[\"data\"], 0)","key":"Y675WvOhg7"},{"type":"output","id":"x7_ze2IjHrl5XaQRubVtA","data":[],"key":"pqQNDVAh7A"}],"key":"MWCXQ2ZOLU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:29.465173Z","iopub.status.busy":"2024-09-05T16:34:29.464990Z","iopub.status.idle":"2024-09-05T16:34:29.468248Z","shell.execute_reply":"2024-09-05T16:34:29.467596Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar.add_field(\"RATE\", rain_rate_dic)","key":"zXd7a1kcun"},{"type":"output","id":"pqStv_14_089BRyqRbxEH","data":[],"key":"bXfJy56GmV"}],"key":"pfwwHSm0ke"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examine the rain rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eY34IY1MEx"}],"key":"iyQNrLVx8E"}],"key":"JZu3gtyxxD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:29.470385Z","iopub.status.busy":"2024-09-05T16:34:29.470209Z","iopub.status.idle":"2024-09-05T16:34:29.886248Z","shell.execute_reply":"2024-09-05T16:34:29.885695Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display.plot_ppi(\"RATE\", 0, vmin=0, vmax=50.0)","key":"o3q1ukIIC9"},{"type":"output","id":"oQA4F-vkI78BxNJgVHwNg","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da58bd85131b834581c1108316d388f7","path":"/erad2024/build/da58bd85131b834581c1108316d388f7.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"hn0rgWwZNY"}],"key":"qdYdI6iKWZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a new RaveIO object from the Py-ART radar object and write this out using Rave","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jOgFBqOUB2"}],"key":"gxwxT3tntz"}],"key":"axyw8VgrGq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:29.888489Z","iopub.status.busy":"2024-09-05T16:34:29.888113Z","iopub.status.idle":"2024-09-05T16:34:29.904289Z","shell.execute_reply":"2024-09-05T16:34:29.903772Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"rio_out = bridge.radar2raveio(radar)","key":"mI7SEjLDsa"},{"type":"output","id":"u3tcU3FJhVeyh7Rv5xru_","data":[],"key":"mnN5ahtPaI"}],"key":"XiyrxT4MWt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-09-05T16:34:29.906548Z","iopub.status.busy":"2024-09-05T16:34:29.906360Z","iopub.status.idle":"2024-09-05T16:34:30.706235Z","shell.execute_reply":"2024-09-05T16:34:30.705551Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = rio_out.object\ncontainer.save(\"data/WKR_201307082030_with_rain_rate.h5\")\n\nimport os\n\nprint(\n    \"ODIM_H5 file is %i bytes large\"\n    % os.path.getsize(\"data/WKR_201307082030_with_rain_rate.h5\")\n)","key":"RtF7ePq0Df"},{"type":"output","id":"w5lV30ofaYB9HKLDYJTDS","data":[{"name":"stdout","output_type":"stream","text":"ODIM_H5 file is 6259795 bytes large\n"}],"key":"qA8Fqc3YNn"}],"key":"DAUsWCJ9fu"}],"key":"Lkl8ADvCVJ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"},"next":{"title":"Doppler Velocity Dealiasing with Py-ART","url":"/pyart-baltrad-dealias-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}